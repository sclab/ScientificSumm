For the evaluation of our approach, we have examined
whether and to which extent the requirements (mainly 
regarding privacy, performance, and quality) are actually met.
Privacy aspects are directly addressed by the modules and
protocols described above and therefore not evaluated 
further here. Performance is a critical issue, mainly because of
the overhead caused by creating additional agents and agent
platforms for controlling communication, and by the 
additional interactions within the Recommender Module. 
Overall, a single information filtering process takes about ten
times longer than a non-privacy-preserving information 
filtering process leading to the same results, which is a 
considerable overhead but still acceptable under certain conditions,
as described in the following section.
5.1 The Smart Event Assistant
As a proof of concept, and in order to evaluate 
performance and quality under real-life conditions, we have 
ap324 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)
Figure 2: The Smart Event Assistant, a 
privacypreserving Recommender System supporting users
in planning entertainment-related activities.
plied our approach within the Smart Event Assistant, a
MAS-based Recommender System which integrates various
personalized services for entertainment planning in 
different German cities, such as a restaurant finder and a movie
finder [25]. Additional services, such as a calendar, a 
routing service and news services complement the information
services. An intelligent day planner integrates all 
functionality by providing personalized recommendations for the 
various information services, based on the user"s preferences
and taking into account the location of the user as well as
the potential venues. All services are accessible via mobile
devices as well3
. Figure 2 shows a screenshot of the 
intelligent day planner"s result dialog. The Smart Event 
Assistant is entirely realized as a MAS system providing, among
other functionality, various filter agents and different service
provider agents, which together with the user agents utilize
the functionality provided by our approach.
Recommendations are generated in two ways: A push 
service delivers new recommendations to the user in regular
intervals (e.g. once per day) via email or SMS. Because the
user is not online during these interactions, they are less
critical with regard to performance and the protracted 
duration of the information filtering process is acceptable in
this case. Recommendations generated for the intelligent
day planner, however, have to be delivered with very little
latency because the process is triggered by the user, who
expects to receive results promptly. In this scenario, the
overall performance is substantially improved by setting up
the relay agent and the TFE agent oﬄine, i.e. prior to the
user"s request, and by an efficient retrieval of the relevant
3
The Smart Event Assistant may be accessed online via
http://www.smarteventassistant.de.
Table 4: Complexity of typical privacy-preserving
(PP) vs. non-privacy-preserving (NPP) filtering
processes in the realized application. In the 
nonprivacy-preserving version, an agent retrieves the
profiles directly and propagates the result to a
provider agent.
scenario push day planning
version NPP PP NPP PP
profile size (retrieved/total amount of items)
user 25/25 25/25
provider 125/10,000 500/10,000
elapsed time in filtering process (in seconds)
setup n/a 2.2 n/a oﬄine
database access 0.2 0.5 0.4 0.4
profile propagation n/a 0.8 n/a 0.3
filtering algorithm 0.2 0.2 0.2 0.2
result propagation 0.1 1.1 0.1 1.1
complete time 0.5 4.8 0.7 2.0
part of the provider profile: Because the user is only 
interested in items, such as movies, available within a certain
time period and related to specific locations, such as 
screenings at cinemas in a specific city, the relevant part of the
provider profile is usually small enough to be propagated
entirely. Because these additional parameters are not seen
as privacy-critical (as they are not based on the user 
profile, but rather constitute a short-term information need),
the relevant part of the provider profile may be propagated
as a whole, with no need for complex interactions. Taken
together, these improvements result in a filtering process
that takes about three times as long as the respective 
nonprivacy-preserving filtering process, which we regard as an
acceptable trade-off for the increased level of privacy. Table
4 shows the results of the performance evaluation in more
detail. In these scenarios, a direct content-based filtering
technique similar to the one described in Section 4.3 is 
applied. Because equivalent filtering techniques have been 
applied successfully in regular Recommender Systems [9], there
are no negative consequences with regard to the quality of
the recommendations.
5.2 Alternative Approaches
As described in Section 3.2, our solution is based on
trusted computing. There are more straightforward ways
to realize privacy-preserving IF, e.g. by utilizing a 
centralized architecture in which the privacy-preserving 
providerside functionality is realized as trusted software based on
trusted computing. However, we consider these approaches
to be unsuitable because they are far less generic: Whenever
some part of the respective software is patched, upgraded or
replaced, the entire system has to be analyzed again in order
to determine its trustworthiness, a process that is 
problematic in itself due to its complexity. In our solution, only a
comparatively small part of the overall system is based on
trusted computing. Because agent platforms can be utilized
for a large variety of tasks, and because we see trusted 
computing as the most promising approach to realize secure and
trusted agent environments, it seems reasonable to assume
that these respective mechanisms will be generally available
in the future, independent of specific solutions such as the
one described here.
The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 325
