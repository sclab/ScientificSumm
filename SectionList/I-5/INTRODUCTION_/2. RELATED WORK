Resource allocation is an important problem in the area
of computer science. Over the past years, solutions based on
different assumptions and constraints have been proposed by
different research groups [7, 3, 15, 10]. Generally speaking,
resource allocation is a mechanism or policy for the efficient
and effective management of the access to a limited resource
or set of resources by its consumers. In the simplest case,
resource consumers ask a central broker or dispatcher for
available resources where the resource consumer will be 
allocated. The broker usually has full knowledge about all
system resources. All incoming requests are directed to the
broker who is the solely decision maker. In those approaches,
the resource consumer cannot influence the allocation 
decision process. Load balancing [3] is a special case of the
resource allocation problem using a broker that tries to be
fair to all resources by balancing the system load equally
among all resource providers. This mechanism works best
in a homogeneous system.
A simple distributed technique for resource management
is capacity planning by refusing or queuing incoming agents
to avoid resource overload [11]. From the resource owner
perspective, this technique is important to prevent overload
at the resource but it is not sufficient for effective resource
allocation. This technique can only provide a good 
supplement for distributed resource allocation mechanisms.
Most of today"s techniques for resource allocation in grid
computing toolkits like Globus [12] or Condor-G [13] 
coordinate the resource allocation with an auctioneer, 
arbitrator, dispatcher, scheduler or manager. Those coordinators
usually need to have global knowledge on the state of all
system resources. An example of a dynamic resource 
allocation algorithm is the Cactus project [1] for the allocation
of computational very expensive jobs.
The value of distributed solutions for the resource 
allocation problem has been recognised by research [10]. Inspired
by the principles in stock markets, economic market models
have been developed for trading resources for the 
regulation of supply and demand in the grid. These approaches
use different pricing strategies such as posted price models,
different auction methods or a commodity market model.
Users try to purchase cheap resources required to run the job
while providers try to make as much profit as possible and
operate the available resources at full capacity. A collection
of different distributed resource allocation techniques based
on market models is presented in Clearwater [10]. Buyya et
al. developed a resource allocation framework based on the
regulation of supply and demand [4] for Nimrod-G [6] with
the main focus on job deadlines and budget constraints.
The Agent based Resource Allocation Model (ARAM) for
grids is designed to schedule computational expensive jobs
using agents. Drawback of this model is the extensive use
of message exchange between agents for periodic 
monitoring and information exchange within the hierarchical 
structure. Subtasks of a job migrate through the network until
they find a resource that meets the price constraints. The
job"s migration itinerary is determined by the resources in
connecting them in different topologies [17]. The proposed
mechanism in this paper eliminates the need of periodic 
information exchange about resource loads and does not need
a connection topology between the resources.
There has been considerable work on decentralised 
resource allocation techniques using game theory published
over recent years. Most of them are formulated as 
repetitive games in an idealistic and simplified environment. For
example, Arthur [2] introduced the so called El Farol bar
problem that does not allow a perfect, logical and rational
solution. It is an ill-defined decision problem that assumes
and models inductive reasoning. It is probably one of the
most studied examples of complex adaptive systems derived
from the human way of deciding ill-defined problems. A
variation of the El Farol problem is the so called minority
game [8]. In this repetitive decision game, an odd number of
agents have to choose between two resources based on past
success information trying to allocate itself at the resource
with the minority. Galstyan et al. [14] studied a variation
with more than two resources, changing resource capacities
and information from neighbour agents. They showed that
agents can adapt effectively to changing capacities in this 
environment using a set of simple look-up tables (strategies)
per agent.
Another distributed technique that is employed for solving
the resource allocation problem is based on reinforcement
learning [18]. Similar to our approach, a set of agents 
compete for a limited number of resources based only on prior
individual experience. In this paper, the system objective is
to maximise system throughput while ensuring fairness to
resources, measured as the average processing time per job
unit.
A resource allocation approach for sensor networks based
on self-organisation techniques and reinforcement learning
is presented in [16] with main focus on the optimisation of
energy consumption of network nodes. We [19] proposed a
self-organising load balancing approach for a single server
with focus on optimising the communication costs of mobile
agents. A mobile agent will reject a migration to a remote
agent server, if it expects the destination server to be 
already overloaded by other agents or server tasks. Agents
make their decisions themselves based on forecasts of the
server utilisation. In this paper a solution for a multi-server
environment is presented without consideration of 
communication or migration costs.
