2.1 Dataset description
Our analysis focuses on the recommendation referral 
program run by a large retailer. The program rules were as
follows. Each time a person purchases a book, music, or a
movie he or she is given the option of sending emails 
recommending the item to friends. The first person to purchase
the same item through a referral link in the email gets a 10%
discount. When this happens the sender of the 
recommendation receives a 10% credit on their purchase.
The recommendation dataset consists of 15,646,121 
recommendations made among 3,943,084 distinct users. The
data was collected from June 5 2001 to May 16 2003. In
total, 548,523 products were recommended, 99% of them
belonging to 4 main product groups: Books, DVDs, Music
and Videos. In addition to recommendation data, we also
crawled the retailer"s website to obtain product categories,
reviews and ratings for all products. Of the products in our
data set, 5813 (1%) were discontinued (the retailer no longer
provided any information about them).
Although the data gives us a detailed and accurate view
of recommendation dynamics, it does have its limitations.
The only indication of the success of a recommendation
is the observation of the recipient purchasing the product
through the same vendor. We have no way of knowing if
the person had decided instead to purchase elsewhere, 
borrow, or otherwise obtain the product. The delivery of the
recommendation is also somewhat different from one person
simply telling another about a product they enjoy, possibly
in the context of a broader discussion of similar products.
The recommendation is received as a form email including
information about the discount program. Someone reading
the email might consider it spam, or at least deem it less
important than a recommendation given in the context of
a conversation. The recipient may also doubt whether the
friend is recommending the product because they think the
recipient might enjoy it, or are simply trying to get a 
discount for themselves. Finally, because the recommendation
takes place before the recommender receives the product,
it might not be based on a direct observation of the 
product. Nevertheless, we believe that these recommendation
networks are reflective of the nature of word of mouth 
advertising, and give us key insights into the influence of social
networks on purchasing decisions.
2.2 Recommendation network statistics
For each recommendation, the dataset included the 
product and product price, sender ID, receiver ID, the sent date,
and a buy-bit, indicating whether the recommendation 
resulted in a purchase and discount. The sender and receiver
ID"s were shadowed. We represent this data set as a 
directed multi graph. The nodes represent customers, and
a directed edge contains all the information about the 
recommendation. The edge (i, j, p, t) indicates that i 
recommended product p to customer j at time t.
The typical process generating edges in the 
recommendation network is as follows: a node i first buys a product p at
time t and then it recommends it to nodes j1, . . . , jn. The
j nodes can they buy the product and further recommend
it. The only way for a node to recommend a product is to
first buy it. Note that even if all nodes j buy a product,
only the edge to the node jk that first made the purchase
(within a week after the recommendation) will be marked
by a buy-bit. Because the buy-bit is set only for the first 
person who acts on a recommendation, we identify additional
purchases by the presence of outgoing recommendations for
a person, since all recommendations must be preceded by a
purchase. We call this type of evidence of purchase a 
buyedge. Note that buy-edges provide only a lower bound on the
total number of purchases without discounts. It is possible
for a customer to not be the first to act on a 
recommendation and also to not recommend the product to others.
Unfortunately, this was not recorded in the data set. We
consider, however, the buy-bits and buy-edges as proxies for
the total number of purchases through recommendations.
For each product group we took recommendations on all
products from the group and created a network. Table 1
229
0 1 2 3 4
x 10
6
0
2
4
6
8
10
12
x 10
4
number of nodes
sizeofgiantcomponent
by month
quadratic fit
0 10 20
0
2
4
x 10
6
m (month)
n
# nodes
1.7*10
6
m
10
0
10
1
10
2
10
3
10
1
10
2
10
3
10
4
10
5
10
6
kp
(recommendations by a person for a product)
N(x>=k
p
)
level 0
γ = 2.6
level 1
γ = 2.0
level 2
γ = 1.5
level 3
γ = 1.2
level 4
γ = 1.2
(a) Network growth (b) Recommending by level
Figure 1: (a) The size of the largest connected 
component of customers over time. The inset shows the
linear growth in the number of customers n over
time. (b) The number of recommendations sent by
a user with each curve representing a different depth
of the user in the recommendation chain. A power
law exponent γ is fitted to all but the tail.
(first 7 columns) shows the sizes of various product group
recommendation networks with p being the total number
of products in the product group, n the total number of
nodes spanned by the group recommendation network and
e the number of edges (recommendations). The column eu
shows the number of unique edges - disregarding multiple
recommendations between the same source and recipient.
In terms of the number of different items, there are by far
the most music CDs, followed by books and videos. There
is a surprisingly small number of DVD titles. On the other
hand, DVDs account for more half of all recommendations in
the dataset. The DVD network is also the most dense, 
having about 10 recommendations per node, while books and
music have about 2 recommendations per node and videos
have only a bit more than 1 recommendation per node.
Music recommendations reached about the same number
of people as DVDs but used more than 5 times fewer 
recommendations to achieve the same coverage of the nodes. Book
recommendations reached by far the most people - 2.8 
million. Notice that all networks have a very small number
of unique edges. For books, videos and music the number
of unique edges is smaller than the number of nodes - this
suggests that the networks are highly disconnected [5].
Figure 1(a) shows the fraction of nodes in largest weakly
connected component over time. Notice the component is
very small. Even if we compose a network using all the 
recommendations in the dataset, the largest connected 
component contains less than 2.5% (100,420) of the nodes, and the
second largest component has only 600 nodes. Still, some
smaller communities, numbering in the tens of thousands
of purchasers of DVDs in categories such as westerns, 
classics and Japanese animated films (anime), had connected
components spanning about 20% of their members.
The insert in figure 1(a) shows the growth of the 
customer base over time. Surprisingly it was linear, adding on
average 165,000 new users each month, which is an 
indication that the service itself was not spreading epidemically.
Further evidence of non-viral spread is provided by the 
relatively high percentage (94%) of users who made their first
recommendation without having previously received one.
Back to table 1: given the total number of 
recommendations e and purchases (bb + be) influenced by 
recommendations we can estimate how many recommendations need
to be independently sent over the network to induce a new
purchase. Using this metric books have the most influential
recommendations followed by DVDs and music. For books
one out of 69 recommendations resulted in a purchase. For
DVDs it increases to 108 recommendations per purchase and
further increases to 136 for music and 203 for video.
Even with these simple counts we can make the first few
observations. It seems that some people got quite 
heavily involved in the recommendation program, and that they
tended to recommend a large number of products to the
same set of friends (since the number of unique edges is so
small). This shows that people tend to buy more DVDs and
also like to recommend them to their friends, while they
seem to be more conservative with books. One possible 
reason is that a book is bigger time investment than a DVD:
one usually needs several days to read a book, while a DVD
can be viewed in a single evening.
One external factor which may be affecting the 
recommendation patterns for DVDs is the existence of referral websites
(www.dvdtalk.com). On these websites people, who want to
buy a DVD and get a discount, would ask for 
recommendations. This way there would be recommendations made
between people who don"t really know each other but rather
have an economic incentive to cooperate. We were not able
to find similar referral sharing sites for books or CDs.
2.3 Forward recommendations
Not all people who make a purchase also decide to give
recommendations. So we estimate what fraction of people
that purchase also decide to recommend forward. To obtain
this information we can only use the nodes with purchases
that resulted in a discount.
The last 3 columns of table 1 show that only about a
third of the people that purchase also recommend the 
product forward. The ratio of forward recommendations is much
higher for DVDs than for other kinds of products. Videos
also have a higher ratio of forward recommendations, while
books have the lowest. This shows that people are most keen
on recommending movies, while more conservative when 
recommending books and music.
Figure 1(b) shows the cumulative out-degree distribution,
that is the number of people who sent out at least kp 
recommendations, for a product. It shows that the deeper an
individual is in the cascade, if they choose to make 
recommendations, they tend to recommend to a greater number
of people on average (the distribution has a higher 
variance). This effect is probably due to only very heavily
recommended products producing large enough cascades to
reach a certain depth. We also observe that the probability
of an individual making a recommendation at all (which can
only occur if they make a purchase), declines after an initial
increase as one gets deeper into the cascade.
2.4 Identifying cascades
As customers continue forwarding recommendations, they
contribute to the formation of cascades. In order to 
identify cascades, i.e. the causal propagation of 
recommendations, we track successful recommendations as they influence
purchases and further recommendations. We define a 
recommendation to be successful if it reached a node before its first
purchase. We consider only the first purchase of an item,
because there are many cases when a person made multiple
230
Group p n e eu bb be Purchases Forward Percent
Book 103,161 2,863,977 5,741,611 2,097,809 65,344 17,769 65,391 15,769 24.2
DVD 19,829 805,285 8,180,393 962,341 17,232 58,189 16,459 7,336 44.6
Music 393,598 794,148 1,443,847 585,738 7,837 2,739 7,843 1,824 23.3
Video 26,131 239,583 280,270 160,683 909 467 909 250 27.6
Total 542,719 3,943,084 15,646,121 3,153,676 91,322 79,164 90,602 25,179 27.8
Table 1: Product group recommendation statistics. p: number of products, n: number of nodes, e: number of
edges (recommendations), eu: number of unique edges, bb: number of buy bits, be: number of buy edges. Last
3 columns of the table: Fraction of people that purchase and also recommend forward. Purchases: number
of nodes that purchased. Forward: nodes that purchased and then also recommended the product.
973
938
(a) Medical book (b) Japanese graphic novel
Figure 2: Examples of two product recommendation networks: (a) First aid study guide First Aid for the
USMLE Step, (b) Japanese graphic novel (manga) Oh My Goddess!: Mara Strikes Back.
10
0
10
5
10
0
10
2
10
4
10
6
10
8
Number of recommendations
Count
= 3.4e6 x−2.30
R2
=0.96
10
0
10
1
10
2
10
3
10
4
10
0
10
2
10
4
10
6
10
8
Number of purchases
Count
= 4.1e6 x−2.49
R2
=0.99
(a) Recommendations (b) Purchases
Figure 3: Distribution of the number of 
recommendations and number of purchases made by a node.
purchases of the same product, and in between those 
purchases she may have received new recommendations. In this
case one cannot conclude that recommendations following
the first purchase influenced the later purchases.
Each cascade is a network consisting of customers (nodes)
who purchased the same product as a result of each other"s
recommendations (edges). We delete late recommendations
- all incoming recommendations that happened after the
first purchase of the product. This way we make the 
network time increasing or causal - for each node all incoming
edges (recommendations) occurred before all outgoing edges.
Now each connected component represents a time obeying
propagation of recommendations.
Figure 2 shows two typical product recommendation 
networks: (a) a medical study guide and (b) a Japanese graphic
novel. Throughout the dataset we observe very similar 
patters. Most product recommendation networks consist of a
large number of small disconnected components where we
do not observe cascades. Then there is usually a small 
number of relatively small components with recommendations
successfully propagating.
This observation is reflected in the heavy tailed 
distribution of cascade sizes (see figure 4), having a power-law
exponent close to 1 for DVDs in particular.
We also notice bursts of recommendations (figure 2(b)).
Some nodes recommend to many friends, forming a star like
pattern. Figure 3 shows the distribution of the 
recommendations and purchases made by a single node in the 
recommendation network. Notice the power-law distributions and
long flat tails. The most active person made 83,729 
recommendations and purchased 4,416 different items. Finally,
we also sometimes observe ‘collisions", where nodes receive
recommendations from two or more sources. A detailed 
enumeration and analysis of observed topological cascade 
patterns for this dataset is made in [10].
2.5 The recommendation propagation model
A simple model can help explain how the wide variance we
observe in the number of recommendations made by 
individuals can lead to power-laws in cascade sizes (figure 4). The
model assumes that each recipient of a recommendation will
forward it to others if its value exceeds an arbitrary 
threshold that the individual sets for herself. Since exceeding this
value is a probabilistic event, let"s call pt the probability
that at time step t the recommendation exceeds the 
thresh231
10
0
10
1
10
2
10
0
10
2
10
4
10
6
= 1.8e6 x−4.98
R2
=0.99
10
0
10
1
10
2
10
3
10
0
10
2
10
4
= 3.4e3 x−1.56
R2
=0.83
10
0
10
1
10
2
10
0
10
2
10
4
= 4.9e5 x−6.27
R2
=0.97
10
0
10
1
10
2
10
0
10
2
10
4
= 7.8e4 x−5.87
R2
=0.97
(a) Book (b) DVD (c) Music (d) Video
Figure 4: Size distribution of cascades (size of cascade vs. count). Bold line presents a power-fit.
old. In that case the number of recommendations Nt+1 at
time (t + 1) is given in terms of the number of 
recommendations at an earlier time by
Nt+1 = ptNt (1)
where the probability pt is defined over the unit interval.
Notice that, because of the probabilistic nature of the
threshold being exceeded, one can only compute the final
distribution of recommendation chain lengths, which we now
proceed to do.
Subtracting from both sides of this equation the term Nt
and diving by it we obtain
N(t+1) − Nt
Nt
= pt − 1 (2)
Summing both sides from the initial time to some very
large time T and assuming that for long times the numerator
is smaller than the denominator (a reasonable assumption)
we get
dN
N
= pt (3)
The left hand integral is just ln(N), and the right hand
side is a sum of random variables, which in the limit of a very
large uncorrelated number of recommendations is normally
distributed (central limit theorem).
This means that the logarithm of the number of messages
is normally distributed, or equivalently, that the number of
messages passed is log-normally distributed. In other words
the probability density for N is given by
P(N) =
1
N
√
2πσ2
exp
−(ln(N) − μ)2
2σ2
(4)
which, for large variances describes a behavior whereby
the typical number of recommendations is small (the mode
of the distribution) but there are unlikely events of large
chains of recommendations which are also observable.
Furthermore, for large variances, the lognormal 
distribution can behave like a power law for a range of values. In
order to see this, take the logarithms on both sides of the
equation (equivalent to a log-log plot) and one obtains
ln(P(N)) = − ln(N) − ln(
√
2πσ2) −
(ln (N) − μ)2
2σ2
(5)
So, for large σ, the last term of the right hand side goes
to zero, and since the the second term is a constant one
obtains a power law behavior with exponent value of 
minus one. There are other models which produce power-law
distributions of cascade sizes, but we present ours for its
simplicity, since it does not depend on network topology [6]
or critical thresholds in the probability of a recommendation
being accepted [18].
