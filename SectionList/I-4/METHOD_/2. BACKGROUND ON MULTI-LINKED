NEGOTIATION
In this work, the negotiation process between any pair of agents
is based on an extended version of the contract net [6]: the 
initiator agent announces the proposal including multiple features; the
responding agent evaluates it and responds with either a yes/no 
answer or a counter proposal with some features modified. This 
process can go back and forth until an agreement is reached or the
agents decide to stop. If an agreement is reached and one agent
cannot fulfill the commitment, it needs to pay the other party a 
decommitment penalty as specified in the commitment. A negotiation
starts with a proposal, which announces that a task (t) needs to be
performed includes the following attributes:
1. earliest start time (est): the earliest start time of task t; task
t cannot be started before time est.
2. deadline (dl): the latest finish time of the task; the task needs
to be finished before the deadline dl.
3. minimum quality requirement (minq): the task needs to be
finished with a quality achievement no less than minq.
4. regular reward (r): if the task is finished as the contract 
requested, the contractor agent will get reward r.
5. early finish reward rate (e): if the contractor agent can finish
the task earlier than dl, it will get the extra early finish reward
proportional to this rate.
6. decommitment penalty rate (p): if the contractor agent 
cannot perform the task as it promised in the contract or if the
contractee agent needs to cancel the contract after it has been
confirmed, it also needs to pay a decommitment penalty (p∗r)
to the other agent.
The above attributes are also called attribute-in-negotiation which
are the features of the subject (issue) to be negotiated, and they are
domain-dependent. Another type of attribute 1
is the 
attribute-ofnegotiation, which describes the negotiation process itself and is
domain-independent, such as:
1
These attributes are similar to those used in project management;
however, the multi-linked negotiation problem cannot be 
reduced to a project management problem or a scheduling 
problem. The multi-linked negotiation problem has two dimensions:
the negotiations, and the subjects of negotiations. The negotiations
are interrelated and the subjects are interrelated; the attributes of
negotiations and the attributes of the subjects are interrelated as
well. This two-dimensional complexity of interrelationships 
distinguishes it from the classic project management problem or 
scheduling problem, where all tasks to be scheduled are local tasks and no
negotiation is needed.
1. negotiation duration (δ(v)): the maximum time allowed for
negotiation v to complete, either reaching an agreed upon
proposal (success) or no agreement (failure).
2. negotiation start time (α(v)): the start time of negotiation v.
α(v) is an attribute that needs to be decided by the agent.
3. negotiation deadline ( (v)): negotiation v needs to be 
finished before this deadline (v). The negotiation is no longer
valid after time (v), which is the same as a failure outcome
of this negotiation.
4. success probability (ps(v)): the probability that v is 
successful. It depends on a set of attributes, including both
attributes-in-negotiation (i.e. reward, flexibility, etc.) and
attributes-of-negotiation (i.e. negotiation start time, 
negotiation deadline, etc.).
An agent involved in multiple related negotiation processes needs
to reason on how to manage these negotiations in terms of ordering
them and choosing the appropriate values for features. This is the
multi-linked negotiation problem [10] :
DEFINITION 2.1. A multi-linked negotiation problem is 
defined as an undirected graph (more specifically, a forest as a set
of rooted trees): M = (V, E), where V = {v} is a finite set
of negotiations, and E = {(u, v)} is a set of binary relations on
V . (u, v) ∈ E denotes that negotiation u and negotiation v are
directly-linked. The relationships among the negotiations are 
described by a forest, a set of rooted trees {Ti}. There is a relation
operator associated with every non-leaf negotiation v (denoted as
ρ(v)), which describes the relationship between negotiation v and
its children. This relation operator has two possible values: AND
and OR. The AND relationship associated with a negotiation v
means the successful accomplishment of the commitment on v 
requires all its children nodes have successful accomplishments. The
OR relationship associated with a negotiation v means the 
successful accomplishment of the commitment on v requires at least
one child node have successful accomplishment, where the 
multiple children nodes represent alternatives to accomplish the same
goal.
Multi-linked negotiation problem is a local optimization 
problem. To solve a multi-linked negotiation problem is to find a 
negotiation solution (φ, ϕ) with optimized expected utility EU(φ, ϕ),
which is defined as:
EU(φ, ϕ) =
2n
X
i=1
P(χi, ϕ) ∗ (R(χi, ϕ) − C(χi, φ, ϕ)) (1)
A negotiation ordering φ defines a partial order of all 
negotiation issues. A feature assignment ϕ is a mapping function
that assigns a value to each attribute that needs to be decided in
the negotiation. A negotiation outcome χ for a set of negotiations
{vj}, (j = 1, ..., n) specifies the result for each negotiation, either
success or failure. There are a total of 2n
different outcomes for n
negotiations: {chii}, (i = 1, ..., 2n
). P(χi, ϕ) denotes the 
probability of the outcome χi given the feature assignment ϕ, which
is calculated based on the success probability of each negotiation.
R(χi, ϕ) denotes the agent"s utility increase given the outcome χi
and the feature assignment ϕ, and C(χi, φ, ϕ) is the sum of the 
decommitment penalties of those negotiations, which are successful,
but need to be abandoned because the failure of other directly 
related negotiations; these directly related negotiations are performed
concurrently with this negotiation or after this negotiation 
according to the negotiation ordering φ.
The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 51
Computer
Producer
CPU
Other Tasks
Distribution
Center
Memory
Producer
Transporter
Deliver Hardware
Order Memory (2)
Other Tasks
Other Tasks
Order Chips
PC
Manufacturer
Order
Store
Order Memory (1)
Other Tasks
Purchase Memory
Customer
Deliver Computer
Hardware
Computer
Order Purchase
Figure 1: A Complex Negotiation Chain Scenario
A heuristic search algorithm [10] has been developed to solve
the single agent"s multi-linked negotiation problem that produces
nearly-optimal solutions. This algorithm is used as the core of the
decision-making for each individual agent in the negotiation chain
scenario. In the rest of the paper, we present our work on how to
improve the local solution of a single agent in the global negotiation
chain context.
