RESEARCH
Often, an outcome must be chosen on the basis of the
preferences reported by a group of agents. The key difficulty
is that the agents may report their preferences insincerely
to make the chosen outcome more favorable to themselves.
Mechanism design is the art of designing the rules of the
game so that the agents are motivated to report their 
preferences truthfully, and a desirable outcome is chosen. In a
recently emerging approach-called automated mechanism
design-a mechanism is computed for the specific preference
aggregation setting at hand. This has several advantages,
139
but the downside is that the mechanism design optimization
problem needs to be solved anew each time. Unlike earlier
work on automated mechanism design that studied a 
benevolent designer, in this paper we studied automated 
mechanism design problems where the designer is 
self-interesteda setting much more relevant for electronic commerce. In
this setting, the center cares only about which outcome is
chosen and what payments are made to it. The reason that
the agents" preferences are relevant is that the center is 
constrained to making each agent at least as well off as the agent
would have been had it not participated in the mechanism.
In this setting, we showed that designing an optimal 
deterministic mechanism is NP-complete in two important 
special cases: when the center is interested only in the payments
made to it, and when payments are not possible and the 
center is interested only in the outcome chosen. These 
hardness results imply hardness in all more general automated
mechanism design settings with a self-interested designer.
The hardness results apply whether the individual 
rationality (participation) constraints are applied ex interim or ex
post, and whether the solution concept is dominant 
strategies implementation or Bayes-Nash equilibrium 
implementation. We then showed that allowing randomization in the
mechanism makes the design problem in all these settings
computationally easy. Finally, we showed that the 
paymentmaximizing AMD problem is closely related to an interesting
variant of the optimal (revenue-maximizing) combinatorial
auction design problem, where the bidders have best-only
preferences. We showed that here, too, designing an 
optimal deterministic mechanism is NP-complete even with one
agent, but designing an optimal randomized mechanism is
easy.
Future research includes studying automated mechanism
design with a self-interested designer in more restricted 
settings such as auctions (where the designer"s objective may
include preferences about which bidder should receive the
good-as well as payments). We also want to study the 
complexity of automated mechanism design in settings where the
outcome and type spaces have special structure so they can
be represented more concisely. Finally, we plan to assemble
a data set of real-world mechanism design problems-both
historical and current-and apply automated mechanism 
design to those problems.