Several studies have examined the web browsing 
performance of thin-client computing [13, 19, 10]. The ability for
thin clients to improve web browsing performance on 
wireless PDAs was first quantitatively demonstrated in a 
previous study by one of the authors [10]. This study 
demonstrated that thin clients can provide both faster web 
browsing performance and greater web browsing functionality.
The study considered a wide range of web content including
content from medical information systems. Our work builds
on this previous study and consider important issues such as
how usable existing thin clients are in PDA environments,
the trade-offs between thin-client usability and performance,
performance across different PDA devices, and the 
performance of thin clients on common web-related applications
such as video.
Many thin clients have been developed and some have
PDA clients, including Microsoft"s Remote Desktop [3], 
Citrix MetraFrame XP [2], Virtual Network Computing [16,
12], GoToMyPC [5], and Tarantella [18]. These systems
were first designed for desktop computing and retrofitted
for PDAs. Unlike pTHINC, they do not address key 
system architecture and usability issues important for PDAs.
This limits their display quality, system performance, 
available screen space, and overall usability on PDAs. pTHINC
builds on previous work by two of the authors on THINC [1],
extending the server architecture and introducing a client 
interface and usage model to efficiently support PDA devices
for mobile web applications.
Other approaches to improve the performance of mobile
wireless web browsing have focused on using transcoding
and caching proxies in conjunction with the fat client model
[11, 9, 4, 8]. They work by pushing functionality to external
proxies, and using specialized browsing applications on the
PDA device that communicate with the proxy. Our 
thinclient approach differs fundamentally from these fat-client
approaches by pushing all web browser logic to the server,
leveraging existing investments in desktop web browsers and
helper applications to work seamlessly with production 
systems without any additional proxy configuration or web
browser modifications.
With the emergence of web browsing on small display 
devices, web sites have been redesigned using mechanisms like
WAP and specialized native web browsers have been 
developed to tailor the needs of these devices. Recently, Opera
has developed the Opera Mini [15] web browser, which uses
an approach similar to the thin-client model to provide 
access across a number of mobile devices that would normally
be incapable of running a web browser. Instead of requiring
the device to process web pages, it uses a remote server to
pre-process the page before sending it to the phone.
