We propose a cross-layer, hybrid resource discovery scheme that
relies on the multiple interactions of query, reply and 
advertisement packets. We assume that each resource is associated with a
unique ID1
. Initially, when a node wants to discover a resource, it
deploys query packets, which carry the corresponding resource
ID, and randomly explore the network to search for the requested
resource. Upon receiving such a query packet, a reply packet is
generated by the node providing the requested resource. 
Advertisement packets can also be used to proactively inform other
nodes about what resources are available at each node. In addition
to discovering the ‘identity" of the node providing the requested
resource, it may be also necessary to discover a ‘route" leading to
this node for further interaction.
To allow intermediate nodes to make a decision on where to 
forward query packets, each node maintains two tables: neighbor
1
The assumption of unique ID is made for brevity in exposition,
and resources could be specified via attribute-value assertions.
table and pheromone table. The neighbor table maintains a list of
all current neighbors obtained via a neighbor discovery protocol.
The pheromone table maintains the mapping of a resource ID and
a neighbor ID to a pheromone value. This table is initially empty,
and is updated by a reply packet generated by a successful query.
Figure 1 illustrates an example of a neighbor table and a 
pheromone table maintained by node A having four neighbors. When
node A receives a query packet searching for a resource, it makes
a decision to which neighbor it should forward the query packet
by computing the desirability of each of the neighbors that have
not been visited before by the same query packet. For a resource
ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained
from the pheromone value of the entry whose neighbor and 
resource ID fields are n and r, respectively. If no such entry exists in
the pheromone table, δ(r,n) is set to zero.
Once the desirabilities of all valid next hops have been calculated,
they are normalized to obtain the probability of choosing each
neighbor. In addition, a small probability is also assigned to those
neighbors with zero desirability to exercise the sporadic random
walk primitive. Based on these probabilities, a next hop is 
selected to forward the query packet to. When a query packet 
encounters a node with a satisfying resource, a reply packet is 
returned to the querying node. The returning reply packet also 
updates the pheromone table at each node on its return trip by 
increasing the pheromone value in the entry whose resource ID and
neighbor ID fields match the ID of the discovered resource and
the previous hop, respectively. If such an entry does not exist, a
new entry is added into the table. Therefore, subsequent query
packets looking for the same resource, when encountering this
pheromone information, are then guided toward the same 
destination with a small probability of taking an alternate path.
Since the hybrid discovery scheme neither relies on a MANET
routing protocol nor arranges nodes into a logical overlay, query
packets are to traverse the actual network topology. In dense 
networks, relatively large nodal degrees can have potential impacts
on this random exploring mechanism. To address this issue, the
hybrid scheme also incorporates proactive advertisement in 
addition to the reactive query. To perform proactive advertisement,
each node periodically deploys an advertising packet containing a
list of its available resources" IDs. These packets will traverse
away from the advertising node in a random walk manner up to a
limited number of hops and advertise resource information to
surrounding nodes in the same way as reply packets. In the hybrid
scheme, an increase of pheromone serves as a positive feedback
which indirectly guides query packets looking for similar 
resources. Intuitively, the amount of pheromone increased is 
inversely proportional to the distance the reply packet has traveled
back, and other metrics, such as quality of the resource, could
contribute to this amount as well. Each node also performs an
implicit negative feedback for resources that have not been given
a positive feedback for some time by regularly decreasing the
pheromone in all of its pheromone table entries over time. In 
addition, pheromone can be reduced by an explicit negative response,
for instance, a reply packet returning from a node that is not 
willing to provide a resource due to excessive workload. As a result,
load balancing can be achieved via positive and negative 
feedback. A node serving too many nodes can either return fewer 
responses to query packets or generate negative responses.
2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006
Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing
that it currently has four neighbors, (b) A"s neighbor table, and (c) a possible pheromone table of A
Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource 
relocation, and (c) resource division
