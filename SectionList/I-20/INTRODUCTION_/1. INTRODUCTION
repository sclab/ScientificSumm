Social choice theory can serve as an appropriate foundation upon
which to build multiagent applications. There is a rich literature
on the subject of voting1
from political science, mathematics, and
economics, with important theoretical results, and builders of 
automated agents can benefit from this work as they engineer systems
that reach group consensus.
Interest in the theory of economics and social choice has in fact
become widespread throughout computer science, because it is 
recognized as having direct implications on the building of systems
comprised of multiple automated agents [16, 4, 22, 17, 14, 8, 15].
What distinguishes computer science work in these areas is its 
concern for computational issues: how are results arrived at (e.g., 
equilibrium points)? What is the complexity of the process? Can 
complexity be used to guard against unwanted phenomena? Does 
complexity of computation prevent realistic implementation of a 
technique?
The practical applications of voting among automated agents are
already widespread. Ghosh et al. [6] built a movie 
recommendation system; a user"s preferences were represented as agents, and
movies to be suggested were selected through agent voting. 
Candidates in virtual elections have also been beliefs, joint plans [5],
and schedules [7]. In fact, to see the generality of the (automated)
voting scenario, consider modern web searching. One of the most
massive preference aggregation schemes in existence is Google"s
PageRank algorithm, which can be viewed as a vote among 
indexed web pages on candidates determined by a user-input search
string; winners are ranked (Tennenholtz and Altman [21] consider
the axiomatic foundations of ranking systems such as this).
In this paper, we consider a topic that has been less studied in the
context of automated agent voting, namely power indices. A power
index is a measure of the power that a subgroup, or equivalently
a voter in a weighted voting environment, has over decisions of a
larger group. The Banzhaf power index is one of the most popular
measures of voting power, and although it has been used primarily
for measuring power in weighted voting games, it is well-defined
for any simple coalitional game.
We look at some computational aspects of the Banzhaf power
index in a specific environment, namely a network flow game. In
this game, a coalition of agents wins if it can send a flow of size k
from a source vertex s to a target vertex t, with the relative power
of each edge reflecting its significance in allowing such a flow. We
show that calculating the Banzhaf power index of each agent in
this general network flow domain is #P-complete. We also show
that for some restricted network flow domains (specifically, of 
con1
We use the term in its intuitive sense here, but in the social choice
literature, preference aggregation and voting are basically 
synonymous.
335
978-81-904262-7-5 (RPS) c 2007 IFAAMAS
nectivity games on bounded layer graphs), there does exist a 
polynomial algorithm to calculate the Banzhaf power index of an agent.
There are implications in this scenario to real-world networks; for
example, the power index might be used to allocate maintenance
resources (a more powerful edge being more critical), in order to
maintain a given flow of data between two points.
The paper proceeds as follows. In Section 2 we give some 
background concerning coalitional games and the Banzhaf power 
index, and in Section 3 we introduce our specific network flow game.
In Section 4 we discuss the Banzhaf power index in network flow
games, presenting our complexity result in the general case. In
Section 5 we consider a restricted case of the network flow game,
and present results. In Section 6 we discuss related work, and we
conclude in Section 7.
