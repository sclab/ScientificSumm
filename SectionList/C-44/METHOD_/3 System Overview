MSP works by extracting relative location information from
multiple simple one-dimensional orderings of nodes. 
Figure 1(a) shows a layout of a sensor network with anchor nodes
and target nodes. Target nodes are defined as the nodes to be
localized. Briefly, the MSP system works as follows. First,
events are generated one at a time in the network area (e.g.,
ultrasound propagations from different locations, laser scans
with diverse angles). As each event propagates, as shown in
Figure 1(a), each node detects it at some particular time 
instance. For a single event, we call the ordering of nodes, which
is based on the sequential detection of the event, a node 
sequence. Each node sequence includes both the targets and the
anchors as shown in Figure 1(b). Second, a multi-sequence
processing algorithm helps to narrow the possible location of
each node to a small area (Figure 1(c)). Finally, a 
distributionbased estimation method estimates the exact location of each
sensor node, as shown in Figure 1(d).
Figure 1 shows that the node sequences can be obtained
much more economically than accurate pair-wise distance
measurements between target nodes and anchor nodes via 
ranging methods. In addition, this system does not require a rigid
time-space relationship for the localization events, which is
critical but hard to achieve in controlled event distribution 
scenarios (e.g., Spotlight [20]).
For the sake of clarity in presentation, we present our system
in two cases:
• Ideal Case, in which all the node sequences obtained
from the network are complete and correct, and nodes are
time-synchronized [12, 9].
• Realistic Deployment, in which (i) node sequences can
be partial (incomplete), (ii) elements in sequences could
flip (i.e., the order obtained is reversed from reality), and
(iii) nodes are not time-synchronized.
To introduce the MSP algorithm, we first consider a simple
straight-line scan scenario. Then, we describe how to 
implement straight-line scans as well as other event types, such as
sound wave propagation.
1
A
2
3
4
5
B
C
6
7
8
9
Straight-line Scan 1
Straight-lineScan2
8
1
5 A
6
C
4
3
7
2
B
9
3
1
C 5
9
2 A 4 6
B
7 8
Target node
Anchor node
Figure 2. Obtaining Multiple Node Sequences