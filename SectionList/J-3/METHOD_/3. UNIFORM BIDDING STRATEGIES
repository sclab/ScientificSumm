As we will show in Section 5, solving the Budget 
Optimization problem in its full generality is difficult. In 
addition, it may be difficult to reason about strategies that
involve arbitrary distributions over arbitrary bid vectors.
Advertisers generally prefer strategies that are easy to 
understand, evaluate and use within their larger goals. With
this motivation, we look at restricted classes of strategies
that we can easily compute, explain and analyze.
We define a uniform bidding strategy to be a distribution
A over bid vectors a ∈ R
|K|
+ where each bid vector in the
distribution is of the form (b, b, . . . , b) for some real-valued
bid b. In other words, each vector in the distribution bids
the same value on every keyword.
Uniform strategies have several advantages. First, they
do not depend on the edges of the interaction graph, since
all effective bids on queries are the same. Thus, they are
effective in the face of limited or noisy information about
the keyword interaction graph. Second, uniform strategies
are also independent of the priority rule being used. Third,
any algorithm that gives an approximation guarantee will
then be valid for any interaction graph over those keywords
and queries.
We now show that we can compute the best uniform 
strategy efficiently.
Suppose we have a set of queries Q, where the landscape
Vq for each query q is defined by the set of points Vq =
{(costq[1], αq[1]), . . . , (costq[p], αq[p])}. We define the set of
interesting bids Iq = {costq[1]/αq [1], . . . , costq[p]/αq [p]}, let
I = ∪q∈QIq, and let N = |I|. We can index the points
in I as b1, . . . , bN in increasing order. The ith point in
our aggregate landscape V is found by summing, over the
queries, the cost and clicks associated with bid bi, that is,
V = ∪N
i=1(
P
q∈Q costq(bi),
P
q∈Q clicksq(bi)).
For any possible bid b, if we use the aggregate landscape
just as we would a regular landscape, we exactly represent
the cost and clicks associated with making that bid 
simultaneously on all queries associated with the aggregate 
landscape. Therefore, all the definitions and results of Section 2
about landscapes can be extended to aggregate landscapes,
and we can apply Lemma 1 to compute the best uniform
strategy (using the convex hull of the points in this 
aggregate landscape). The running time is dominated by the time
to compute the convex hull, which is O(N log N)[12].
The resulting strategy is the convex combination of two
points on the aggregate landscape. Define a two-bid strategy
to be a uniform strategy which puts non-zero weight on at
most two bid vectors. We have shown
Lemma 2. Given an instance of Budget Optimization
in which there are a total of N points in all the landscapes,
we can find the best uniform strategy in O(N log N) time.
Furthermore, this strategy will always be a two-bid strategy.
Putting these ideas together, we get an O(N log N)-time
algorithm for Budget Optimization, where N is the total
number of landscape points (we later show that this is a
(1 − 1
e
)-approximation algorithm):
1. Aggregate all the points from the individual query 
landscapes into a single aggregate landscape.
2. Find the convex hull of the points in the aggregate
landscape.
3. Compute the point on the convex hull for the given
budget, which is the convex combination of two points α
and β.
4. Output the strategy which is the appropriate convex
combination of the uniform bid vectors corresponding to
α and β.
We will also consider a special case of two-bid strategies.
A single-bid strategy is a uniform strategy which puts 
nonzero weight on at most one non-zero vector, i.e. advertiser
randomizes between bidding a certain amount b∗
on all 
keywords, and not bidding at all. A single-bid strategy is even
easier to implement in practice than a two-bid strategy. For
example, the search engines often allow advertisers to set a
maximum daily budget. In this case, the advertiser would
simply bid b∗
until her budget runs out, and the ad serving
system would remove her from all subsequent auctions until
the end of the day. One could also use an ad scheduling
tool offered by some search companies8
to implement this
strategy. The best single-bid strategy can also be computed
easily from the aggregate landscape. The optimal strategy
for a budget U will either be the point x s.t. cost(x) is as
large as possible without exceeding U, or a convex 
combination of zero and the point y, where cost(y) is as small as
possible while larger than U.
8
See https://adwords.google.com/support/bin/answer.
py?answer=33227, for example.
44
B
D
A
C
clicks cost cpc
A 2 $1 $0.50
B 5 $0.50 $0.10
C 3 $2 $0.67
D 4 $1 $0.25
cpc
$0.67
$0.50
$0.25
$0.10
Total clicks: 5 9 11 14
Figure 2: Four queries and their click-price curve.
