We now present a trading model which includes both price
and volume information about the sequence of trades. While
this model is a generalization of previous formalisms for 
online trading, it makes an infinite liquidity assumption which
fails to model the negative market impact that trading a
large number of shares typically has. This will be addressed
in the order book model studied in the next section.
A note on terminology: throughout the paper (unless 
otherwise specified), we shall use the term market to describe
all activity or orders other than those of the algorithm 
under consideration. The setting we consider can be viewed as
a game between our algorithm and the market.
2.1 The Model
In the price-volume trading model, we assume that the
intraday trading activity in a given stock is summarized by
a discrete sequence of price and volume pairs (pt, vt) for
t = 1, . . . , T. Here t = 0 corresponds to the day"s 
market open, and t = T to the close. While there is nothing
technically special about the time horizon of a single day, it
is particularly consistent with limit order book trading on
Wall Street. The pair (pt, vt) represents the fact that a total
of vt shares were traded at an (average) price per share pt
in the market between time t − 1 and t. Realistically, we
should imagine the number of intervals T being reasonably
large, so that it is sensible to assign a common approximate
price to all shares traded within an interval.
In the price-volume model, we shall make an infinite 
liquidity assumption for our trading algorithms. More 
precisely, in this online model, we see the price-volume sequence
one pair at a time. Following the observation of (pt, vt),
we are permitted to sell any (possibly fractional) number
of shares nt at the price pt. Let us assume that our goal
is to sell N shares over the course of the day. Hence, at
each time, we must select a (possibly fractional) number of
shares nt to sell at price pt, subject to the global constraint
T
t=1 nt = N. It is thus assumed that if we have left over
shares to sell after time T − 1, we are forced to sell them at
the closing price of the market - that is, nT = N − T −1
t=1 nt
is sold at pT . In this way we are certain to sell exactly N
shares over the course of the day; the only thing an 
algorithm must do is determine the schedule of selling based on
the incoming market price-volume stream.
Any algorithm which sells fractional volumes can be 
converted to a randomized algorithm which only sells integral
volumes with the same expected number of shares sold. If
we keep the hard constraint of selling exactly N shares, we
might incur an additional slight loss in the conversion. (Note
that we only allow fractional volumes in the price-volume
model, where liquidity is not an issue. In the order book
model to follow, we do not allow fractional volumes.)
In VWAP trading, the goal of an online algorithm A which
sells exactly N shares is not to maximize profits per se, but
to track the market VWAP. The market VWAP for an 
intraday trading sequence S = (p1, v1), . . . , (pT , vT ) is simply the
average price paid per share over the course of the trading
190
day, ie
VWAPM (S) =
T
t=1
ptvt /V
where V is the total daily volume, i.e., V = T
t=1 vt. If on
the sequence S, the algorithm A sells its N stocks using the
volume sequence n1, . . . nT , then we analogously define the
VWAP of A on market sequence S by
VWAPA(S) =
T
t=1
ptnt /N .
Note that the market VWAP does not include the shares
that the algorithm sells.
The VWAP competitive ratio of A with respect to a set
of sequences Σ is then
RVWAP(A) = max
S∈Σ
{VWAPM (S)/VWAPA(S)}
In the case that A is randomized, we generalize the definition
above by taking an expectation over VWAPA(S) inside the
max. We note that unlike on Wall Street, our definition of
VWAPM does not take our own trading into account. It is
easy to see that this makes it a more challenging criterion
to track.
In contrast to the VWAP, another common measure of
the performance of an online selling algorithm would be its
one-way trading (OWT) competitive ratio [3] with respect
to a set of sequences Σ:
ROWT(A) = max
S∈Σ
max
1≤t≤T
{pt/VWAPA(S)}
where the algorithms performance is compared to the largest
individual price appearing in the sequence S.
In both VWAP and OWT, we are comparing the average
price per share received by a selling algorithm to some 
measure of market performance. In the case of OWT, we 
compare to the rather ambitious benchmark of the high price of
the day, ignoring volumes entirely. In VWAP trading, we
have the more modest goal of comparing favorably to the
overall market average of the day. As we shall see, there are
some important commonalities and differences to these two
approaches. For now we note one simple fact: on any specific
sequence S, VWAPA(S) may be larger that VWAPM (S).
However, RVWAP(A) cannot be smaller than 1, since on any
sequence S in which all price pt are identical, it is impossible
to get a better average share per price. Thus, for all 
algorithms A, both RVWAP(A) and ROWT(A) are larger than
1, and the closer to 1 they are, the better A is tracking its
respective performance measure.
2.2 VWAP Results in the Price-Volume Model
As in previous work on online trading, it is generally not
possible to obtain finite bounds on competitive ratios with
absolutely no assumptions on the set of sequences 
Σbounds on the maximum variation in price or volume are
required, depending on the exact setting. We thus introduce
the following two assumptions.
2.2.0.1 Volume Variability Assumption..
Let 0 < Vmin ≤ Vmax be known positive constants, and
define Q = Vmax /Vmin . For all intraday trading sequences
S ∈ Σ, the total daily volume V ∈ [Vmin , Vmax ].
2.2.0.2 Price Variability Assumption..
Let 0 < pmin ≤ pmax be known positive constants, and 
define R = pmax/pmin. For all intraday trading sequences S ∈
Σ, the prices satisfy pt ∈ [pmin, pmax], for all t = 1, . . . , T.
Competitive ratios are generally taken over all sets Σ 
consistent with at least one of these assumptions. To gain some
intuition consider the two trivial cases of R = 1 and Q = 1.
In the case of R = 1 (where there is no fluctuation in price),
any schedule is optimal. In the case of Q = 1 (where the
total volume V over the trading period is known), we can
gain a competitive ratio of 1 by selling vt
V
N shares after each
time period.
For the OWT problem in the price-volume model, 
volumes are irrelevant for the performance criterion, but for
the VWAP criterion they are central. For the OWT problem
under the price variability assumption, the results of [3] 
established that the optimal competitive ratio was Θ(log(R)).
Our first result establishes that the optimal competitive 
ratio for VWAP under the volume variability assumption is
Θ(log(Q)) and is achieved by an algorithm that ignores the
price data.
Theorem 1. In the price-volume model under the volume
variability assumption, there exists an online algorithm A
for selling N shares achieving competitive ratio RVWAP(A) ≤
2 log(Q). In addition, if only the volume variability (and not
the price variability) assumption holds, any online algorithm
A for selling N shares has RVWAP(A) = Ω(log(Q)).
Proof. (Sketch) For the upper bound, the idea is 
similar to the price reservation algorithm of [3] for the OWT
problem, and similar in spirit to the general technique of
classify and select [1]. Consider algorithms which use a 
parameter ˆV , which is interpreted as an estimate for the total
volume for the day. Then at each time t, if the market
price and volume is (pt, vt), the algorithm sells a fraction
vt/ ˆV of its shares. We consider a family of log(Q) such 
algorithms, where algorithm Ai uses ˆV = Vmin 2i−1
. Clearly,
one of the Ai has a competitive ratio of 2. We can derive an
O(log(Q)) VWAP competitive ratio by running these 
algorithms in parallel, and letting each algorithm sell N/ log(Q)
shares. (Alternatively, we can randomly select one Ai and
guarantee the same expected competitive ratio.)
We now sketch the proof of the lower bound, which 
relates performance in the VWAP and OWT problems. Any
algorithm that is c-competitive in the VWAP setting 
(under fixed Q) is 3c-competitive in the OWT setting with
R = Q/2. To show this, we take any sequence S of prices
for the OWT problem, and convert it into a price-volume 
sequence for the VWAP problem. The prices in the VWAP 
sequence are the same as in S. To construct the volumes in the
VWAP sequence, we segment the prices in S into log(R) 
intervals [2i−1
pmin , 2i
pmin ). Suppose pt ∈ [2i−1
pmin , 2i
pmin ),
and this is the first time in S that a price has fallen in this
interval. Then in the VWAP sequence we set the volume
vt = 2i−1
. If this is not the first visit to the interval 
containing pt, we set vt = 0. Assume that the maximum price
in S is pmax . The VWAP of our sequence is at least pmax /3.
Since we had a c competitive algorithm, its average sell is at
least pmax /3c. The lower bound now follows using the lower
bound in [3].
An alternative approach to VWAP is to ignore the 
volumes in favor of prices, and apply an algorithm for the OWT
problem. Note that the lower bound in this theorem, unlike
in the previous one, only assumes a price variation bound.
191
Theorem 2. In the price-volume model under the price
variability assumption, there exists an online algorithm A
for selling N shares achieving competitive ratio RVWAP(A) =
O(log(R)). In addition, if only the price variability (and not
the volume variability) assumption holds, any online A for
selling N shares has RVWAP(A) = Ω(log(R)).
Proof. (Sketch) Follows immediately from the results of
[3] for OWT: the upper bound from the simple fact that for
any sequence S, VWAPA(S) is less than max1≤t≤T {pt}, and
the lower bound from a reduction to OWT.
Theorems 1 and 2 demonstrate that one can achieve 
logarithmic VWAP competitive ratios under the assumption of
either bounded variability of total volume or bounded 
variability of maximum price. If both assumptions hold, it is
possible to give an algorithm accomplishing the minimum
of log(Q) and log(R). This flexibility of approach derives
from the fact that the VWAP is a quantity in which both
prices and volumes matter, as opposed to OWT.
2.3 RelatedResultsinthePrice-VolumeModel
All of the VWAP algorithms we have discussed so far
make some use of the daily data (pt, vt) as it unfolds, 
using either the price or volume information. In contrast, a
fixed schedule VWAP algorithm has a predetermined 
distribution {f1, f2, . . . fT }, and simply sells ftN shares at time t,
independent of (pt, vt). Fixed schedule VWAP algorithms,
or slight variants of them, are surprisingly common on Wall
Street, and the schedule is usually derived from historical
intraday volume data. Our next result demonstrates that
such algorithms can perform considerably worse than 
dynamically adaptive algorithms in terms of the worst case
competitive ratio.
Theorem 3. In the price-volume model under both the
volume and price variability assumptions, any fixed schedule
VWAP algorithm A for selling N shares has sell VWAP
competitive ratio RVWAP(A) = Ω(min(T, R)).
The proofs of all the results in this subsection are in the
Appendix.
So far our emphasis has been on VWAP algorithms that
must sell exactly N shares. In many realistic circumstances,
however, there is actually some flexibility in the precise
number of shares to be sold. For instance, this is true at
large brokerages, where many separate VWAP trades may
be pooled and executed by a common algorithm, and the
firm would be quite willing to carry a small position of 
unsold shares overnight if it resulted in better execution prices.
The following theorem (which interestingly has no analogue
for the OWT problem) demonstrates that this trade-off in
shares sold and performance can be realized dramatically in
our model. It states that if we are willing to let the number
of shares sold vary with Q, we can in fact achieve a VWAP
competitive ratio of 1.
Theorem 4. In the price-volume model under the volume
variability assumption, there exists an algorithm A that 
always sells between N and QN shares and that the average
price per sold share is exactly VWAPM (S).
In many online problems, there is a clear distinction 
between benefit problems and cost problems [2]. In the
VWAP setting, selling shares is a benefit problem, and 
buying shares is a cost problem. The definitions of the 
competitive ratios, Rbuy
VWAP(A) and Rbuy
OWT(A), for algorithms which
Figure 2: Sample Island order books for MSFT.
buy exactly N shares are maxS∈Σ{VWAPA(S)/VWAPM (S)}
and maxS∈Σ maxt{VWAPA(S)/pt} respectively. Eventhough
Theorem 4 also holds for buying, in general, the competitive
ratio of the buy (cost) problem is much higher, as stated in
the following theorem.
Theorem 5. In the price-volume model under the volume
and price variability assumptions, there exists an online 
algorithm A for buying N shares achieving buy VWAP 
competitive ratio Rbuy
VWAP(A) = O(min{Q,
√
R}). In addition
any online algorithm A for buying N shares has buy VWAP
competitive ratio Rbuy
VWAP(A) = Ω(min{Q,
√
R}).
