With the increasing popularity of mobile devices and their
widespread adoption, there is a clear need to allow the 
development of a broad spectrum of applications that operate 
effectively over such an environment. Unfortunately, this is far
from simple: mobile devices are increasingly heterogeneous
in terms of processing capabilities, memory size, battery 
capacity, and network interfaces. Each such configuration has
substantially different characteristics that are both statically
different - for example, there is a major difference in 
capability between a Berkeley mote and an 802.11g-equipped
laptop - and that vary dynamically, as in situations of 
fluctuating bandwidth and intermittent connectivity. Mobile ad
hoc environments have an additional element of complexity
in that they are entirely decentralised.
In order to craft applications for such complex 
environments, an appropriate form of middleware is essential if cost
effective development is to be achieved. In this paper, we
examine one of the foundational aspects of middleware for
mobile ad-hoc environments: that of the communication
primitives.
Traditionally, the most frequently used middleware 
primitives for communication assume the simultaneous presence
of both end points on a network, since the stability and 
pervasiveness of the networking infrastructure is not an 
unreasonable assumption for most wired environments. In other
words, most communication paradigms are synchronous: 
object oriented middleware such as CORBA and Java RMI are
typical examples of middleware based on synchronous 
communication.
In recent years, there has been growing interest in 
platforms based on asynchronous communication paradigms, such
as publish-subscribe systems [6]: these have been exploited
very successfully where there is application level 
asynchronicity. From a Gartner Market Report [7]: Given 
messageoriented-middleware"s (MOM) popularity, scalability, 
flexibility, and affinity with mobile and wireless architectures,
by 2004, MOM will emerge as the dominant form of 
communication middleware for linking mobile and enterprise 
applications (0.7 probability).... Moreover, in mobile ad-hoc
systems, the likelihood of network fragmentation means that
synchronous communication may in any case be 
impracticable, giving situations in which delay tolerant asynchronous
traffic is the only form of traffic that could be supported.
121 Middleware 2004 Companion
Middleware for mobile ad-hoc environments must therefore
support semi-synchronous or completely asynchronous 
communication primitives if it is to avoid substantial 
limitations to its utility. Aside from the intellectual challenge in
supporting this model, this work is also interesting because
there are a number of practical application domains in 
allowing inter-community communication in undeveloped 
areas of the globe. Thus, for example, projects that have been
carried out to help populations that live in remote places of
the globe such as Lapland [3] or in poor areas that lack fixed
connectivity infrastructure [9].
There have been attempts to provide mobile middleware
with these properties, including STEAM, LIME, 
XMIDDLE, Bayou (see [11] for a more complete review of mobile
middleware). These models differ quite considerably from
the existing traditional middleware in terms of primitives
provided. Furthermore, some of them fail in providing a
solution for the true ad-hoc scenarios.
If the projected success of MOM becomes anything like
a reality, there will be many programmers with experience
of it. The ideal solution to the problem of middleware for
ad-hoc systems is, then, to allow programmers to utilise the
same paradigms and models presented by common forms of
MOM and to ensure that these paradigms are supportable
within the mobile environment. This approach has clear
advantages in allowing applications developed on standard
middleware platforms to be easily deployed on mobile 
devices. Indeed, some research has already led to the 
adaptation of traditional middleware platforms to mobile settings,
mainly to provide integration between mobile devices and
existing fixed networks in a nomadic (i.e., mixed) 
environment [4]. With respect to message oriented middleware, the
current implementations, however, either assume the 
existence of a backbone network to which the mobile hosts 
connect from time to time while roaming [10], or assume that
nodes are always somehow reachable through a path [18].
No adaptation to heterogeneous or completely ad-hoc 
scenarios, with frequent disconnection and periodically isolated
clouds of hosts, has been attempted.
In the remainder of this paper we describe an initial 
attempt to adapt message oriented middleware to suit mobile
and, more specifically, mobile ad-hoc networks. In our case,
we elected to examine JMS, as one of the most widely known
MOM systems. In the latter part of this paper, we explore
the limitations of our results and describe the plans we have
to take the work further.
