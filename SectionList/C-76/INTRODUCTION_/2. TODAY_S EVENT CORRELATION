TECHNIQUES
In [11] the task of event correlation is defined as a 
conceptual interpretation procedure in the sense that a new 
meaning is assigned to a set of events that happen in a certain
time interval. We can distinguish between three aspects
for event correlation.
Functional aspect: The correlation focuses on functions
which are provided by each network element. It is also
regarded which other functions are used to provide a
specific function.
Topology aspect: The correlation takes into account how
the network elements are connected to each other and
how they interact.
Time aspect: When explicitly regarding time constraints,
a start and end time has to be defined for each event.
The correlation can use time relationships between the
events to perform the correlation. This aspect is only
mentioned in some papers [11], but it has to be treated
in an event correlation system.
In the event correlation it is also important to distinguish
between the knowledge acquisition/representation and the
correlation algorithm. Examples of approaches to 
knowledge acquisition/representation are Gruschke"s dependency
graphs [6] and Ensel"s dependency detection by neural 
networks [3]. It is also possible to find the dependencies by
analyzing interactions [7]. In addition, there is an approach
to manage service dependencies with XML and to define a
resource description framework [4].
To get an overview about device-oriented event correlation
a selection of several event correlation techniques being used
for this kind of correlation is presented.
Model-based reasoning: Model-based reasoning (MBR)
[15, 10, 20] represents a system by modeling each of its
components. A model can either represent a physical
entity or a logical entity (e.g., LAN, WAN, domain,
service, business process). The models for physical
entities are called functional model, while the models
for all logical entities are called logical model. A 
description of each model contains three categories of 
information: attributes, relations to other models, and
behavior. The event correlation is a result of the 
collaboration among models.
As all components of a network are represented with
their behavior in the model, it is possible to perform
simulations to predict how the whole network will 
behave.
A comparison in [20] showed that a large MBR system
is not in all cases easy to maintain. It can be difficult to
appropriately model the behavior for all components
and their interactions correctly and completely.
An example system for MBR is NetExpert[16] from
OSI which is a hybrid MBR/RBR system (in 2000 OSI
was acquired by Agilent Technologies).
Rule-based reasoning: Rule-based reasoning (RBR) [15,
10] uses a set of rules for event correlation. The rules
have the form conclusion if condition. The condition
uses received events and information about the system,
while the conclusion contains actions which can either
lead to system changes or use system parameters to
choose the next rule.
An advantage of the approach is that the rules are
more or less human-readable and therefore their effect
is intuitive. The correlation has proved to be very fast
in practice by using the RETE algorithm.
In the literature [20, 1] it is claimed that RBR 
systems are classified as relatively inflexible. Frequent
changes in the modeled IT environment would lead to
many rule updates. These changes would have to be
performed by experts as no automation has currently
been established. In some systems information about
the network topology which is needed for the event 
correlation is not used explicitly, but is encoded into the
rules. This intransparent usage would make rule 
updates for topology changes quite difficult. The system
brittleness would also be a problem for RBR systems.
It means that the system fails if an unknown case 
occurs, because the case cannot be mapped onto similar
cases. The output of RBR systems would also be 
difficult to predict, because of unforeseen rule interactions
in a large rule set. According to [15] an RBR system
is only appropriate if the domain for which it is used
is small, nonchanging, and well understood.
The GTE IMPACT system [11] is an example of a 
rulebased system. It also uses MBR (GTE has merged
with Bell Atlantic in 1998 and is now called Verizon
[19]).
Codebook approach: The codebook approach [12, 21] has
similarities to RBR, but takes a further step and 
encodes the rules into a correlation matrix.
The approach starts using a dependency graph with
two kinds of nodes for the modeling. The first kind
of nodes are the faults (denoted as problems in the
cited papers) which have to be detected, while the 
second kind of nodes are observable events (symptoms in
the papers) which are caused by the faults or other
events. The dependencies between the nodes are 
denoted as directed edges. It is possible to choose weights
for the edges, e.g., a weight for the probability that
184
fault/event A causes event B. Another possible 
weighting could indicate time dependencies. There are 
several possibilities to reduce the initial graph. If, e.g.,
a cyclic dependency of events exists and there are no
probabilities for the cycles" edges, all events can be
treated as one event.
After a final input graph is chosen, the graph is 
transformed into a correlation matrix where the columns
contain the faults and the rows contain the events.
If there is a dependency in the graph, the weight of
the corresponding edge is put into the according 
matrix cell. In case no weights are used, the matrix cells
get the values 1 for dependency and 0 otherwise. 
Afterwards, a simplification can be done, where events
which do not help to discriminate faults are deleted.
There is a trade-off between the minimization of the
matrix and the robustness of the results. If the matrix
is minimized as much as possible, some faults can only
be distinguished by a single event. If this event cannot
be reliably detected, the event correlation system 
cannot discriminate between the two faults. A measure
how many event observation errors can be 
compensated by the system is the Hamming distance. The
number of rows (events) that can be deleted from the
matrix can differ very much depending on the 
relationships [15].
The codebook approach has the advantage that it uses
long-term experience with graphs and coding. This
experience is used to minimize the dependency graph
and to select an optimal group of events with respect
to processing time and robustness against noise.
A disadvantage of the approach could be that similar
to RBR frequent changes in the environment make it
necessary to frequently edit the input graph.
SMARTS InCharge [12, 17] is an example of such a
correlation system.
Case-based reasoning: In contrast to other approaches
case-based reasoning (CBR) [14, 15] systems do not
use any knowledge about the system structure. The
knowledge base saves cases with their values for system
parameters and successful recovery actions for these
cases. The recovery actions are not performed by the
CBR system in the first place, but in most cases by a
human operator.
If a new case appears, the CBR system compares the
current system parameters with the system 
parameters in prior cases and tries to find a similar one. To
identify such a match it has to be defined for which 
parameters the cases can differ or have to be the same.
If a match is found, a learned action can be performed
automatically or the operator can be informed with a
recovery proposal.
An advantage of this approach is that the ability to
learn is an integral part of it which is important for
rapid changing environments.
There are also difficulties when applying the approach
[15]. The fields which are used to find a similar case
and their importance have to be defined appropriately.
If there is a match with a similar case, an adaptation
of the previous solution to the current one has to be
found.
An example system for CBR is SpectroRx from 
Cabletron Systems. The part of Cabletron that developed
SpectroRx became an independent software company
in 2002 and is now called Aprisma Management 
Technologies [2].
In this section four event correlation approaches were 
presented which have evolved into commercial event correlation
systems. The correlation approaches have different focuses.
MBR mainly deals with the knowledge acquisition and 
representation, while RBR and the codebook approach 
propose a correlation algorithm. The focus of CBR is its ability
to learn from prior cases.
