FUNCTION
In this section, we present the new decision function, Reciprocative,
that is the basis for our incentive techniques. A decision function
maps from a history of a player"s actions to a decision whether to
cooperate with or defect on that player. A strategy consists of a 
decision function, private or shared history, a server selection 
mechanism, and a stranger policy. Our approach to incentives is to 
design strategies which maximize both individual and social benefit.
Strategic users will choose to use such strategies and thereby drive
the system to high levels of cooperation. Two examples of 
simple decision functions are 100% Cooperate and 100% Defect.
100% Cooperate models a naive user who does not yet realize
that she is being exploited. 100% Defect models a greedy user
who is intent on exploiting the system. In the absence of incentive
techniques, 100% Defect users will quickly dominate the 100%
Cooperate users and destroy cooperation in the system.
Our requirements for a decision function are that (1) it can use
shared and subjective history, (2) it can deal with untraceable 
defections, and (3) it is robust against different patterns of defection.
Previous decision functions such as Tit-for-Tat[4] and Image[28]
(see Section 5) do not satisfy these criteria. For example, Tit-for-Tat
and Image base their decisions on both cooperations and defections,
therefore cannot deal with untraceable defections . In this section
and the remaining sections we demonstrate how the 
Reciprocativebased strategies satisfy all of the requirements stated above.
The probability that a Reciprocative player cooperates with a peer
is a function of its normalized generosity. Generosity measures the
benefit an entity has provided relative to the benefit it has 
consumed. This is important because entities which consume more 
services than they provide, even if they provide many services, will
cause cooperation to collapse. For some entity i, let pi and ci be the
services i has provided and consumed, respectively. Entity i"s 
generosity is simply the ratio of the service it provides to the service it
consumes:
g(i) = pi/ci. (1)
One possibility is to cooperate with a probability equal to the 
generosity. Although this is effective in some cases, in other cases, a
Reciprocative player may consume more than she provides (e.g.,
when initially using the Stranger Defect policy in 4.3). This will
cause Reciprocative players to defect on each other. To prevent this
situation, a Reciprocative player uses its own generosity as a 
measuring stick to judge its peer"s generosity. Normalized generosity
measures entity i"s generosity relative to entity j"s generosity. More
concretely, entity i"s normalized generosity as perceived by entity
j is
gj(i) = g(i)/g(j). (2)
In the remainder of this section, we describe our simulation 
framework, and use it to demonstrate the benefits of the baseline 
Reciprocative decision function.
Parameter Nominal value Section
Population Size 100 2.4
Run Time 1000 rounds 2.4
Payoff Matrix File Sharing 2.3
Ratio using 100% Cooperate 1/3 3
Ratio using 100% Defect 1/3 3
Ratio using Reciprocative 1/3 3
Mutation Probability 0.0 2.4
Learning Probability 0.05 2.4
Turnover Probability 0.0001 2.4
Hit Rate 1.0 4.1.1
Table 1: Default simulation parameters.
3.1 Simulation Framework
Our simulator implements the model described in Section 2. We use
the asymmetric file sharing payoff matrix (Figure 3) with 
untraceable defections because it models transactions in many P2P 
systems like file-sharing and packet forwarding in ad-hoc and overlay
networks. Our simulation study is composed of different scenarios
reflecting the challenges of various non-cooperative behaviors. 
Table 1 presents the nominal parameter values used in our simulation.
The Ratio using rows refer to the initial ratio of the total 
population using a particular strategy. In each scenario we vary the value
range of a specific parameter to reflect a particular situation or 
attack. We then vary the exact properties of the Reciprocative strategy
to defend against that situation or attack.
3.2 Baseline Results
0
20
40
60
80
100
120
0
200
400
600
800
1000
Population
Time
(a) Total Population: 60
0
20
40
60
80
100
120
0
200
400
600
800
1000
Time
(b) Total Population: 120
Defector
Cooperator
Recip. Private
Figure 4: The evolution of strategy populations over time. Time the
number of elapsed rounds. Population is the number of players using
a strategy.
In this section, we present the dynamics of the game for the 
basic scenario presented in Table 1 to familiarize the reader and set
a baseline for more complicated scenarios. Figures 4(a) (60 
players) and (b) (120 players) show players switching to higher 
scoring strategies over time in two separate runs of the simulator. Each
point in the graph represents the number of players using a 
particular strategy at one point in time. Figures 5(a) and (b) show the 
corresponding mean overall score per round. This measures the degree
of cooperation in the system: 6 is the maximum possible (achieved
when everybody cooperates) and 0 is the minimum (achieved when
everybody defects). From the file sharing payoff matrix, a net of 6
means everyone is able to download a file and a 0 means that no one
105
0
1
2
3
4
5
6
0
200
400
600
800
1000
MeanOverallScore/Round
Time
(a) Total Population: 60
0
1
2
3
4
5
6
0
200
400
600
800
1000
Time
(b) Total Population: 120
Figure 5: The mean overall per round score over time.
is able to do so. We use this metric in all later results to evaluate our
incentive techniques.
Figure 5(a) shows that the Reciprocative strategy using private 
history causes a system of 60 players to converge to a cooperation
level of 3.7, but drops to 0.5 for 120 players. One would expect the
60 player system to reach the optimal level of cooperation (6) 
because all the defectors are eliminated from the system. It does not
because of asymmetry of interest. For example, suppose player B
is using Reciprocative with private history. Player A may happen to
ask for service from player B twice in succession without 
providing service to player B in the interim. Player B does not know of the
service player A has provided to others, so player B will reject 
service to player A, even though player A is cooperative. We discuss
solutions to asymmetry of interest and the failure of Reciprocative
in the 120 player system in Section 4.1.
