Several disk-based indexing techniques have been used for air
indexing. Imielinski et al. [5, 6] applied the B+ index tree, where
the leaf nodes store the arrival times of the data items. The
distributed indexing method was proposed to efficiently replicate
and distribute the index tree in a broadcast. Specifically, the index
tree is divided into a replicated part and a non replicated part.
Each broadcast consists of the replicated part and the 
nonreplicated part that indexes the data items immediately following
it. As such, each node in the non-replicated part appears only once
in a broadcast and, hence, reduces the replication cost and access
latency while achieving a good tuning time. Chen et al. [2] and
Shivakumar et al. [8] considered unbalanced tree structures to
optimize energy consumption for non-uniform data access. These
structures minimize the average index search cost by reducing the
number of index searches for hot data at the expense of spending
more on cold data. Tan and Yu discussed data and index
organization under skewed broadcast Hashing and signature
methods have also been suggested for wireless broadcast that
supports equality queries [9]. A flexible indexing method was
proposed in [5]. The flexible index first sorts the data items in
ascending (or descending) order of the search key values and then
divides them into p segments. The first bucket in each data
segment contains a control index, which is a binary index
mapping a given key value to the segment containing that key,
and a local index, which is an m-entry index mapping a given key
value to the buckets within the current segment. By tuning the
parameters of p and m, mobile clients can achieve either a good
tuning time or good access latency. Another indexing technique
proposed is the exponential indexing scheme [17]. In this scheme,
a parameterized index, called the exponential index is used to
optimize the access latency or the tuning time. It facilitates index
replication by linking different search trees. All of the above
mentioned schemes have been applied to data which are non
related to each other. These non related data may be clustered or
non clustered. However, none of them has specifically addressed
the requirements of LDD. Location dependent data are data which
are associated with a location. Presently there are several
applications that deal with LDD [13, 16]. Almost all of them
depict LDD with the help of hierarchical structures [3, 4]. This is
based on the containment property of location dependent data.
The Containment property helps determining relative position of
an object by defining or identifying locations that contains those
objects. The subordinate locations are hierarchically related to
each other. Thus, Containment property limits the range of
availability or operation of a service. We use this containment
property in our indexing scheme to index LDD.
