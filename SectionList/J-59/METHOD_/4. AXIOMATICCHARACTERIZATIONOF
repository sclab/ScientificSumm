THE SHAPLEY VALUE
In this section, we will define serveral axioms on fairness
and characterize the Shapley value using them. For a given
q ∈ Q, we will denote ψ(q) as the set of allocations from
allocation rule ψ. Also, we will denote the cost share vector
associated with an allocation rule (σ, t) as π and that with
allocation rule (σ , t ) as π etc.
4.1 The Fairness Axioms
We will define three types of fairness axioms: (i) related
to efficiency, (ii) related to equity, and (iii) related to 
independence.
Efficiency Axioms
We define two types of efficiency axioms. One related to
efficiency which states that an efficient ordering should be
selected and the transfers of jobs should add up to zero
(budget balance).
Definition 1. An allocation rule ψ satisfies efficiency if
for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient 
allocation.
234
The second axiom related to efficiency says that the 
allocation rule should not discriminate between two allocations
which are equivalent to each other in terms of cost shares of
jobs.
Definition 2. An allocation rule ψ satisfies Pareto 
indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q),
we have
¡πi = πi ∀ i ∈ N¢⇒
¡(σ , t ) ∈ ψ(q)¢.
An implication of Pareto indifference axiom and Lemma
2 is that for every efficient ordering there is some set of
transfers of jobs such that it is part of an efficient rule and
the cost share of a job in all these allocations are same.
Equity Axioms
How should the cost be shared between two jobs if the jobs
have some kind of similarity between them? Equity axioms
provide us with fairness properties which help us answer
this question. We provide five such axioms. Some of these
axioms (for example anonymity, equal treatment of equals)
are standard in the literature, while some are new.
We start with a well known equity axiom called anonymity.
Denote ρ : N → N as a permutation of elements in N. Let
ρ(σ, t) denote the allocation obtained by permuting elements
in σ and t according to ρ. Similarly, let ρ(p, θ) denote the
new list of (p, θ) obtained by permuting elements of p and θ
according to ρ. Our first equity axiom states that allocation
rules should be immune to such permutation of data.
Definition 3. An allocation rule ψ satisfies anonymity if
for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then
ρ(σ, t) ∈ ψ(N, ρ(q)).
The next equity axiom is classical in literature and says
that two similar jobs should be compensated such that their
cost shares are equal. This implies that if all the jobs are of
same type, then jobs should equally share the total system
cost.
Definition 4. An allocation rule ψ satisfies equal 
treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q),
i, j ∈ N, then
¡pi = pj; θi = θj¢⇒
¡πi = πj¢.
ETE directs us to share costs equally between jobs if they
are of the same per unit waiting cost and processing time.
But it is silent about the cost shares of two jobs i and j
which satisfy θi
pi
=
θj
pj
. We introduce a new axiom for this.
If an efficient rule chooses σ such that σi < σj for some
i, j ∈ N, then job i is inflicting a cost of piθj on job j
and job j is inflicting zero cost on job i. Define for some
γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. In an efficient rule, the
elements in S(γ) can be ordered in any manner (in |S(γ)|!
ways). If i, j ∈ S(γ) then we have pjθi = piθj. Probability
of σi < σj is 1
2
and so is the probability of σi > σj. The
expected cost i inflicts on j is 1
2
piθj and j inflicts on i is
1
2
pjθi. Our next fairness axiom says that i and j should
each be responsible for their own processing cost and this
expected cost they inflict on each other. Arguing for every
pair of jobs i, j ∈ S(γ), we establish a bound on the cost
share of jobs in S(γ). We impose this as an equity axiom
below.
Definition 5. An allocation rule satisfies expected cost
bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the
resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ),
we have
πi ≥ piθi +
1
2
¡  
j∈S(γ):σj <σi
pjθi +
 
j∈S(γ):σj >σi
piθj¢.
The central idea behind this axiom is that of expected
cost inflicted. If an allocation rule chooses multiple 
allocations, we can assign equal probabilities of selecting one of
the allocations. In that case, the expected cost inflicted by
a job i on another job j in the allocation rule can be 
calculated. Our axiom says that the cost share of a job should
be at least its own processing cost and the total expected
cost it inflicts on others. Note that the above bound poses
no constraints on how the costs are shared among different
groups. Also observe that if S(γ) contains just one job, ECB
says that job should at least bear its own processing cost.
A direct consequence of ECB is the following lemma.
Lemma 4. Let ψ be an efficient rule which satisfies ECB.
For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which
gives a cost share of π, πi = piθi + 1
2
¡Li + Ri¢∀ i ∈ N.
Proof. From ECB, we get πi ≥ piθi+1
2
¡Li+Ri¢∀ i ∈ N.
Assume for contradiction that there exists j ∈ N such that
πj > pjθj + 1
2
¡Li + Ri¢. Using efficiency and the fact
that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) >
£i∈N piθi + 1
2
£i∈N
¡Li + Ri¢ = C(N). This gives us a
contradiction.
Next, we introduce an axiom about sharing the transfer
of a job between a set of jobs. In particular, if the last
job quits the system, then the ordering need not change.
But the transfer to the last job needs to be shared between
the other jobs. This should be done in proportion to their
processing times because every job influenced the last job
based on its processing time.
Definition 6. An allocation rule ψ satisfies 
proportionate responsibility of p (PRp) if for all q ∈ Q, for all
(σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \
{k}, p , θ ) ∈ Q, such that for all i ∈ N\{k}: θi = θi, pi = pi,
there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \ {k}:
σi = σi and
ti = ti + tk
pi
£j=k pj
.
An analogous fairness axiom results if we remove the job
from the beginning of the queue. Since the presence of the
first job influenced each job depending on their θ values, its
transfer needs to be shared in proportion to θ values.
Definition 7. An allocation rule ψ satisfies 
proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all
(σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \{k}, p , θ ) ∈
Q, such that for all i ∈ N \{k}: θi = θi, pi = pi, there exists
(σ , t ) ∈ ψ(q ) such that for all i ∈ N \ {k}: σi = σi and
ti = ti + tk
θi
£j=k θj
.
The proportionate responsibility axioms are 
generalizations of equal responsibility axioms introduced by 
Maniquet [15].
235
Independence Axioms
The waiting cost of a job does not depend on the per unit
waiting cost of its preceding jobs. Similarly, the waiting cost
inflicted by a job to its following jobs is independent of the
processing times of the following jobs. These independence
properties should be carried over to the cost sharing rules.
This gives us two independence axioms.
Definition 8. An allocation rule ψ satisfies independence
of preceding jobs" θ (IPJθ) if for all q = (N, p, θ), q =
(N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all
i ∈ N \ {k}: θi = θi, pi = pi and γk < γk, pk = pk,
then for all j ∈ N such that σj > σk: πj = πj, where π is
the cost share in (σ, t) and π is the cost share in (σ , t ).
Definition 9. An allocation rule ψ satisfies independence
of following jobs" p (IFJp) if for all q = (N, p, θ), q =
(N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all
i ∈ N \ {k}: θi = θi, pi = pi and γk > γk, θk = θk,
then for all j ∈ N such that σj < σk: πj = πj, where π is
the cost share in (σ, t) and π is the cost share in (σ , t ).
4.2 The Characterization Results
Having stated the fairness axioms, we propose three 
different ways to characterize the Shapley value rule using
these axioms. All our characterizations involve efficiency
and ECB. But if we have IPJθ, we either need IFJp or PRp.
Similarly if we have IFJp, we either need IPJθ or PRθ.
Proposition 1. Any efficient rule ψ that satisfies ECB,
IPJθ, and IFJp is a rule implied by the Shapley value rule.
Proof. Define for any i, j ∈ N, θi
j = γipj and pi
j =
θj
γi
. Assume without loss of generality that σ is an efficient
ordering with σi = i ∀ i ∈ N.
Consider the following q = (N, p , θ ) corresponding to
job i with pj = pj if j ≤ i and pj = pi
j if j > i, θj = θi
j if
j < i and θj = θj if j ≥ i. Observe that all jobs have the
same γ: γi. By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for
some set of transfers t . Using Lemma 4, we get cost share of
i from (σ, t ) as πi = piθi + 1
2
¡Li + Ri¢. Now, for any j < i,
if we change θj to θj without changing processing time, the
new γ of j is γj ≥ γi. Applying IPJθ, the cost share of job i
should not change. Similarly, for any job j > i, if we change
pj to pj without changing θj, the new γ of j is γj ≤ γi.
Applying IFJp, the cost share of job i should not change.
Applying this procedure for every j < i with IPJθ and for
every j > i with IFJp, we reach q = (N, p, θ) and the payoff
of i does not change from πi. Using this argument for every
i ∈ N and using the expression for the Shapley value in
Lemma 3, we get the Shapley value rule.
It is possible to replace one of the independence axioms
with an equity axiom on sharing the transfer of a job. This
is shown in Propositions 2 and 3.
Proposition 2. Any efficient rule ψ that satisfies ECB,
IPJθ, and PRp is a rule implied by the Shapley value rule.
Proof. As in the proof of Proposition 1, define θi
j =
γipj ∀ i, j ∈ N. Assume without loss of generality that σ is
an efficient ordering with σi = i ∀ i ∈ N.
Consider a queue with jobs in set K = {1, . . . , i, i + 1},
where i < n. Define q = (K, p, θ ), where θj = θi+1
j ∀ j ∈
K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering
for q . By ECB and Lemma 4 the cost share of job i +
1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 +
1
2
¡£j<i+1 pjθi+1¢. Now, consider q = (K, p, θ ) such that
θj = θi
j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient
ordering in q and by IPJθ the cost share of i + 1 remains
πi+1. In q = (K \ {i + 1}, p, θ ), we can calculate the
cost share of job i using ECB and Lemma 4 as πi = piθi +
1
2
£j<i pjθi. So, using PRp we get the new cost share of job
i in q as πi = πi + ti+1
pi
j<i+1 pj
= piθi + 1
2
¡£j<i pjθi +
piθi+1¢.
Now, we can set K = K ∪ {i + 2}. As before, we can
find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 +
1
2
¡£j<i+2 pjθi+2¢. Using PRp we get the new cost share
of job i in the new queue as πi = piθi + 1
2
¡£j<i pjθi +
piθi+1 + piθi+2¢. This process can be repeated till we add
job n at which point cost share of i is piθi + 1
2
¡£j<i pjθi +
£j>i piθj¢. Then, we can adjust the θ of preceding jobs of
i to their original value and applying IPJθ, the payoffs of
jobs i through n will not change. This gives us the Shapley
values of jobs i through n. Setting i = 1, we get cost shares
of all the jobs from ψ as the Shapley value.
Proposition 3. Any efficient rule ψ that satisfies ECB,
IFJp, and PRθ is a rule implied by the Shapley value rule.
Proof. The proof mirrors the proof of Proposition 2. We
provide a short sketch. Analogous to the proof of 
Proposition 2, θs are kept equal to original data and processing times
are initialized to pi+1
j . This allows us to use IFJp. Also, 
contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and
repeatedly add jobs to the beginning of the queue 
maintaining the same efficient ordering. So, we add the cost 
components of preceding jobs to the cost share of jobs in each
iteration and converge to the Shapley value rule.
The next proposition shows that the Shapley value rule
satisfies all the fairness axioms discussed.
Proposition 4. The Shapley value rule satisfies efficiency,
pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp,
and PRθ.
Proof. The Shapley value rule chooses an efficient 
ordering and by definition the payments add upto zero. So, it
satisfies efficiency.
The Shapley value assigns same cost share to a job 
irrespective of the efficient ordering chosen. So, it is pareto
indifferent.
The Shapley value is anonymous because the particular
index of a job does not effect his ordering or cost share.
For ETE, consider two jobs i, j ∈ N such that pi = pj
and θi = θj. Without loss of generality assume the efficient
ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value
of job i is
236
SVi = piθi +
1
2
¡Li + Ri¢(From Lemma 3)
= pjθj +
1
2
¡Lj + Rj¢−
1
2
¡Li − Lj + Ri − Rj¢
= SVj −
1
2
¡  
i<k≤j
piθk −
 
i≤k<j
pkθi¢
= SVj −
1
2
 
i<k≤j
(piθk − pkθi) (Using pi = pj and θi = θj)
= SVj (Using
θk
pk
=
θi
pi
for all i ≤ k ≤ j).
The Shapley value satisfies ECB by its expression in Lemma
3.
Consider any job i, in an efficient ordering σ, if we increase
the value of γj for some j = i such that σj > σi, then
the set Pi ( preceding jobs) does not change in the new
efficient ordering. If γj is changed such that pj remains the
same, then the expression £j∈Pi
θipj is unchanged. If (p, θ)
values of no other jobs are changed, then the Shapley value
is unchanged by increasing γj for some j ∈ Pi while keeping
pj unchanged. Thus, the Shapley value rule satisfies IPJθ.
An analogous argument shows that the Shapley value rule
satisfies IFJp.
For PRp, assume without loss of generality that jobs are
ordered 1, . . . , n in an efficient ordering. Denote the transfer
of job i = n due to the Shapley value with set of jobs N and
set of jobs N \ {n} as ti and ti respectively. Transfer of last
job is tn = 1
2
θn £j<n pj. Now,
ti =
1
2
¡θi
 
j<i
pj − pi
 
j>i
θj¢
=
1
2
¡θi
 
j<i
pj − pi
 
j>i:j=n
θj¢−
1
2
piθn
= ti −
1
2
θn
 
j<n
pj
pi
£j<n pj
= ti − tn
pi
£j<n pj
.
A similar argument shows that the Shapley value rule 
satisfies PRθ.
These series of propositions lead us to our main result.
Theorem 1. Let ψ be an allocation rule. The following
statements are equivalent:
1) For each q ∈ Q, ψ(q) selects all the allocation assigning
jobs cost shares implied by the Shapley value.
2) ψ satisfies efficiency, ECB, IFJp, and IPJθ.
3) ψ satisfies efficiency, ECB, IFJp, and PRθ.
4) ψ satisfies efficiency, ECB, PRp, and IPJθ.
Proof. The proof follows from Propositions 1, 2, 3, and
4.
