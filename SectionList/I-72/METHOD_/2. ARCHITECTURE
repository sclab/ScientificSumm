Our main components are consumer and producer agents, which
communicate with each other to perform content-oriented 
negotiation. Figure 1 depicts our architecture. The consumer agent 
represents the customer and hence has access to the preferences of the
customer. The consumer agent generates requests in accordance
with these preferences and negotiates with the producer based on
these preferences. Similarly, the producer agent has access to the
producer"s inventory and knows which wines are available or not.
A shared ontology provides the necessary vocabulary and hence
enables a common language for agents. This ontology describes
the content of the service. Further, since an ontology can represent
concepts, their properties and their relationships semantically, the
agents can reason the details of the service that is being negotiated.
Since a service can be anything such as selling a car, reserving a
hotel room, and so on, the architecture is independent of the 
ontology used. However, to make our discussion concrete, we use the
well-known Wine ontology [19] with some modification to 
illustrate our ideas and to test our system. The wine ontology describes
different types of wine and includes features such as color, body,
winery of the wine and so on. With this ontology, the service that
is being negotiated between the consumer and the producer is that
of selling wine.
The data repository in Figure 1 is used solely by the producer
agent and holds the inventory information of the producer. The
data repository includes information on the products the producer
owns, the number of the products and ratings of those products.
Ratings indicate the popularity of the products among customers.
Those are used to decide which product will be offered when there
exists more than one product having same similarity to the request
of the consumer agent.
The negotiation takes place in a turn-taking fashion, where the
consumer agent starts the negotiation with a particular service 
request. The request is composed of significant features of the 
service. In the wine example, these features include color, winery and
so on. This is the particular wine that the customer is interested in
purchasing. If the producer has the requested wine in its inventory,
the producer offers the wine and the negotiation ends. Otherwise,
the producer offers an alternative wine from the inventory. When
the consumer receives a counter offer from the producer, it will
evaluate it. If it is acceptable, then the negotiation will end. 
Otherwise, the customer will generate a new request or stick to the
previous request. This process will continue until some service is
accepted by the consumer agent or all possible offers are put 
forward to the consumer by the producer.
One of the crucial challenges of the content-oriented negotiation
is the automatic generation of counter offers by the service 
producer. When the producer constructs its offer, it should consider
Figure 1: Proposed Negotiation Architecture
three important things: the current request, consumer preferences
and the producer"s available services. Both the consumer"s current
request and the producer"s own available services are accessible by
the producer. However, the consumer"s preferences in most cases
will not be available. Hence, the producer will have to understand
the needs of the consumer from their interactions and generate a
counter offer that is likely to be accepted by the consumer. This
challenge can be studied in three stages:
• Preference Learning: How can the producers learn about
each customer"s preferences based on requests and counter
offers? (Section 3)
• Service Offering: How can the producers revise their offers
based on the consumer"s preferences that they have learned
so far? (Section 4)
• Similarity Estimation: How can the producer agent estimate
similarity between the request and available services? 
(Section 5)
