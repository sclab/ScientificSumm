We turn next to consider the problem of finding a best deal 
between pairs of traders. The complexity of MMP depends pivotally
on the representation by bids of offer sets, an issue we have 
postponed to this point.
Note that issues of utility representation and MMP apply to a
broad class of multiattribute mechanisms, beyond the multiattribute
call markets we emphasize. For example, the complexity results
contained in this section apply equally to the bidding problem faced
by sellers in reverse auctions, given a published buyer scoring 
function.
The simplest representation of an offer set is a direct 
enumeration of configurations and associated quantities and payments. This
approach treats the configurations as atomic entities, making no use
2
That is, for such an agent i, OC
i is the closure under configuration
aggregation of ONA
i .
of attribute structure. A common and inexpensive enhancement is
to enable a trader to express sets of configurations, by specifying
subsets of the domains of component attributes. Associating a 
single quantity and payment with a set of configurations expresses
indifference among them; hence we refer to such a set as an 
indifference range.3
Indifference ranges include the case of attributes
with a natural ordering, in which a bid specifies a minimum or
maximum acceptable attribute level. The use of indifference ranges
can be convenient for MMP. The compatibility of two indifference
ranges is simply found by testing set intersection for each attribute,
as demonstrated by the decision-tree algorithm of Fink et al. [12].
Alternatively, bidders may specify willingness-to-pay functions
ˆu in terms of compact functional forms. Enumeration based 
representations, even when enhanced with indifference ranges, are 
ultimately limited by the exponential size of attribute space. 
Functional forms may avoid this explosion, but only if ˆu reflects 
structure among the attributes. Moreover, even given a compact 
specification of ˆu, we gain computational benefits only if we can 
perform the matching without expanding the ˆu values of an 
exponential number of configuration points.
4.1 Additive Forms
One particularly useful multiattribute representation is known as
the additive scoring function. Though this form is widely used in
practice and in the academic literature, it is important to stress the
assumptions behind it. The theory of multiattribute representation
is best developed in the context where ˆu is interpreted as a 
utility function representing an underlying preference order [17]. We
present the premises of additive utility theory in this section, and
discuss some generalizations in the next.
DEFINITION 17. A set of attributes Y ⊂ X is preferentially
independent (PI) of its complement Z = X \ Y if the conditional
preference order over Y given a fixed level Z0
of Z is the same
regardless of the choice of Z0
.
In other words, the preference order over the projection of X on
the attributes in Y is the same for any instantiation of the attributes
in Z.
DEFINITION 18. X = {x1, . . . , xm} is mutually preferentially
independent (MPI) if any subset of X is preferentially independent
of its complement.
THEOREM 6 ([9]). A preference order over set of attributes
X has an additive utility function representation
u(x1, . . . , xm) =
mX
i=1
ui(xi)
iff X is mutually preferential independent.
A utility function over outcomes including money is quasi-linear
if the function can be represented as a function over non-monetary
attributes plus payments, π. Interpreting ˆu as a utility function over
non-monetary attributes is tantamount to assuming quasi-linearity.
Even when quasi-linearity is assumed, however, MPI over 
nonmonetary attributes is not sufficient for the quasi-linear utility 
function to be additive. For this, we also need that each of the pairs
(π, Xi) for any attribute Xi would be PI of the rest of the attributes.
3
These should not be mistaken with indifference curves, which 
express dependency between the attributes. Indifference curves can
be expressed by the more elaborate utility representations discussed
below.
113
This (by MAUT) in turn implies that the set of attributes including
money is MPI and the utility function can be represented as
u(x1, . . . , xm, π) =
mX
i=1
ui(xi) + π.
Given that form, a willingness-to-pay function reflecting u can be
represented additively, as
ˆu(x) =
mX
i=1
ui(xi)
In many cases the additivity assumption provides practically 
crucial simplification of offer set elicitation. In addition to 
compactness, additivity dramatically simplifies MMP. If both sides provide
additive ˆu representations, the globally optimal match reduces to
finding the optimal match separately for each attribute.
A common scenario in procurement has the buyer define an 
additive scoring function, while suppliers submit enumerated offer
points or indifference ranges. This model is still very amenable to
MMP: for each element in a supplier"s enumerated set, we optimize
each attribute by finding the point in the supplier"s allowable range
that is most preferred by the buyer.
A special type of scoring (more particularly, cost) function was
defined by Bichler and Kalagnanam [4] and called a configurable
offer. This idea is geared towards procurement auctions: assuming
suppliers are usually comfortable with expressing their preferences
in terms of cost that is quasi-linear in every attribute, they can 
specify a price for a base offer, and additional cost for every change in
a specific attribute level. This model is essentially a pricing out
approach [17]. For this case, MMP can still be optimized on a
per-attribute basis. A similar idea has been applied to one-sided
iterative mechanisms [19], in which sellers refine prices on a 
perattribute basis at each iteration.
4.2 Multiattribute Utility Theory
Under MPI, the tradeoffs between the attributes in each subset
cannot be affected by the value of other attributes. For example,
when buying a PC, a weaker CPU may increase the importance of
the RAM compared to, say, the type of keyboard. Such 
relationships cannot be expressed under an additive model.
Multiattribute utility theory (MAUT) develops various compact
representations of utility functions that are based on weaker 
structural assumptions [17, 2]. There are several challenges in adapting
these techniques to multiattribute bidding. First, as noted above,
the theory is developed for utility functions, which may behave 
differently from willingness-to-pay functions. Second, computational
efficiency of matching has not been an explicit goal of most work
in the area. Third, adapting such representations to iterative 
mechanisms may be more challenging.
One representation that employs somewhat weaker assumptions
than additivity, yet retains the summation structure is the 
generalized additive (GA) decomposition:
u(x) =
JX
j=1
fj(xj
), xj
∈ Xj
, (2)
where the Xj
are potentially overlapping sets of attributes, together
exhausting the space X.
A key point from our perspective is that the complexity of the
matching is similar to the complexity of optimizing a single 
function, since the sum function is in the form (2) as well. Recent work
by Gonzales and Perny [15] provides an elicitation process for GA
decomposable preferences under certainty, as well as an 
optimization algorithm for the GA decomposed function. The complexity of
exact optimization is exponential in the induced width of the graph.
However, to become operational for multiattribute bidding this 
decomposition must be detectable and verifiable by statements over
preferences with respect to price outcomes. We are exploring this
topic in ongoing work [11].
