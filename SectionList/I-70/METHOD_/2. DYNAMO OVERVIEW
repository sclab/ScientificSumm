2.1 Ontology as a Multi-Agent System
Dynamo aims at reducing the need for manual actions in 
processing the text analysis results and at suggesting a concept 
network kick-off in order to build ontologies more efficiently. The
chosen approach is completely original to our knowledge and uses
an adaptive multi-agent system. This choice comes from the 
qualities offered by multi-agent system: they can ease the interactive
design of a system [8] (in our case, a conceptual network), they
allow its incremental building by progressively taking into account
new data (coming from text analysis and user interaction), and last
but not least they can be easily distributed across a computer 
network.
Dynamo takes a syntactical and terminological analysis of texts
as input. It uses several criteria based on statistics computed from
the linguistic contexts of terms to create and position the concepts.
As output, Dynamo provides to the analyst a hierarchical 
organization of concepts (the multi-agent system itself) that can be 
validated, refined of modified, until he/she obtains a satisfying state of
1286
978-81-904262-7-5 (RPS) c 2007 IFAAMAS
the semantic network.
An ontology can be seen as a stable map constituted of 
conceptual entities, represented here by agents, linked by labelled 
relations. Thus, our approach considers an ontology as a type of
equilibrium between its concept-agents where their forces are 
defined by their potential relationships. The ontology modification
is a perturbation of the previous equilibrium by the appearance or
disappearance of agents or relationships. In this way, a dynamic
ontology is a self-organizing process occurring when new texts are
included into the corpus, or when the ontologist interacts with it.
To support the needed flexibility of such a system we use a 
selforganizing multi-agent system based on a cooperative approach [9].
We followed the ADELFE method [4] proposed to drive the design
of this kind of multi-agent system. It justifies how we designed
some of the rules used by our agents in order to maximize the 
cooperation degree within Dynamo"s multi-agent system.
2.2 Proposed Architecture
In this section, we present our system architecture. It addresses
the needs of Knowledge Engineering in the context of dynamic 
ontology management and maintenance when the ontology is linked
to a document collection.
The Dynamo system consists of three parts (cf. figure 1):
• a term network, obtained thanks to a term extraction tool
used to preprocess the textual corpus,
• a multi-agent system which uses the term network to make a
hierarchical clustering in order to obtain a taxonomy of 
concepts,
• an interface allowing the ontologist to visualize and control
the clustering process.
??
Ontologist
Interface
System
Concept Agent Term
Term network
Terms
Extraction
Tool
Figure 1: System architecture
The term extractor we use is Syntex, a software that has 
efficiently been used for ontology building tasks [11]. We mainly 
selected it because of its robustness and the great amount of 
information extracted. In particular, it creates a "Head-Expansion" network
which has already proven to be interesting for a clustering system
[1]. In such a network, each term is linked to its head term1
and
1
i.e. the maximum sub-phrase located as head of the term
its expansion term2
, and also to all the terms for which it is a head
or an expansion term. For example, "knowledge engineering from
text" has "knowledge engineering" as head term and "text" as 
expansion term. Moreover, "knowledge engineering" is composed of
"knowledge" as head term and "engineering" as expansion term.
With Dynamo, the term network obtained as the output of the 
extractor is stored in a database. For each term pair, we assume that it
is possible to compute a similarity value in order to make a 
clustering [6] [1]. Because of the nature of the data, we are only focusing
on similarity computation between objects described thanks to 
binary variables, that means that each item is described by the 
presence or absence of a characteristic set [15]. In the case of terms
we are generally dealing with their usage contexts. With Syntex,
those contexts are identified by terms and characterized by some
syntactic relations.
The Dynamo multi-agent system implements the distributed 
clustering algorithm described in detail in section 3 and the rules 
described in section 4. It is designed to be both the system 
producing the resulting structure and the structure itself. It means that
each agent represent a class in the taxonomy. Then, the system
output is the organization obtained from the interaction between
agents, while taking into account feedback coming from the 
ontologist when he/she modifies the taxonomy given his needs or 
expertise.
