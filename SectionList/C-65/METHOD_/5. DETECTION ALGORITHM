There are several characteristics of acoustic shockwaves
and muzzle blasts which distinguish their detection and 
signal processing algorithms from regular audio applications.
Both events are transient by their nature and present very
intense stimuli to the microphones. This is increasingly
problematic with low cost electret microphones-designed
for picking up regular speech or music. Although 
mechanical damping of the microphone membranes can mitigate
the problem, this approach is not without side effects. The
detection algorithms have to be robust enough to handle 
severe nonlinear distortion and transitory oscillations. Since
the muzzle blast signature closely follows the shockwave 
signal and because of potential automatic weapon bursts, it is
extremely important to settle the audio channels and the
detection logic as soon as possible after an event. Also, 
precise angle of arrival estimation necessitates high sampling
frequency (in the MHz range) and accurate event detection.
Moreover, the detection logic needs to process multiple 
channels in parallel (4 channels on our existing hardware).
These requirements dictated simple and robust algorithms
both for muzzle blast and shockwave detections. Instead of
using mundane energy detectors-which might not be able
to distinguish the two different events-the applied 
detectors strive to find the most important characteristics of the
two signals in the time-domain using simple state machine
logic. The detectors are implemented as independent IP
cores within the FPGA-one pair for each channel. The
cores are run-time configurable and provide detection event
signals with high precision time stamps and event specific
feature vectors. Although the cores are running 
independently and in parallel, a crude local fusion module integrates
them by shutting down those cores which missed their events
after a reasonable timeout and by generating a single 
detection message towards the mote. At this point, the mote can
read and forward the detection times and features and is
responsible to restart the cores afterwards.
The most conspicuous characteristics of an acoustic 
shockwave (see Figure 5(a)) are the steep rising edges at the 
be0 200 400 600 800 1000 1200 1400 1600
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
Shockwave (M16)
Time (µs)
Amplitude
1
3
5
2
4
len
(a)
s[t] - s[t-D] > E
tstart
:= t
s[t] - s[t-D] < E
s[t] - s[t-D] > E &
t - t_start > Lmin
s[t] - s[t-D] < E
len := t - tstart
IDLE
1
FIRST EDGE DONE
3
SECOND EDGE
4
FIRST EDGE
2
FOUND
5
t - tstart
≥ Lmax
t - tstart
≥ Lmax
(b)
Figure 5: Shockwave signal generated by a 5.56 ×
45 mm NATO projectile (a) and the state machine
of the detection algorithm (b).
ginning and end of the signal. Also, the length of the N-wave
is fairly predictable-as it is described in Section 6.5-and is
relatively short (200-300 μs). The shockwave detection core
is continuously looking for two rising edges within a given
interval. The state machine of the algorithm is shown in
Figure 5(b). The input parameters are the minimum 
steepness of the edges (D, E), and the bounds on the length of
the wave (Lmin, Lmax). The only feature calculated by the
core is the length of the observed shockwave signal.
In contrast to shockwaves, the muzzle blast signatures are
characterized by a long initial period (1-5 ms) where the first
half period is significantly shorter than the second half [4].
Due to the physical limitations of the analog circuitry 
described at the beginning of this section, irregular oscillations
and glitches might show up within this longer time window
as they can be clearly seen in Figure 6(a). Therefore, the real
challenge for the matching detection core is to identify the
first and second half periods properly. The state machine
(Figure 6(b)) does not work on the raw samples directly
but is fed by a zero crossing (ZC) encoder. After the initial
triggering, the detector attempts to collect those ZC 
segments which belong to the first period (positive amplitude)
while discarding too short (in our terminology: garbage)
segments-effectively implementing a rudimentary low-pass
filter in the ZC domain. After it encounters a sufficiently
long negative segment, it runs the same collection logic for
the second half period. If too much garbage is discarded
in the collection phases, the core resets itself to prevent the
(false) detection of the halves from completely different 
periods separated by rapid oscillation or noise. Finally, if the
constraints on the total length and on the length ratio hold,
the core generates a detection event along with the actual
length, amplitude and energy of the period calculated 
concurrently. The initial triggering mechanism is based on two
amplitude thresholds: one static (but configurable) 
amplitude level and a dynamically computed one. The latter one
is essential to adapt the sensor to different ambient noise
environments and to temporarily suspend the muzzle blast
detector after a shock wave event (oscillations in the analog
section or reverberations in the sensor enclosure might 
otherwise trigger false muzzle blast detections). The dynamic
noise level is estimated by a single pole recursive low-pass
filter (cutoff @ 0.5 kHz ) on the FPGA.
117
0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000
-1
-0.8
-0.6
-0.4
-0.2
0
0.2
0.4
0.6
0.8
1
Time (µs)
Amplitude
Muzzle blast (M16)
1
2
3
4 5
len2
+
len1
(a)
IDLE
1
SECOND ZC
3
PENDING ZC
4
FIRST ZC
2
FOUND
5
amplitude
threshold
long
positive ZC
long
negative ZC
valid
full period
max
garbage
wrong sign
garbage
collect
first period
garbage
collect
first period
garbage
(b)
Figure 6: Muzzle blast signature (a) produced by an
M16 assault rifle and the corresponding detection
logic (b).
The detection cores were originally implemented in Java
and evaluated on pre-recorded signals because of much faster
test runs and more convenient debugging facilities. Later
on, they were ported to VHDL and synthesized using the
Xilinx ISE tool suite. The functional equivalence between
the two implementations were tested by VHDL test benches
and Python scripts which provided an automated way to
exercise the detection cores on the same set of pre-recorded
signals and to compare the results.
