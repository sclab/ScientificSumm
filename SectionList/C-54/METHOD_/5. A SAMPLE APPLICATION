FedStats [1] is an online source that enables ordinary 
citizens access to official statistics of numerous federal agencies
without knowing in advance which agency produced them.
We are using a FedStats data set as a testbed for our work.
Our goal is to provide more power to the users of FedStats
by utilizing the SAND Internet Browser. As an example,
we looked at two data files corresponding to 
Environmental Protection Agency (EPA)-regulated facilities that have
chlorine and arsenic, respectively. For each file, we had the
following information available: EPA-ID, name, street, city,
state, zip code, latitude, longitude, followed by flags to 
indicate if that facility is in the following EPA programs: 
Hazardous Waste, Wastewater Discharge, Air Emissions, 
Abandoned Toxic Waste Dump, and Active Toxic Release.
We put this data into a SAND relation where the spatial
attribute ‘location" corresponds to the latitude and 
longitude. Some queries that can be handled with our system on
this data include:
1. Find all EPA-regulated facilities that have arsenic and
participate in the Air Emissions program, and:
(a) Lie in Georgia to Illinois, alphabetically.
(b) Lie within Arkansas or 30 miles within its border.
(c) Lie within 30 miles of the border of Arkansas (i.e.,
both sides of the border).
2. For each EPA-regulated facility that has arsenic, find
all EPA-regulated facilities that have chlorine and:
(a) That are closer to it than to any other 
EPAregulated facility that has arsenic.
(b) That participate in the Air Emissions program
and are closer to it than to any other 
EPAregulated facility which has arsenic. In order to
avoid reporting a particular facility more than
once, we use our ‘group by EPA-ID" mechanism.
Figure 3 illustrates the output of an example query that
finds all arsenic sites within a given distance of the border of
Arkansas. The sites are obtained in an incremental manner
with respect to a given point. This ordering is shown by
using different color shades.
With this example data, it is possible to work with the
SAND Internet Browser online as an applet (connecting to
a remote server) or after localizing the data and then 
opening it locally. In the first case, for each action taken, the
client-server architecture will decide what to ask for from
the server. In the latter case, the browser will use the 
peerto-peer APPOINT architecture for first localizing the data.
