The role of kidneys is to filter waste from blood. Kidney
failure results in accumulation of this waste, which leads
to death in months. One treatment option is dialysis, in
which the patient goes to a hospital to have his/her blood
filtered by an external machine. Several visits are required
per week, and each takes several hours. The quality of life
on dialysis can be extremely low, and in fact many patients
opt to withdraw from dialysis, leading to a natural death.
Only 12% of dialysis patients survive 10 years [23].
Instead, the preferred treatment is a kidney transplant.
Kidney transplants are by far the most common transplant.
Unfortunately, the demand for kidneys far outstrips supply.
In the United States in 2005, 4,052 people died waiting for
a life-saving kidney transplant. During this time, almost
30,000 people were added to the national waiting list, while
only 9,913 people left the list after receiving a 
deceaseddonor kidney. The waiting list currently has over 70,000
people, and the median waiting time ranges from 2 to 5
years, depending on blood type.1
For many patients with kidney disease, the best option is
to find a living donor, that is, a healthy person willing to
donate one of his/her two kidneys. Although there are 
marketplaces for buying and selling living-donor kidneys, the
commercialization of human organs is almost universally 
regarded as unethical, and the practice is often explicitly 
illegal, such as in the US. However, in most countries, live
donation is legal, provided it occurs as a gift with no 
financial compensation. In 2005, there were 6,563 live donations
in the US.
The number of live donations would have been much higher
if it were not for the fact that, frequently, a potential donor
1
Data from the United Network for Organ Sharing [21].
295
and his intended recipient are blood-type or tissue-type 
incompatible. In the past, the incompatible donor was sent
home, leaving the patient to wait for a deceased-donor 
kidney. However, there are now a few regional kidney exchanges
in the United States, in which patients can swap their 
incompatible donors with each other, in order to each obtain
a compatible donor.
These markets are examples of barter exchanges. In a
barter-exchange market, agents (patients) seek to swap their
items (incompatible donors) with each other. These swaps
consist of cycles of agents, with each agent receiving the
item of the next agent in the cycle. Barter exchanges are
ubiquitous: examples include Peerflix (DVDs) [11], Read It
Swap It (books) [12], and Intervac (holiday houses) [9]. For
many years, there has even been a large shoe exchange in
the United States [10]. People with different-sized feet use
this to avoid having to buy two pairs of shoes. Leg amputees
have a separate exchange to share the cost of buying a single
pair of shoes.
We can encode a barter exchange market as a directed
graph G = (V, E) in the following way. Construct one vertex
for each agent. Add a weighted edge e from one agent vi to
another vj, if vi wants the item of vj. The weight we of e
represents the utility to vi of obtaining vj"s item. A cycle c
in this graph represents a possible swap, with each agent in
the cycle obtaining the item of the next agent. The weight
wc of a cycle c is the sum of its edge weights. An exchange
is a collection of disjoint cycles. The weight of an exchange
is the sum of its cycle weights. A social welfare maximizing
exchange is one with maximum weight.
Figure 1 illustrates an example market with 5 agents,
{v1, v2, . . . , v5}, in which all edges have weight 1. The 
market has 4 cycles, c1 = v1, v2 , c2 = v2, v3 , c3 = v3, v4
and c4 = v1, v2, v3, v4, v5 , and two (inclusion) maximal 
exchanges, namely M1 = {c4} and M2 = {c1, c3}. Exchange
M1 has both maximum weight and maximum cardinality
(i.e., it includes the most edges/vertices).
v1 v2 v3 v4
v5
e1 e3 e5
c1 c2 c3
e8
e7
e6e4e2
c4
Figure 1: Example barter exchange market.
The clearing problem is to find a maximum-weight 
exchange consisting of cycles with length at most some small
constant L. This cycle-length constraint arises naturally
for several reasons. For example, in a kidney exchange, all
operations in a cycle have to be performed simultaneously;
otherwise a donor might back out after his incompatible
partner has received a kidney. (One cannot write a binding
contract to donate an organ.) This gives rise to a logistical
constraint on cycle size: even if all the donors are operated
on first and the same personnel and facilities are used to
then operate on the donees, a k-cycle requires between 3k
and 6k doctors, around 4k nurses, and almost 2k operating
rooms.
Due to such resource constraints, the upcoming national
kidney exchange market will likely allow only cycles of length
2 and 3. Another motivation for short cycles is that if the
cycle fails to exchange, fewer agents are affected. For 
example, last-minute testing in a kidney exchange often reveals
new incompatibilities that were not detected in the initial
testing (based on which the compatibility graph was 
constructed). More generally, an agent may drop out of a cycle
if his preferences have changed, or he/she simply fails to 
fulfill his obligations (such as sending a book to another agent
in the cycle) due to forgetfulness.
In Section 3, we show that (the decision version of) the
clearing problem is NP-complete for L ≥ 3. One approach
then might be to look for a good heuristic or 
approximation algorithm. However, for two reasons, we aim for an
exact algorithm based on an integer-linear program (ILP)
formulation, which we solve using specialized tree search.
• First, any loss of optimality could lead to unnecessary
patient deaths.
• Second, an attractive feature of using an ILP 
formulation is that it allows one to easily model a number of
variations on the objective, and to add additional 
constraints to the problem. For example, if 3-cycles are
believed to be more likely to fail than 2-cycles, then
one can simply give them a weight that is 
appropriately lower than 3/2 the weight of a 2-cycle. Or, if
for various (e.g., ethical) reasons one requires a 
maximum cardinality exchange, one can at least in a second
pass find the solution (out of all maximum cardinality
solutions) that has the fewest 3-cycles. Other 
variations one can solve for include finding various forms of
fault tolerant (non-disjoint) collections of cycles in
the event that certain pairs that were thought to be
compatible turn out to be incompatible after all.
In this paper, we present the first algorithm capable of
clearing these markets on a nationwide scale. Straight-forward
ILP encodings are too large to even construct on current
hardware - not to talk about solving them. The key then
is incremental problem formulation. We adapt two 
paradigms for the task: constraint generation and column 
generation. For each, we develop a host of (mainly 
problemspecific) techniques that dramatically improve both runtime
and memory usage.
1.1 Prior Work
Several recent papers have used simulations and 
marketclearing algorithms to explore the impact of a national 
kidney exchange [13, 20, 6, 14, 15, 17]. For example, 
using Edmond"s maximum-matching algorithm [4], [20] shows
that a national pairwise-exchange market (using length-2 
cycles only) would result in more transplants, reduced waiting
time, and savings of $750 million in heath care costs over 5
years. Those results are conservative in two ways. Firstly,
the simulated market contained only 4,000 initial patients,
with 250 patients added every 3 months. It has been 
reported to us that the market could be almost double this
size. Secondly, the exchanges were restricted to length-2 
cycles (because that is all that can be modeled as maximum
matching, and solved using Edmonds"s algorithm). 
Allowing length-3 cycles leads to additional significant gains. This
has been demonstrated on kidney exchange markets with
100 patients by using CPLEX to solve an integer-program
encoding of the clearing problem [15]. In this paper, we
296
present an alternative algorithm for this integer program
that can clear markets with over 10,000 patients (and that
same number of willing donors).
Allowing cycles of length more than 3 often leads to no
improvement in the size of the exchange [15]. (Furthermore,
in a simplified theoretical model, any kidney exchange can
be converted into one with cycles of length at most 4 [15].)
Whilst this does not hold for general barter exchanges, or
even for all kidney exchange markets, in Section 5.2.3 we
make use of the observation that short cycles suffice to 
dramatically increase the speed of our algorithm.
At a high-level, the clearing problem for barter exchanges
is similar to the clearing problem (aka winner 
determination problem) in combinatorial auctions. In both settings,
the idea is to gather all the pertinent information about the
agents into a central clearing point and to run a centralized
clearing algorithm to determine the allocation. Both 
problems are NP-hard. Both are best solved using tree search
techniques. Since 1999, significant work has been done in
computer science and operations research on faster optimal
tree search algorithms for clearing combinatorial auctions.
(For a recent review, see [18].) However, the kidney 
exchange clearing problem (with a limit of 3 or more on 
cycle size) is different from the combinatorial auction clearing
problem in significant ways. The most important difference
is that the natural formulations of the combinatorial 
auction problem tend to easily fit in memory, so time is the
bottleneck in practice. In contrast, the natural formulations
of the kidney exchange problem (with L = 3) take at least
cubic space in the number of patients to even model, and
therefore memory becomes a bottleneck much before time
does when using standard tree search, such as 
branch-andcut in CPLEX, to tackle the problem. (On a 1GB computer
and a realistic standard instance generator, discussed later,
CPLEX 10.010 runs out of memory on five of the ten 
900patient instances and ten of the ten 1,000-patient instances
that we generated.) Therefore, the approaches that have
been developed for combinatorial auctions cannot handle
the kidney exchange problem.
1.2 Paper Outline
The rest of the paper is organized as follows. Section 2
discusses the process by which we generate realistic kidney
exchange market data, in order to benchmark the clearing
algorithms. Section 3 contains a proof that the market 
clearing decision problem is NP-complete. Sections 4 and 5 each
contain an ILP formulation of the clearing problem. We also
detail in those sections our techniques used to solve those
programs on large instances. Section 6 presents experiments
on the various techniques. Section 7 discusses recent 
fielding of our algorithm. Finally, we present our conclusions in
Section 8, and suggest future research directions.
