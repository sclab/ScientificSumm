Efficient discovery of grid services is essential for the success of
grid computing. The standardization of grids based on web
services has resulted in the need for scalable web service
Permission to make digital or hard copies of all or part of this
work for personal or classroom use is granted without fee
provided that copies are not made or distributed for profit or
commercial advantage and that copies bear this notice and the
full citation on the first page. To copy otherwise,to republish,
to post on servers or to redistribute to lists, requires prior
specific permission and/or a fee.
MGC '05, November 28- December 2, 2005 Grenoble , France
discovery mechanisms to be deployed in grids. Grid discovery
services provide the ability to monitor and discover resources and
services on grids. They provide the ability to query and subscribe
to resource/service information. In addition, threshold traps might
be required to indicate specific change in existing conditions. The
state of the data needs to be maintained in a soft state so that the
most recent information is always available. The information
gathered needs to be provided to variety of systems for the
purpose of either utilizing the grid or proving summary
information. However, the fundamental problem is the need to be
scalable to handle huge amounts of data from multiple sources.
The web services community has addressed the need for service
discovery, before grids were anticipated, via an industry standard
called UDDI. However, even though UDDI has been the de facto
industry standard for web-services discovery, imposed
requirements of tight-replication among registries and lack of
autonomous control, among other things has severely hindered its
widespread deployment and usage [7]. With the advent of grid
computing the scalability issue with UDDI will become a
roadblock that will prevent its deployment in grids.
This paper tackles the scalability issue and a way to find services
across multiple registries in UDDI by developing a distributed
web services discovery architecture. Distributing UDDI
functionality can be achieved in multiple ways and perhaps using
different distributed computing infrastructure/platforms (e.g.,
CORBA, DCE, etc.). In this paper we explore how Distributed
Hash Table (DHT) technology can be leveraged to develop a
scalable distributed web services discovery architecture. A DHT is
a peer-to-peer (P2P) distributed system that forms a structured
overlay allowing more efficient routing than the underlying
network. This crucial design choice is motivated by two factors.
The first motivating factor is the inherent simplicity of the put/get
abstraction that DHTs provide, which makes it easy to rapidly
build applications on top of DHTs. We recognize that having just
this abstraction may not suffice for all distributed applications, but
for the objective at hand, works very well as will become clear
later. Other distributed computing platforms/middleware while
providing more functionality have much higher overhead and
complexity. The second motivating factor stems from the fact that
DHTs are relatively new tool for building distributed applications
and we would like to test its potential by applying it to the
problem of distributing UDDI.
In the next section, we provide a brief overview of grid
information services, UDDI and its limitations, which is followed
by an overview of DHTs in Section 3. Section 4 describes our
proposed architecture with details on use cases. In Section 5, we
Article 2
describe our current implementation, followed by our findings in
Section 6. Section 7 discusses the related work in this area and
Section 8 contains our concluding remarks.
