Incremental scheduling frameworks are ideally suited for domains requiring tight scheduler-execution  coupling: rather than recomputing a new schedule in response to every change, they respond quickly to execution events by localizing changes and making adjustments to the current schedule to accommodate the event.
Since an and task accumulates quality only if all its children are scheduled, this biases the  scheduling process towards failing early (and regenerating  contributors) when the methods chosen for the and cannot  together be allocated.
The quality propagator analyzes the activity hierarchy and collects a set of methods that ( if scheduled ) would maximize the 