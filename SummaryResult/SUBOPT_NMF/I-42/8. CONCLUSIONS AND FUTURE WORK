We have shown that DCPOP fully extends DPOP by performing the same operations given the same input.
Given the importance of a good pseudotree for performance, future work will include new  heuristics to find better pseudotrees.
We have shown that the performance penalty is minimal to generate multiple heuristics, and that we can choose the best generated pseudotree in linear space-time complexity.
We placed particular emphasis on the role that edge-traversal heuristics play in the generation of pseudotrees.
We have also shown through some examples and experimental data that DCPOP can achieve greater performance for some problem instances by extending 