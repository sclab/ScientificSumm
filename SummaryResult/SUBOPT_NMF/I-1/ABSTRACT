We augment each plan with an optional abort-method, analogous to the failure method found in some agent programming languages.
We provide an operational semantics for the execution cycle in the presence of aborts in the abstract agent language CAN, which enables us to specify a BDI-based execution model without limiting our attention to a particular agent system (such as JACK, Jadex, Jason, or SPARK).
We discuss some conditions under which aborting a task or plan is appropriate, and how to determine the consequences of such a decision.
In this paper we investigate the incorporation of aborts into a BDI-style architecture 