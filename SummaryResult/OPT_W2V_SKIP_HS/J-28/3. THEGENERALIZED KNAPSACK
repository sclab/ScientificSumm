In our FPTAS, rather than using a greedy approximation algorithm to solve  iKnapsack( , j), we construct a dynamic programming table to  compute the minimum cost at which at least M − uj+1 units can be obtained using the remaining n − 1 lists in the generalized knapsack.
It is worth noting, that unlike the 2-approximation scheme for iKnapsack( , j), the value computed with this FPTAS includes the cost to acquire uj l units from l. The following lemma shows that we achieve a (1+ε)-approximation.
We say that the size of an anchor tj i is uj i , 8 