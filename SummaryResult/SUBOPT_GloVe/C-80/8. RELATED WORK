To the best of our knowledge, Ganesh is the first system that combines the use of hash-based techniques with caching of database results to improve throughput and response times for applications with dynamic content.
Further, unlike Ganesh, some of these mid-tier caching  solutions [2, 3], suffer from the complexity of having to participate in query planing and distributed query processing.
The approaches of these architectures and Ganesh are  complementary and they would benefit each other.
Moving up to the presentation layer , there has been widespread adoption of fragment-based caching [ 14 ] , which improves cache utilization by separately 