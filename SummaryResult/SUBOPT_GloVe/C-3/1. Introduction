It handles all of the following cases: • automatically adapting the number of processors to the degree of parallelism in the application, even when this degree changes dynamically during the computation • migrating (part of) a computation away from overloaded  resources • removing resources with poor communication links that slow down the computation • adding new resources to replace resources that have crashed Our work assumes the application is malleable and can run  (efficiently) on multiple sites of a grid (i.e., using co-allocation (15)).
In this paper , we introduce and evaluate an alternative approach to application adaptation and resource 