this response is forwarded to the rmm in order to be translated to the enriched common model and to be sent to agent a. after receiving the information sent by agent b, agent a processes it in its rmm and translates it to its own reputation model to be analyzed by its rrm. 
ontology (agent = ?, value = ?, skill = cubism, reputation = image) b figure 2. interaction about specific types of reputation values agent b response to agent a is processed in its rrm and it is composed of tuples (agent, value, cubism, image) , where the pair (agent, value) is composed of all agents and associated reputation values whose agent b knows their expertise about cubism by its own opinion.
ontology (agent = ?, value = ?, skill = cubism, reputation = directreputation) a (agent = ?, value = ?, skill = cubism, reputation = primaryreputation) cogmod.
ontology (agent = ?, value = ?, skill = cubism, reputation = image) b typol.
a big picture of this interaction is in figure 2. typol.
following the same steps of the previous scenario, agent a message is prepared in its rrm using information from its internal model.
in this case agent a wants information concerning the direct reputation agent b has about agents that have skill on an specific era, such as cubism.
on autonomous agents and multi-agent systems (aamas 07) 4.2.2 art scenario considering the same agents a and b and the art appraisal domain of art, another interesting scenario describes the following situation: agent a asks to agent b information about agents it knows that have skill on some specific painting era.
joint conf.
1048 the sixth intl.
the way agents a and b make use of the information depends on their internal reputation model and their rrm implementation.
the corresponding information in agent a reputation model is propagated reputation and in agent b reputation model is reputation.
ontology (y, value=0.8, reputation) (y, value=0.8, reputation) b (y, value=0.8, propagatedreputation) (y, value=0.8, propagatedreputation) (y, value=0.8, propagatedreputation) (y, value=0.8, propagatedreputation) figure 1. interaction about reputation the information witness reputation from agent c is treated by its rmm and is sent as propagatedreputation to both agents.
ontology (y, value=0.8, reputation) cogmod.
ontology (y, value=0.8, reputation) b cogmod.
ontology (y, value=0.8, propagatedreputation) (y, value=0.8, propagatedreputation) a cogmod.
ontology (y, value=0.8, propagatedreputation) typol.
ontology (y, value=0.8, propagatedreputation) a typol.
ontology (y, value=0.8, reputation) b (y, value=0.8, propagatedreputation) (y, value=0.8, propagatedreputation) regret ontology (y, value=0.8, witnessreputation) c regret ontology (y, value=0.8, witnessreputation) regret ontology (y, value=0.8, witnessreputation) (y, value=0.8, witnessreputation) c typol.
ontology (y, value=0.8, propagatedreputation) a cogmod.
consider the interaction about reputation where agents a and b receive from agent c information about the reputation of agent y. a big picture of this interaction is showed in figure 2. regret ontology (y, value=0.8, witnessreputation) c typol.
agent a uses the typology of reputation model, agent b uses the cognitive reputation model and agent c uses the regret system model.
4.2.1 general scenario suppose that agents a, b and c are implemented according to the aforementioned general agent architecture with the enhanced art common reputation model, using different reputation models.
in this section we describe scenarios concerning reputation transactions in the context of art testbed, but the first is valid for any kind of reputation transaction and the second is specific for the art domain.
4.2 reputation transaction scenarios while including the fore to the art common reputation model, we have incremented it to allow richer interactions that involve reputation transaction.
this architecture contains two main modules: the reputation mapping module (rmm) which is responsible for mapping concepts between an agent reputation model and fore; and the reputation reasoning module (rrm) which is responsible for deal with information about reputation according to the agent reputation model.
a general agent architecture for interoperability was defined [11] to allow agents to reason about the information received from reputation interactions.
the art common reputation model was enhanced with semantic data obtained from fore.
more details about the art testbed can be found in [6].
the information can be an opinion transaction, when an agent asks other agents to help it in its evaluation of a painting; or a reputation transaction, when the information required is about the reputation of another agent (a target) for a given era.
the game"s domain is art appraisal, in which agents are required to evaluate the value of paintings based on information exchanged among other agents during agents" interaction.
the simulation consists in a game where the agents have to decide to trust or not other agents.
4.1 the art testbed the art testbed provides a simulation engine on which several agents, using different trust models, may run.
this scenario includes the agents" interaction during the simulation of the game defined by art [6] in order to describe the ways interoperability is possible between different trust models using the fore.
the art testbed to exemplify the use of mappings from last section, we define a scenario where several agents are implemented using different agent reputation models.
