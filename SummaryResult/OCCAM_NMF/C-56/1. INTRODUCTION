87 middleware 2004 companion processelement process activity controller 1 * 1 * figure 1: high-level framework of the programming model 
related works are presented and compared to the proposed model in section 5. the last section concludes this paper encompassing the advantages of the proposed hierarchical process execution support for the grid computing area and lists some future works.
section 4 demonstrates how the support infrastructure executes processes and distributes activities.
next section describes the programming model, and  section 3, the support infrastructure for the proposed grid  computing model.
the programming model and the support infrastructure, named x avantes, are under implementation in order to show the feasibility of the proposed model and to demonstrate its two major advantages: to promote widely distributed  process execution and scheduling, but in a controlled,  structured and localized way.
complementary, the support infrastructure, which executes a process specification, takes advantage of the hierarchical structure of a specified process in order to distribute and schedule strong dependent activities as a unit, allowing a better  execution performance and fault-tolerance and providing  localized communication.
the  programming model employs structured control flow to promote  controlled and contextualized activity execution.
in order to address such constraints, this paper proposes a structured programming model for process description and a hierarchical process execution infrastructure.
however, such infrastructures contain  scheduling algorithms that are centralized by process [1, 3, 5], or completely distributed, but difficult to monitor and control [13].
among them, webflow [1] emphasizes an architecture to construct distributed  processes; opera-g [3] provides execution recovering and  steering, gridflow [5] focuses on improved scheduling algorithms that take advantage of activity dependencies, and swindew [13] supports totally distributed execution on peer-to-peer networks.
in general, they model processes by interconnecting their activities through control and data dependencies.
there are few proposed middleware infrastructures that support process execution over the grid.
this deficiency restricts better scheduling algorithms, distributed execution  coordination and automatic execution recovery.
specifically, considering distributed execution, most of the existing grid infrastructures supports execution of isolated tasks, but they do not consider their task interdependencies as in processes (workflows) [12].
traditionally, as in globus [6], condor-g [9] and legion [10], there is a minimal  infrastructure that provides data resource sharing, computational resource utilization management, and distributed execution.
this research field aims to  promote sharing of resources and provides breakthrough  computing power over this wide network of virtual  organizations in a seamless manner [8].
grid computing is a model for wide-area distributed and parallel computing across heterogeneous networks in  multiple administrative domains.
