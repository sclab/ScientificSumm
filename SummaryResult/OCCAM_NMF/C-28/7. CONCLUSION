also, we intend to provide support for genomic database  synchronization and dynamic join/leave operations for slaves. 
as future work, we intend to run packageblast in a  geographically dispersed grid, to evaluate the impact of high network latencies in the allocation policies and in pss.
moreover, we showed that the introduction of pss led to very good performance gains for some policies.
also, we showed that, in our testbed, there is no allocation policy that always achieves the best performance and that makes evident the  importance of providing multiple policies.
in  order to compare a 10kbp real dna sequence against the nr genetic database, we were able to reduce execution time from 30.88 min to 2.11 min.
the results collected by running packageblast with 5 allocation policies in a grid testbed were very good.
we also defined a strategy, pss, that adapts the chosen  policy to a heterogeneous non-dedicated grid environment.
packageblast contains a framework where the user can choose or incorporate allocation policies.
in this article, we proposed and evaluated packageblast, an adaptive multi-policy grid service to execute master/slave blast searches.
