white et al [21] report some experimental timings of their webdocsum system, but the snippet  generation algorithms themselves are not isolated, so it is difficult to infer snippet generation time comparable to the times we report in this paper. 
silber and mckoy [19] describe a linear-time lexical chaining algorithm for use in generic  summaries, but offer no empirical data for the performance of their algorithm.
despite the importance of efficient summary generation in web search, few algorithms appear in the literature.
most of the experimental work using query-biased  summarization has focused on comparing their value to searchers relative to other types of summary [20, 21], rather than  efficient generation of summaries.
to our knowledge, google was the first  whole-ofweb search engine to provide query biased summaries, but summarization is listed by brin and page [1] only under the heading of future work.
generating these is clearly much simpler and much less computationally expensive than processing documents to extract query biased summaries, as there is no need to search the document for text fragments containing query terms.
early web search engines presented query-independent snippets consisting of the first k bytes of the result  document.
[16] for overviews of the very many different applications of summarization and for the equally diverse methods for producing summaries.
this process was given the name of query-biased summarization by tombros and sanderson [20] the reader is referred to mani [13] and to radev et al.
snippet generation is a special type of extractive  document summarization, in which sentences, or sentence  fragments, are selected for inclusion in the summary on the basis of the degree to which they match the search query.
