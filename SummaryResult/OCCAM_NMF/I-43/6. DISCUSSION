for instance, pomdps have prohibitively large off-line time requirements for policy computation, but can be readily used in simpler settings to expose beneficial behavioral trends; this can serve as a form of target dynamics that are provided to emt in a larger domain for on-line operation. 
dbc can be an effective partner in such a hybrid solution.
there is recent interest in using pomdps in hybrid solutions [17], in which the pomdps can be used together with other control approaches to provide results not easily achievable with either approach by itself.
the complementary properties of pomdps and emt can be  further exploited.
for instance, pomdps could be seen as a much more natural  formulation of economic sequential decision-making problems, while emt is a better fit for continual demand for stochastic change, as happens in many robotic or embodied-agent problems.
the structural differences between dbc (and emt in  particular), and pomdps, prohibits direct performance comparison, and places them on complementary tracks, each within a suitable niche.
the importance of the second source was underlined by the tag game experiment data, in which the greedy emt algorithm, applied to a pomdp-type state space specification, failed, since target description over such a state space was incapable of encoding the necessary behavior  tendencies, e.g., tie-breaking and commitment to directed motion.
dbc, on the other hand, has two sources of sequencing specification: through the properties of an action selection procedure, and through direct specification within the target dynamics.
pomdps rely entirely on the mechanism of reward accumulation maximization, i.e., formation of the action selection procedure to achieve necessary state sequencing.
the tag game experiment data also revealed the different  emphasis dbc and pomdps place on the formulation of an environment state space.
however, the ratio between emt performance and achievability of target dynamics remains to be explored.
experimental data shows that these targets need not be directly achievable via the agent"s actions.
thus for the tag game, we did not search for a reward function that would encode and express our preference over the agent"s  behavior, but rather directly set three (heuristic) behavior preferences as the basis for target dynamics to be maintained.
2 entropy was calculated using log base equal to the number of  possible locations within the domain; this properly scales entropy  expression into the range [0, 1] for all domains.
emt discards any reward scheme, and instead measures and  influences system dynamics directly.
pomdp defines a reward structure to optimize, and influences system dynamics indirectly through that optimization.
the design of the emt solution for the tag game exposes the core difference in approach to planning and control between emt or dbc, on the one hand, and the more familiar pomdp approach, on the other.
