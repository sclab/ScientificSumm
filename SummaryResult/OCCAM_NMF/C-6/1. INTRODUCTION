related work is described in section 4, and section 5 contains our conclusion and suggestions for future work. 
in section 3 we describe both our implementation of the spectrum architecture and examples of its use.
section 2 describes the architecture of our content management system.
the rest of this paper is organized as follows.
note that the spectrum architecture assumes the existence of a content distribution network (cdn) that can  facilitate the efficient distribution of content (for example, the prism cdn architecture [2]).
it allows multiple applications to reference content using differing policies.
our layered  architecture is flexible - its api allows the layers to reside either on a single computer or on multiple networked heterogeneous  computers.
to address these issues we have designed and implemented the spectrum content management system architecture.
it needs to be able to package this content in such a way that it is convenient for users to access.
• the content system must be able to efficiently manage large sets of content, including continuous streams.
• the content management system must handle the interaction between implicit and explicit population of content at the  network edge.
• the content management system needs to be able to  monitor references for content and use that information to place content in the right location in the network for efficient  application access.
this means that the content management system should  allow multiple applications to reference content with a rich set of policies and that it should all work together seamlessly.
these policies reflect what content should be obtained, when it should be fetched, how long it should be  retained, and under what circumstances it should be discarded.
• the content management system should be flexible and be able to handle differing requirements for content  management policies.
a  application program interface (api) and associated network  protocols are needed in order for the content management system to provide a uniform interface.
the content manager may be responsible for implementing the policies it uses to reference content or that role may be delegated to a separate computer.
in some cases the system may be managing content stored on a local filesystem, while in others the content may be stored on a separate network storage appliance.
for example: • the content management system must operate on a large number of heterogeneous systems.
addressing this distributed content management problem is  difficult due to the number of requirements placed on the system.
change the storage policy associated with) the storage of (parts of) continuous media content.
the content management system should  allow the user to manipulate and reason about (i.e.
the content management system should translate user preferences into appropriate low-level storage policies and should allow those preferences to be expressed at a fine level of granularity (while not requiring it in general).
this system should allow efficient storage of and access to content across  heterogeneous network storage devices according to user preferences.
it would seem clear then that a content management system that can efficiently handle media rich content while also exploiting the networked capability of storage devices is needed.
this scenario is increasingly common in network based content distribution systems and is likely to also become important in home-networking scenarios.
however, when the actual storage devices are  distributed across a network the task of keeping track of content is almost impossible.
• as indicated above, trying to keep track of content on a  standalone system without a content management system is very difficult.
remove all of the content that i have not watched for the last month except that content which was explicitly marked for archival.
at the same time the user might want to think of content in the aggregate, e.g.
for example, an individual pvr user  wanting to keep only the highlights of a particular sporting event should not be required to have to store the content pertaining to the complete event.
4 • when dealing with stored continuous media there is a need to manage such content at both a fine-grained as well as an aggregate level.
this means that before one can even think about managing such content there is a need to abstract it into something that could be manipulated and managed.
second, the storing of live content such as tv or radio is  inherently problematic as these signals are continuous streams with no endpoints.
first  continuous media content is still very demanding in terms of storage resources which means that a policy-less approach to  storing it will not work for all but the smallest systems.
• while true for all types of content the storage of  continuous media content is especially problematic.
managing such  content manually (or more correctly manual non-management of such content) lead to great inefficiencies where unwanted and forgotten content waste storage and where wanted  content cannot be found.
the need for content management in this area is apparent when one consider the following: • increases in the capacity and decreases in the cost of storage means that even modest desktop systems today have the  ability to store massive amounts of content.
the focus of our work is on the storage of media rich content and in  particular the storage of continuous media content in either pre-packaged or live forms.
the proliferation of high quality content enabled by these  advances in storage, encoding, and networking technology creates the need for new ways to manipulate and manage the data.
this combination has allowed users to access and share multimedia content in both local and remote area networks with the network itself acting as a huge data repository.
another example is the combination of encoding and broadband networking technology.
this has led to the introduction of stand alone digital video recording or personal video recording (pvr) systems such as  tivo [8] and replaytv [7].
for example, by  combining improvements in storage and encoding, it is now possible to store many hours of tv-quality encoded video on a single disk drive.
new content types such as continuous multimedia streams have  become commonplace due to the convergence of advances in storage, encoding, and networking technologies.
as technology has advanced, both the types of content and the way people wish to use it have greatly changed.
content was initially managed by explicit user interaction through the use of files and filesystems.
initial computing  applications include text formatters and program compilers.
manipulating and managing content is and has always been one of the primary functions of a computer.
