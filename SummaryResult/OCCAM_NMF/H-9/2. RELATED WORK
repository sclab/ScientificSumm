thus past queries are clustered in a query specific manner and this is another difference from previous works such as [24, 4] in which all queries in logs are clustered in an oï¬„ine batch manner. 
we use the star clustering algorithm [2], which is a graph partition based approach, to learn interesting  aspects from search logs given a new query.
in our work, we explore past query history in order to better organize the search results for  future queries.
recently, search logs have been used for suggesting query substitutes [12], personalized search [19], web site design [3], latent semantic analysis [23], and learning retrieval  ranking functions [16, 10, 1].
for example, clustering search queries to find those frequent asked questions (faq) is studied in [24, 4].
search logs have been exploited for several different  purposes in the past.
however predefined categories are often too  general to reflect the finer granularity aspects of a query.
the authors designed and studied different category interfaces and they found that category interfaces are more effective than list interfaces.
in this work, a text  classifier is trained using a web directory and search results are then classified into the predefined categories.
methods of organizing search results based on text  categorization are studied in [6, 8].
thus the obtained clusters do not necessarily reflect users" preferences and the generated labels may not be informative from a user"s viewpoint.
however, in all these works, the clusters are generated solely based on the search results.
clustering search results has also  attracted a lot of attention in industry and commercial web services such as vivisimo [22].
in [13], the authors proposed to use a monothetic clustering algorithm, in which a document is assigned to a cluster based on a single feature, to organize search results, and the single feature is used to label the corresponding cluster.
to overcome this difficulty, in [28], supervised learning  algorithms were studied to extract meaningful phrases from the search result snippets and these phrases were then used to group search results.
however, an important challenge of document clustering is to generate meaningful labels for clusters.
they also showed that using snippets is as effective as using whole documents.
several clustering  algorithms are compared and the suffix tree clustering  algorithm (stc) was shown to be the most effective one.
in these papers, the authors proposed to cluster the results of a real search engine based on the snippets or the contents of returned documents.
the system grouper was described in [26, 27].
their results validate the cluster hypothesis [20] that relevant documents tend to form clusters.
in [9, 15], the authors used scatter/gather algorithm to cluster the top documents returned from a  traditional information retrieval system.
our work is closely related to the study of clustering search results.
