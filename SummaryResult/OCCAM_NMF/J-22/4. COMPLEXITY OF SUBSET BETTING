thus, the matching problem can be solved in polynomial time also. 
naturally, if the optimal solution to (4) gives a worst-case profit of c∗ > 0, there exists a matching.
hence, the separation problem can be solved in polynomial time.
thus, the auctioneer"s worst-cast state and payment are the solution to the maximum weighted  bipartite matching problem, which has known polynomial-time algorithms [12, 13].
in addition, the auctioneer pays out to the winners the sum of all edge weights in the perfect matching since every candidate can only stand in one position and every position is taken by one candidate.
every state s then corresponds to a perfect matching in the bipartite graph.
all multi-edges with the same end points are then replaced with a single edge that carries the total weight of the multi-edge.
for every order of the form α|φ there are edges from candidate node α to every position node in φ. for  orders of the form ψ|j there are edges from each candidate in ψ to position j. for each order i we put weight qixi on each of these edges.
(5) is the total money that the auctioneer needs to pay back to the winning traders in state s. the first term on the right hand side is the total money collected by the auctioneer and it is fixed for a given  solution vector of xi"s and c. a weighted bipartite graph can be constructed between the set of candidates and the set of positions.
the left hand side in eq.
(4) asks whether there is a state or permutation s in which the profit is less than c, and can be rewritten as i ii(s)qixi < i biqixi − c ∀s ∈ s. (5) thus it suffices to show how to find efficiently a state s satisfying the above inequality (5) or verify that the opposite inequality holds for all states s. we will show that the separation problem can be reduced to the maximum weighted bipartite matching1 problem [3].
for given values of the variables, a violated constraint in eq.
the separation problem for a linear program takes as input a vector of variable values and returns if the vector is feasible, or otherwise it returns a violated constraint.
however, we can solve the program in time polynomial in the  number of orders |o| by using the ellipsoid algorithm, as long as we can efficiently solve its corresponding separation  problem in polynomial time [7, 8].
this linear program has |o| + 1 variables, one variable xi for each order i and the profit  variable c. it also has exponentially many constraints.
consider the linear programming problem (4) for finding an optimal match.
329 proof.
theorem 1. the existence of a match and the optimal match problems with divisible orders in a subset betting  market can both be solved in polynomial time.
however, given the special form of the  securities in the subset betting market, we can show that the matching problems for divisible orders can be solved in  polynomial time.
brute-force methods would take exponential time to solve.
the matching problems of the auctioneer in any  permutation market, including the subset betting market have n!
