the  experimental setting and results used to validate the proposed learning technique are reported in sections 5 and 6.  section 7 summarizes and offers concluding remarks. 
section 4 describes how to learn the model parameters using the standard em algorithm, along with using the new technique proposed in this paper.
the organization of the remaining parts of this paper is as follows: section 3 describes the bayesian hierarchical linear regression modeling framework used for content-based  recommendations.
the proposed technique is not only well supported by theory, but also by experimental results.
this greatly reduces the computation at a single em iteration, and also has the benefit of  increasing the convergence speed of the learning algorithm.
the basic idea is that instead of  calculating the numerical solution for all the user profile parameters, we derive the analytical solution of the parameters for some feature dimensions, and at the m step use the analytical  solution instead of the numerical solution estimated at e step for those parameters.
this paper modifies the standard em algorithm to create an improved learning algorithm, which we call the modified em algorithm.
we also find that updating the model parameter at each em iteration is also expensive with  computational complexity of o(mk), where m is the number of users and k is the number of dimensions.
algorithm converges very slowly due to the sparseness of the input variables.
in this paper, the words filtering and recommendation are used  interchangeably.
with careful analysis of the em algorithm in this scenario (section 4), we find that the em tering, or item-based collaborative filtering.
however, a content based  recommendation system often handles documents in a very high dimensional space, in which each document is represented by a very sparse vector.
the em algorithm is a commonly used technique for parameter learning due to its simplicity and convergence guarantee.
it is well known that  learning the optimal parameters of a bayesian hierarchical model is computationally expensive when there are thousands or millions of users.
a mature recommendation system  usually works for millions of users.
in order to learn a bayesian hierarchical model, the  system usually tries to find the most likely model parameters for the given data.
several researchers have demonstrated that this approach effectively trades off between shared and user-specific information, thus alleviating poor initial  performance for each user[27][25].
one well-received approach to improve recommendation system performance for a particular user is borrowing  information from other users through a bayesian hierarchical modeling approach.
the effectiveness of these different approaches is mixed, due to how well the underlying model assumption fits the data.
the third approach is borrowing training data from other resources [5][7].
researchers have modified different learning algorithms, such as  na¨ıvebayes [17], logistic regression [7], and svms [22], to integrate domain knowledge into a text classifier.
another approach is using domain knowledge.
the semi-supervised learning approach combines  unlabeled and labeled data together to achieve this goal [26].
there has been much research on improving  classification accuracy when the amount of labeled training data is small.
this means that any new user must endure poor initial performance until sufficient feedback from that user is provided to learn a reliable user profile.
this is known as the cold start problem.
one major challenge of building a recommendation or  personalization system is that the profile learned for a particular user is usually of low quality when the amount of data from that particular user is small.
a user profile is usually a classifier that can identify whether a document is relevant to the user or not, or a regression model that tells how relevant a document is to the user.
learning the user profiles is the core problem for these systems.
these systems learn user-specific  profiles from user feedback so that they can recommend  information tailored to each individual user"s interest without requiring the user to make an explicit query.
one major personalization topic studied in the  information retrieval community is content-based personal  recommendation systems1 .
recent offerings such as my msn, my yahoo!, my google, and google news have attracted much attention due to their potential ability to infer a user"s interests from his/her history.
for example, online stores, such as amazon and netflix, provide customized  recommendations for additional products or services based on a user"s history.
personalization is the future of the web, and it has achieved great success in industrial applications.
