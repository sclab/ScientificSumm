therefore, the resulting local images should exhibit a sufficient degree of overlap. 
delay tends to bias selection towards near-by peers whereas outgoing bandwidth introduces some degree of randomness in location of selected peers.
joint-ranking utility gives the same weight to delay and bandwidth.
the shape of the local image is a function of the deployed utility function.
the amount of overlap among images depends on both the size and shape of the local images at each peer.
the higher the amount of overlap, the higher the efficiency of discovery, and the higher the robustness of the overlay to dynamics of peer participations.
note that the gossip mechanism can discover any peer in the overlay as long as reachability is provided through overlap among local images at different peers.
this approach attempts to balance image quality (in terms of overall utility of existing peers) and its freshness.
image maintenance: image maintenance mechanism evicts extra records (beyond img sz) that satisfy one of the  following conditions: (i) represent peers with the lower utility, (ii) represent peers that were already dropped by the ps  mechanism due to poor performance and (iii) have a timestamp older than a threshold.
this binning scheme minimizes the sensitivity to minor differences in delay or bandwidth among different peers.
values for each property (i.e., bandwidth and  delay) of various peers are divided into multiple ranges (i.e., bins) where all peers within each range are assumed to have the same value for that property.
the utility of peer pj (u(pj, pi)) is inversely proportional to the sum of pj"s ranks in both rankings.
given a collection of peers in a local image of pk, the  jointranking scheme ranks all the peers once based on their  outgoing bandwidth, and then based on their estimated delay from a target peer pi.
pro uses joint-ranking [15] to determine relative utility of a parent for a receiver.
we plan to  examine more efficient information sharing schemes such as bloom filters [3] in our future work.
a potential drawback of this  approach is the increase in convergence time.
this approach is biased towards peers with higher utility but its randomness tend to reduce number of duplicate records in different gossip message from one peer (i.e., improves efficiency).
however, probability of selecting a peer directly depends on its utility.
content selection: peer pk determines relative utility of all the peers (pj) in its local image for target peer pi, and then randomly selects sgm peers to prepare a gossip message for pi.
target selection: target selection randomly picks a peer from the current image to evenly obtain information from different areas of the overlay and speed up discovery.
currently, the server randomly selects the initial parents from its local image for each new peer.
frequency and size of gossip messages determine average freshness of local images.
we have been exploring the design space of four key  components of the gossip mechanism.
when a gossip message arrives at each peer, an image maintenance scheme integrates new records into the current local image and discards excess records such that certain property of the local image is improved (e.g., increase  overall utility of peers in the image) aggregate performance of 45 a gossip mechanism can be presented by two average  metrics and their distribution among peers: (i) average  convergence time: average number of gossip messages until all peers in an overlay reach their final images, and (ii) average efficiency ratio: average ratio of unique records to the total number of received records by each peer.
in response, pj follows the same steps and replies with a gossip message that includes sgm records from its local image that are most useful for pi, i.e., bidirectional  gossip.
given a utility function, peer pi uses a content selection strategy to select sgm records (or smaller number when sgm records are not available) from its local image that are most useful for pj and send those records to pj.
once the initial set of peers are known, each peer pi periodically invokes a target selection mechanism to determine a target peer (pj) from its local image for gossip.
we call this the initial parent selection mechanism.
the server should implement a strategy for selecting the initial peers that are provided to each new receiver.
this information can be obtained from the original server (or a well-known rendezvous point).
to bootstrap the discovery process, a new  receiver needs to learn about a handful of other participating peers in the overlay.
the gossip mechanism works as follow: each peer  maintains a local image that contains up to img sz records where each record represents the following information for a  previously discovered peer pi in the overlay: 1) ip address, 2) gnp coordinates, 3) number of received layers, 4) timestamp when the record was last generated by a peer, 5) outbwi and 6) inbwi.
gossiping (or rumor spreading) has been frequently used as a scalable alternative to flooding that gradually spreads  information among a group of peers.however, we use gossiping as a search mechanism [9] for finding promising parents since it has two appealing properties (i) the volume of exchanged messages can be controlled, and (ii) the gossip-based  information exchange can be customized to leverage relative utility values to improve search efficiency.
pro adopts a gossip-like [10] approach to peer discovery.
peer discovery at each receiver is basically a search among all participating peers in the overlay for a certain number (img sz) of peers with the highest relative utility.
