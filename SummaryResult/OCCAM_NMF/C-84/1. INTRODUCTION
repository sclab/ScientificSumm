we discuss extensions of the game and directions for future work in section 6. 
in section 5 we describe our simulation methodology and study the properties of nash equilibria observed.
in section 4 we discuss the payment game and analyze its price of anarchy.
section 3 discusses details of the basic game and analyzes the bounds of the price of anarchy.
in section 2 we  discuss related work.
the rest of the paper is organized as follows.
as the placement cost further increases, the price of anarchy decreases, and the effect of replica misplacement  dominates the price of anarchy.
when the placement cost first exceeds the maximum distance  between servers, the price of anarchy is at its highest due to  undersupply problems.
as the placement cost increases from zero, the price of anarchy increases.
our simulation results show several interesting phases.
in the payment model, however, the game can always implement a nash equilibrium that is same as the social optimum, so the optimistic price of anarchy is one.
even the optimistic price of anarchy can be o(n).
for d-dimensional grids, it is o(n d d+1 ).
for complete graphs and stars, it is o(1).
under certain topologies, the price of anarchy does have tighter bounds.
the price of anarchy of the basic game model can be o(n), where n is the number of servers; the intuitive reason is undersupply.
we show that pure strategy nash equilibria always exist in the caching game.
will the nash  equilibria be improved?
• what is the effect of adopting payments?
• if pure strategy nash equilibria do exist, how efficient are they (in terms of the price of anarchy, or its optimistic  counterpart) under different placement costs, network topologies, and demand distributions?
in this paper we address the following questions : • do pure strategy nash equilibria exist in the caching game?
this optimistic version of the price of anarchy [3] is captured by the smallest ratio between a nash  equilibrium and the social optimum.
however, in reality there are ways whereby the system can be guided, through seeding or incentives, to a  preselected nash equilibrium.
the price of anarchy bounds the worst possible behavior of a selfish system, when left completely on its own.
the price of anarchy is the ratio of the social (total) cost of the worst possible nash  equilibrium to the cost of the social optimum.
21 quantified by the price of anarchy [21].
2 we use the term object as an abstract entity that represents files and other data objects.
this loss of efficiency is 1 we will use caching and replication interchangeably.
with or without randomization, however, the lack of  coordination inherent in selfish decision-making may incur costs well  beyond what would be globally optimum.
in certain very  fortunate situations, however (see [9]), the existence of pure (that is, deterministic) nash equilibria can be predicted.
foundational considerations notwithstanding, it is not easy to accept randomized strategies as the behavior of rational agents in a  distributed system (see [28] for an extensive discussion) - but this is what classical game theory can guarantee.
game theory predicts that such a situation will end up in a nash equilibrium, that is, a set of (possibly randomized) strategies with the property that no player can benefit by changing its strategy while the other players keep their strategies unchanged [28].
once all servers have chosen a  strategy, each game specifies a configuration, that is, the set of servers that replicate the object, and the corresponding costs for all servers.
each site now has the option of replicating an object and collecting the related bids.
we also define a more elaborate payment model, in which each server bids for having an object replicated at another site.
decisions about caching the replicas locally are arrived at locally, taking into account only local costs.
on the other hand, if all replicas are located too far away, the server is better off caching the object itself.
if a replica of a requested object is located at a nearby node, the server may be better off accessing the remote replica.
in the basic model, the servers have two possible actions for each object.
we model selfish caching as a non-cooperative game.
in this paper, we take a game-theoretic approach to analyzing the problem of caching in networks of selfish servers through  theoretical analysis and simulations.
it has been an open question whether these caching scenarios and protocols maintain their desirable global properties (low total social cost, for example) in the face of selfish behavior.
they have obvious incentives to cache objects2 that maximize the benefit in their domains, possibly at the expense of globally optimum behavior.
for example, parties in different  administrative domains utilize their local resources (servers) to better  support clients in their own domains.
in reality, servers may behave selfishly - seeking to maximize their own benefit.
however, most such systems assume that servers cooperate with one another by following protocols optimized for overall system performance, regardless of the costs incurred by each server.
caching1 of files in selected servers is widely used to enhance the performance, availability, and reliability of these systems.
wide-area peer-to-peer file systems [2,5,22,32,33], peer-to-peer caches [15, 16], and web caches [6, 10] have become popular over the last few years.
