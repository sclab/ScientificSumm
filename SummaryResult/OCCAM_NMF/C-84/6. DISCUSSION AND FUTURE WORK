we leave the investigation of more examples as an open issue. 
however, the social optimum may place one replica at the center.
for example, a graph with diameter slightly more than α may have a nash equilibrium configuration with two replicas at the two ends.
another  observation we made was that the number of replicas in a nash  equilibrium can be more than the number of replicas in the social  optimum even without payments.
first, the poa in the payment game can be worse than the poa in the basic game.
while exploring the caching problem, we made several  observations that seem counterintuitive.
as γ increases, the price of anarchy bound decreases, since the load of accesses is balanced across servers.
then, when α > γ, it can be shown that poa is bounded by α γ .
suppose the distance is the network distance plus γ × (number of accesses) where γ is an extra delay when an additional server accesses the replica.
another extension is to consider server congestion.
in  addition, we want to run large-scale simulations to observe the change in the price of anarchy as the network size increases.
we want to investigate whether there are certain distance constraints that guarantee o(1) price of anarchy.
we intend to compute the bounds of the price of anarchy under different underlying topologies such as random graphs or  growthrestricted metrics.
such aggregation can reduce the inefficiency of nash equilibria.
however, if we aggregate n − 1 nodes into one node with demand n − 1, the price of anarchy becomes o(1), since α should be greater than (n − 1)(α − 1) to replicate only one object.
in that case, the price of anarchy is o(n).
all nodes have demands of one.
suppose there are n − 1 clustered nodes with distance of α−1 from a node hosting a replica.
we also want to look at the following aggregation effect.
we intend to examine the effects of heterogeneous demands (or heterogeneous placement costs) analytically.
however, nodes could have different demand depending on objects.
in our analyses, we assume that all nodes have the same demand.
as studied in [12], one way to formulate this problem is to find the best response of a server by solving a knapsack problem and to compute nash equilibria.
since caching one object affects the ability to cache another, there is no separability of a multi-object game into multiple single object games.
one extension is to consider multiple objects in the capacitated caching game, in which servers have capacity limits when placing objects.
we suggest several interesting extensions and directions.
