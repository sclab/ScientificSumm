the other direction is to find how to allocate time more efficiently for each negotiation in the negotiation chain context. 
one direction is to build a better function to describe the relationship between the success probability of the negotiation and the flexibility allocated to the negotiation.
in this work, we focus on improving the agent"s local model through two directions.
we are not arguing that this statement is a universal valid statement that holds in all situations, but our experimental work shows that the sum of the agents" utilities in the system has been improved by 95% on average when meta-level coordination is used to improve each agent"s local model ii.
as ii  become more accurate, the agent"s local optimal solution to its local multi-linked negotiation problem become a better local optimal  solution in the context of the global negotiation chain problem.
the goal of this work is to improve each agent"s local model about other agents (ii) through meta-level coordination.
even if the globally local optimal solution does exist in theory, finding it may not be realistic given the agents are making decision concurrently, to construct the  perfect local information and assumptions about other agents (ii) in this dynamic environment is a very difficult and sometimes even impossible task.
however, sometimes the globally local optimal set does not exist, instead, there exist multiple sets of best local optimal solutions.
if a set of best local optimal solutions {s blog i } dominates all others, {s blog i } is called globally local optimal.
a set of better local optimal solutions {s blog i } that is not  dominated by any others is called best local optimal.
some of them may be dominated by others.
in other words, {slo i } is dominated by {sblo i } ({slo i } ≺ {sblo i }) iff: ui(< slo 1 , slo 2 , ....slo n >) ≤ ui(< sblo 1 , sblo 2 , ....sblo n >) for i = 1, ...n and pn i=1 ui(< slo 1 , slo 2 , ....slo n >) < pn i=1 ui(< sblo 1 , sblo 2 , ....sblo n >) there are multiple sets of better local optimal solutions: {sblo1 i }, {sblo2 i }, ... {sblom i }.
however, the combination of these local optimal solutions {slo i } : < slo 1 , slo 2 , ....slo n > can be sub-optimal to a set of better local optimal solutions {sblo i } : < sblo 1 , sblo 2 , ....sblo n > if the global utility can be improved without any agent"s local utility being  decreased by using {sblo i }.
negotiation chain problem o is a group of tightly-coupled local optimization problems: o = {o1, o2, ....on}, oi denotes the local optimization problem (multi-linked negotiation problem) of agent ai agent ai"s local optimal solution slo i maximizes the expected  local utility based on an incomplete information and assumptions about other agents" local strategies - we defined such incomplete information and imperfect assumptions of agent i as ii): uexp i (slo i , ii) ≥ uexp i (sx i , ii) for all x = lo.
the dash line in figure 2 represents the  connection of these local optimization problem though the common negotiation subject.
figure 2 shows a distributed model of part of the negotiation chain described in figure 1. each agent has a local optimization problem - the multi-linked negotiation problem (represented as an and-or tree), which can be solved using the model and procedures described in section 2. however, the local optimal solution may not be optimal in the global context given the local model is neither complete or accurate.
the store, the pc manufacturer, the memory producer and the  distribution center are all involved in multi-linked negotiation  problems.
figure 1 describes a complex negotiation chain scenario.
an agent may be involved in multiple related negotiations with multiple other agents, and each of the other agents may be involved in related negotiations with others too.
the negotiation is tightly connected with the agent"s local scheduling/planning processes and is also related to other  negotiations.
negotiation is used to coordinate the scheduling of these mutual related  activities.
each agent has the scheduling and planning ability to manage its local activities, some of these activities are related to other agents" activities.
dynamic tasks arrive to individual agents, most tasks requiring the coordination of multiple agents.
the agent is designed to optimize its expected utility given its limited information, computational and communication resources.
each agent has its own utility function for defining the implications of achieving its goals.
negotiation chain problem occurs in a multi-agent system, where each agent represents an individual, a company, or an organization, and there is no absolute authority in the system.
