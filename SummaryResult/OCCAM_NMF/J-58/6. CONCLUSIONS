acknowledgements we would like to thank rakesh vohra, tuomas sandholm, and anonymous reviewers for helpful comments and discussions. 
the remaining difficulty is then how to compute the payment p under mild assumptions about the valuations if a truthful mechanism m = (o, p) does exist.
towards this research direction, theorem 4 can be extended to a general  allocation rule o, whose range is r+ .
it wound be of interest to generalize our framework for designing a truthful payment scheme for a binary demand game to non-binary demand games.
for this problem, a truthful payment scheme p exists for an allocation rule o if and only if the workload assigned by o is monotonic in a certain manner.
the job scheduling problem in [2] is such an example.
however, some problems cannot be directly  formulated as binary demand games.
in this paper, we have studied mechanism design for binary  demand games.
it would be of significance to design allocation rules with good approximation ratios such that a given binary  demand game has a computationally efficient payment scheme.
we point out here that the goal of this paper is not to design a better allocation rule for a  problem, but to design an algorithm to compute the payments efficiently when o is given.
many works [12, 13] in the mechanism design literature are in this direction.
another research direction is to design an approximation  allocation rule o satisfying mp with a good approximation ratio for a given binary demand game.
we have made some progress in this research direction in [22] by providing an  algorithm to compute the payments for unicast in a node weighted graph in optimal o(n log n + m) time.
our algorithms do not necessarily have the  optimal running time for computing p given o. it would be of interest to design algorithms to compute p in optimal time.
in this paper, we have concentrated on how to compute p in polynomial time.
we further presented several general composition-based techniques to compute p  efficiently for various allocation rules o. several concrete examples were discussed to demonstrate our general framework for  designing p and for composition-based techniques of computing p in polynomial time.
we then formulate a general framework for designing payment p such that the mechanism m = (o, p) is truthful and computable in polynomial time.
we first showed that the allocation rule o  satisfying the mp is a necessary and sufficient condition for a truthful mechanism m to exist.
in this paper, we have studied how to design a truthful  mechanism m = (o, p) for a given allocation rule o for a binary demand game.
