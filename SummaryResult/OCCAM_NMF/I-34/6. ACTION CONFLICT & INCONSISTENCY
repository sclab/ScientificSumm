on autonomous agents and multi-agent systems (aamas 07) 651 
joint conf.
on autonomous agents and multi-agent systems (aamas 07) the sixth intl.
on autonomous agents and multi-agent systems (aamas 07) 649 650 the sixth intl.
648 the sixth intl.
a set of norms can have different conflicts and inconsistencies, for distinct domains of  application.
by explicitly representing and manipulating domain knowledge we achieve generality: the very same  machinery can be used with different domains.
our example above can be captured by δ = {(p(x) → q(x, x)), (q(x, x) → p(x))}.
9. the domain axioms, denoted as δ, are a finite and  possibly empty set of formulae ϕ → (ϕ1 ∧ · · · ∧ ϕn) where ϕ, ϕi, 1 ≤ i ≤ n, are atomic first-order formulae.
rather than making use of sophisticated formalisms for ontology construction, we employ a set of domain axioms, defined below: def.
we propose a simple means to account for such relationships and show how these can be connected to the mechanisms introduced above.
different domains have distinct ways of relating their actions; engineers build ontologies to represent such relationships.
in the discussion below we concentrate on norm conflict, but norm inconsistency can be dealt with similarly, if we change the deontic modalities p for o. relationships among actions are domain-dependent.
for instance, if p(x) amounts to q(x, x), then norms pa:rp(x) and fa:rq(x, x) are in conflict since pa:rp(x) can be rewritten as pa:rq(x, x) and we thus have both pa:rq(x, x) and fa:rq(x, x).
however, conflicts and inconsistencies may also arise indirectly via relationships among actions.
in our previous discussion, norm conflict and inconsistency were detected via a direct comparison of the atomic formulae  representing the action.
