second, a bidder could simply give a payment willingness function that is 0 everywhere, and have her utility be taken into account in deciding on the outcome, in spite of her not contributing anything. 
53 ble for a bidder to inflate her utility by changing its units, thereby making her bid more important for utility  maximization purposes.
first, because affine transformations do not affect utility functions in a fundamental way, it would be  possi3 of course, our bidding language can be trivially extended to allow for fully expressive bids, by also allowing bids from a fully expressive bidding language, in addition to the bids in our bidding language.
there are several reasons.
one might wonder why, if we are given the bidders" utility functions, we do not simply maximize the sum of the  utilities rather than surplus or total donated.
one interesting special case is a threshold bid, where wj is a step function: the bidder will provide t dollars if her utility  exceeds s, and otherwise 0. another interesting case is when such a bid is partially acceptable: the bidder will provide t dollars if her utility exceeds s; but if her utility is u < s, she is still willing to provide ut s dollars.
the only restriction that we place on the payment  willingness functions wj is that they are piecewise linear.
this special case is justified in settings where the scale of the donations by the bidders is small relative to the amounts the charities receive from other sources, so that the marginal use of a dollar to the charity is not affected by the amount given by the bidders.
an interesting special case which we will study is when each ui j is a line: ui j(πci ) = ai jπci .
furthermore, each ui j must be piecewise linear.
(we observe that this does not imply that the bid function vj decomposes  similarly, because of the nonlinearity of wj.)
, πcm ) = m i=1 ui j(πci ).
thus, uj(πc1 , πc2 , .
our first restriction is that the utility that a bidder  derives from money donated to one charity is independent of the amount donated to another charity.
(she will submit these functions as her bid.)
, πcm ), and we let the bidder describe her functions uj and wj separately.
, πcm )) = vj(πc1 , πc2 , .
so, we have wj(uj(πc1 , πc2 , .
(indeed, when an individual is donating to a large charity, the reason that the individual donates only a bounded amount is typically not decreasing marginal value of the money given to the charity, but rather that the marginal value of a dollar to the bidder herself becomes larger as her budget becomes smaller.)
we emphasize that this function does not need to be linear, so that utilities should not be thought of as expressible in dollar amounts.
then, there is a donation willingness function wj : r → r, which specifies how much bidder j is willing to pay given her utility for the vector of donations to the charities.
(note that the way we define a bidder"s utility function, it does not take the payments the bidder makes into account.)
first, there is a utility function uj : rm → r, specifying how much bidder j appreciates a given vector of total donations to the charities.
we will specify a bidding language that only represents a subset of all possible bids, which can be described concisely.3 to introduce our bidding language, we will first describe the bidding function as a composition of two functions; then we will outline our assumptions on each of these functions.
thus, we need a bidding language that will allow the bidders to at least specify some bids more concisely.
, s}, this would still require a bidder to specify (s+1)m values.
even if we restricted the possible total payment made to each charity to the set {0, 1, 2, .
specifying a general bid in our framework (as defined above) requires being able to specify an arbitrary real-valued function over rm .
