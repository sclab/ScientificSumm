in particular it justifies the application of methods recently developed under the eu framework [1, 4, 14, 6] to representation of value under certainty. 
to summarize, the results of this section generalize additive mvf theory.
, g (4) fr = u([ir]) + r−1x k=1 (−1)k x 1≤i1<···<ik<r u([ k\ s=1 iis ∩ ir]) the proof directly shows that if graph g = (a, e) is a perfect map of cdi, u(a) decomposes to a sum over the functions defined in (4).1 thus this proof does not rely on the decomposition result of theorem 5, only on the existence of the perfect map.
, ig} a set of maximal cliques as  defined in theorem 5. then the functional decomposition from that theorem can be defined as f1 = u([i1]), and for r = 2, .
theorem 6. let g = (a, e) be a perfect map for the cdi condition on a, and {i1, .
for any i ⊆ a, the function u([i]) stands for the  projection of u(a) to i where the rest of the attributes are fixed at their reference levels.
, a0 m) be a predefined vector called the reference outcome.
let (a0 1, .
we adopt the following conventional  notation.
229 the next theorem establishes that the functional constituents of mvf are the same as those for gai decompositions as defined by fishburn [13] for eu.
theorem 5 defines a decomposition structure, but to represent the actual mvf we need to specify the functions over the cliques.
this is in contrast with the fully additive decomposition of mvf that requires mutual  preferential independence [11].
moreover, the assumption or detection of cdi conditions can be performed incrementally, until the mvf is decomposed to a reasonable dimension.
the cdi conditions, in turn, are particularly intuitive to detect when the preference differences carry a direct interpretation, as in the case with monetary  differences discussed below.
, ig are (overlapping) subsets of a, each  corresponding to a maximal clique of g. given theorem 5, we can now identify an mvf gai structure from a collection of cdi conditions.
their proofs can be easily adapted to cdi, since they only rely on the decomposition property of cai that is also implied by cdi according to proposition 4. theorem 5. let g = (a, e) be a perfect map for the cdi conditions on a. then u(a) = g x r=1 fr(ir), (3) where i1, .
for this purpose we are now ready to employ the results of bacchus and grove [1], who establish that the cai condition has a perfect map [20]; that is, there exists a graph whose nodes correspond to the set a, and its node separation reflects exactly the complete set of cai conditions on a. moreover, they show that the utility function decomposes over the set of maximal cliques of the perfect map.
we seek a finer-grain global decomposition of the utility function, similar to that obtained from mutual preferential  independence.
3.2 gai structure for mvf a single cdi condition decomposes the value function into two parts.
however, x \ {a} may still be cdi of ¯x given a.
for example, if attributes a ∈ x and b /∈ x are complements or substitutes, x cannot be difference independent of ¯x.
the conditional independence condition is much more  applicable than the unconditional one.
(2) an immediate result of proposition 4 is that cdi is a symmetric relation.
proposition 4. cdi(x, y | z) iff there exist functions ψ1(x, z) and ψ2(y, z), such that u(x, y, z) = ψ1(x, z) + ψ2(y, z).
to complete the analogy with cai, we generalize lemma 3 as follows.
then cdi(x, y | z) iff u(a) = u(x0 , y, z) + u(x, y 0 , z) − u(x0 , y 0 , z).
lemma 3. let u(a) be an mvf representing preference  differences.
cdi leads to a decomposition similar to that obtained from cai [17].
since the conditional set is always the complement, we sometimes leave it implicit, using the abbreviated notation cdi(x, y ).
definition 7. let x, y, z be a partition of the set of attributes a. x is conditionally difference independent of y given z,  denoted as cdi(x, y | z), if ∀ instantiations ˆz, x1 , x2 , y 1 , y 2 [x1 y 1 ˆz, x2 y 1 ˆz] ∼ [x1 y 2 ˆz, x2 y 2 ˆz].
3.1 conditional difference independence our first step is to generalize definition 6 to a conditional  version.
