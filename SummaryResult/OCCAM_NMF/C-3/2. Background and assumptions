finally, the application should be  insensitive to wide-area latencies, so it can run efficiently on a  widearea grid (16; 17). 
we find it a reasonable assumption for a grid application, since applications for which the slowest processor becomes a bottleneck will not be able to  efficiently utilize grid resources.
also, master-worker applications typically use dynamic load-balancing strategies (e.g., mw - a framework for writing  gridenabled master-worker applications (12)).
this can be achieved by using a dynamic load balancing  strategy, such as work stealing used by divide-and-conquer  applications (19).
the second assumption is that the  application can efficiently run on processors with different speeds.
processors can be added or removed at any point in the  computation with little overhead.
in (23), we showed how  divide-andconquer applications can be made fault tolerant and malleable.
the first assumption we make is that the application is  malleable, i.e., it is able to handle processors joining and leaving the on-going computation.
in this section we summarize the assumptions about applications that are  important to our approach.
however, we believe that our methodology can be used for other types of applications as well.
we studied the adaptation problem in the context of  divide-andconquer applications.
we  assume that the links connecting the sites with the internet backbone might become bottlenecks causing the inter-site communication to suffer from low bandwidths.
communication between sites suffers from high latencies.
the different sites are connected by a wan.
processors  belonging to one site are connected by a fast lan with a low latency and high bandwidth.
we also assume that the  processors of the sites are accessible using a grid scheduling system, such as koala (15), zorilla (9) or grms (3).
the applications are running on multiple sites at the same time, where sites are clusters or supercomputers.
we assume the following resource model.
in this section, we describe our assumptions about the applications and their resources.
