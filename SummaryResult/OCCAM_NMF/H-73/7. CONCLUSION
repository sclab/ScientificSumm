any opinions, findings, conclusions, or recommendations expressed in this paper are the authors", and do not necessarily reflect those of the sponsor. 
acknowledgement this research was supported by nsf grants eia-9983253 and iis-0118767.
another extension of the framework is to consider the retrieval effectiveness of the online databases, which is an important issue in the operational environments.
all of these are the directions of future research.
when cost is associated with searching the online databases, the utility framework can be adjusted to automatically estimate the best number of databases to search so that a large amount of relevant documents can be retrieved with relatively small costs.
the unified utility maximization framework is open for different extensions.
detailed analysis indicates that the advantage of these algorithms comes from explicitly optimizing the goals of the specific tasks.
experiments have shown that these algorithms achieve results that are at least as good as the prior state-of-the-art, and sometimes considerably better.
furthermore, the uum/hp-fl and uum/hp-vl resource selection algorithms are extended with a variant of ssl results merging algorithm to address the distributed document retrieval task when selected databases do not return document scores.
empirical studies have been conducted on testbeds to simulate the distributed search solutions of large organizations (companies) or domain-specific hidden web.
one algorithm for resource selection (uum/hr) and two algorithms for document retrieval (uum/hp-fl and uum/hp-vl) are derived from this framework.
this framework is not only more theoretically solid but also very effective.
therefore, the probabilities of relevance for all the documents across the databases can be estimated with very small amount of human relevance judgment, which is much more efficient than previous methods that build a separate model for each database.
(search engines do not return document scores) precision at doc rank cori redde uum/hr uum/hp-fl uum/hp-vl 5 docs 0.3520 0.3240 (-8.0%) 0.3680 (+4.6%) 0.4520 (+28.4%)(+22.8%) 0.4520 (+28.4%)(+22.8) 10 docs 0.3320 0.3140 (-5.4%) 0.3340 (+0.6%) 0.4120 (+24.1%)(+23.4%) 0.4020 (+21.1%)(+20.4%) 15 docs 0.3227 0.2987 (-7.4%) 0.3280 (+1.6%) 0.3920 (+21.5%)(+19.5%) 0.3733 (+15.7%)(+13.8%) 20 docs 0.3030 0.2860 (-5.6%) 0.3130 (+3.3%) 0.3670 (+21.2%)(+17.3%) 0.3590 (+18.5%)(+14.7%) 30 docs 0.2727 0.2640 (-3.2%) 0.2900 (+6.3%) 0.3273 (+20.0%)(+12.9%) 0.3273 (+20.0%)(+12.9%) 40 sample database to estimate the probabilities of relevance of documents by their centralized retrieval scores, while the centralized sample database serves as a bridge to connect the individual databases with the centralized logistic model.
a single logistic model was trained on the centralized table 7. precision on the trec123-100col-bysource testbed when 3 databases were selected (the first baseline is cori; the second baseline for uum/hp methods is uum/hr.)
the new framework continues a recent research trend studying the use of query-based sampling and a centralized sample database.
as far as we know, this is the first work that tries to view and theoretically model the distributed information retrieval task in an integrated manner.
in this framework, the selection decisions are obtained by optimizing different objective functions.
in this work we propose a unified utility maximization model to integrate the resource selection of database recommendation and document retrieval tasks into a single unified framework.
this kind of inconsistency has also been observed in previous work, but the prior solutions either used heuristic methods or assumed cooperation by individual databases (e.g., all the databases used the same kind of search engines), which is frequently not true in the uncooperative environment.
we argue that the high-recall resource selection goal of database recommendation and high-precision goal of document retrieval are related but not identical.
most previous research use effective resource selection algorithm of database recommendation system for distributed document retrieval application.
distributed information retrieval solves the problem of finding information that is scattered among many text databases on local area networks and internets.
