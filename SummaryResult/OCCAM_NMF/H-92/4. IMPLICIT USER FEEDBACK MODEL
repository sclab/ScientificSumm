the resulting user behavior model is used to help rank web search  resultseither directly or in combination with other features, as described below. 
this approach is particularly attractive as it does not require heuristics beyond feature engineering.
these labeled feature vectors are used as input to the ranknet training algorithm (section 3.3) which produces a trained user behavior model.
each observed query-url pair is represented by the features in table 4.1, with values averaged over all search sessions, and assigned one of six possible relevance labels, ranging from perfect to bad, as assigned by explicit relevance judgments.
we find all the instances in our session logs where these queries were submitted to the search engine, and aggregate the user behavior features for all search sessions involving these queries.
4.2 deriving a user feedback model to learn to interpret the observed user behavior, we correlate user actions (i.e., the features in table 4.1 representing the actions) with the explicit user judgments for a set of training queries.
having described our feature set, we briefly review our general method for deriving a user behavior model.
clickthrough features position position of the url in current ranking clickfrequency number of clicks for this query, url pair clickprobability probability of a click for this query and url clickdeviation deviation from expected click probability isnextclicked 1 if clicked on next position, 0 otherwise ispreviousclicked 1 if clicked on previous position, 0 otherwise isclickabove 1 if there is a click above, 0 otherwise isclickbelow 1 if there is click below, 0 otherwise browsing features timeonpage page dwell time cumulativetimeonpage cumulative time for all subsequent pages after search timeondomain cumulative dwell time for this domain timeonshorturl cumulative time on url prefix, no parameters isfollowedlink 1 if followed link to result, 0 otherwise isexacturlmatch 0 if aggressive normalization used, 1 otherwise isredirected 1 if initial url same as final url, 0 otherwise ispathfromsearch 1 if only followed links after query, 0 otherwise clicksfromsearch number of hops to reach page from query averagedwelltime average time on page for this query dwelltimedeviation deviation from average dwell time on page cumulativedeviation deviation from average cumulative dwell time domaindeviation deviation from average dwell time on domain query-text features titleoverlap words shared between query and title summaryoverlap words shared between query and snippet queryurloverlap words shared between query and url querydomainoverlap words shared between query and url domain querylength number of tokens in query querynextoverlap fraction of words shared with next query table 4.1: some features used to represent post-search navigation history for a given query and search result url.
to model this aspect of user experience we include features such as overlap in words in title and words in query (titleoverlap) and the fraction of words shared by the query and the result summary.
for example, web search users can often determine whether a result is relevant by looking at the result title, url, and summary - in many cases, looking at the original document is not necessary.
furthermore, the feature set was designed to provide essential information about the user experience to make feedback interpretation robust.
we also model the browsing behavior after a result was clicked - e.g., the average page dwell time for a given query-url pair, as well as its deviation from the expected (average) dwell time.
we include the traditional implicit feedback features such as clickthrough counts for the results, as well as our novel derived features such as the deviation of the observed clickthrough number for a given query-url pair from the expected number of clicks on a result in the given position.
the features used to represent user interactions with web search results are summarized in table 4.1. this information was obtained via opt-in client-side instrumentation from users of a major web search engine.
the feature set is comprised of directly observed features (computed directly from observations for each query), as well as  queryspecific derived features, computed as the deviation from the overall query-independent distribution of values for the corresponding directly observed feature values.
we design our features to take advantage of aggregated user behavior.
4.1 representing user actions as features we model observed web search behaviors as a combination of a ``background"" component (i.e., query- and relevance-independent noise in user behavior, including positional biases with result interactions), and a ``relevance"" component (i.e., query-specific behavior indicative of relevance of a result to a query).
we first briefly summarize our features and model, and the learning approach (section 4.2) in order to provide sufficient information to replicate our ranking methods and the subsequent experiments.
the general approach is to represent user actions for each search result as a vector of features, and then train a ranker on these features to discover feature values indicative of relevant (and  nonrelevant) search results.
we characterize this problem in detail in [1], where we motivate and evaluate a wide variety of models of implicit user activities.
interpreting implicit feedback in real web search setting is not an easy task.
our goal is to accurately interpret noisy user feedback obtained as by tracing user interactions with the search engine.
