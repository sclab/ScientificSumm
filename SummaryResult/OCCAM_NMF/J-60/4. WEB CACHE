reasoning back, bob cannot expect to get the bonus and so misreporting is dominated strategy for him. 
the right hand side equals zero as the participation costs are negligible.
alice"s expected payoff gained by underreporting ≤ p · (−c − βp) + (1 − p) · c < p · 0 + (1 − p) · 0 ≤ alice"s expected payoff if she honestly reports.
246 the last to report her value.
alice is 10 see [29] or [12] for exact definitions.
now, assume w.l.o.g.
challenging without being informed (that is,  without providing enough valid records) is always dominated strategy in this mechanism.
the mechanism is efficient, budget-balanced, exhibits consumer sovereignty, no positive transfer and individual rationality10 .
a strategy that survives iterative elimination of weakly dominated strategies is to report the truth and to challenge only when the agent is informed.
theorem 2. let βp = max{0, 1−2p p · c} + , p ∈ (0, 1].
• if vt a + vb ≥ c, then clearly, va va+vb > vt a vt a +vb .
let vt a < va. there are two cases to consider: • if vt a + vb < c and va + vb ≥ c. we need to show that if the mechanism stops normally alice would pay more than vt a, that is: va va+vb ·c > vt a. indeed, va c > va (vt a + vb) > vt a (va + vb).
otherwise, load the item to the cache, alice pays pa = va va+vb · c, and bob pays pb = vb va+vb · c. claim 7. it is a dominated strategy to overreport the true value.
• stage 3: if va + vb < c, then stop.
• stage 2: the elicitation of vt b(t) is done analogously.
- otherwise, bob finances the loading of the item into the cache.
she also pays βp to bob.
otherwise (bob challenges): - if bob provides va valid records then alice pays c to finance the loading of the item into the cache.
• stage 1: (elicitation of vt a(t)) alice announces va. bob announces va ≥ va. if va = va goto the next stage.
for simplicity it is described for two players and w.l.o.g vt i (t) equals the number of requests initiated by i and observed by any  informed j (that is, α = 1 and vi(qi(t − 1)) = qi(t − 1)).
the following web-cache mechanism implements the  efficient goal that shares the cost proportionally.
given that the payments are increasing with the declared values, the forth and fifth requirements ensure that the agent would not increase his demand superficially and so qi(t) is the true demand.
in addition, if the forwarding cost is  negligible each agent cooperates and forwards messages as he would not like to decrease the future demand (that monotonically depends on the current time slot, as assumed in the forth requirement) of some other agent.
the third is to ensure that the environment stays well informed.
the second requirement is to avoid the case that an agent who gets a routing request for the item, records it and then drops it.
the first requirement is to avoid free riding, and also to avoid the case that an agent superficially increases the  demand of others and as a result decreases his own demand.
we assume that the only way agent i can affect the true qi(t) is by superficially increasing his demand for the cached item, but not the other way (that is, agent"s loss, incurred by giving up a necessary request for the item, is not negligible).
5. the network is homogeneous in the sense that if agent j happens to handle k requests initiated by agent i during the time slot t, then qi(t) = kα, where α depends on the routing protocol and the environment (α might be smaller than 1, if each request is flooded several times).
in addition, vi(·) is a common knowledge among the players.
4. let qi(t) denotes the number of loading requests agent i initiated for the item during the time slot t. we assume that vt i (t), the value for caching the item in the beginning of slot t depends only on most recent slot, formally vt i (t) = max{vi(qi(t − 1)), c}, where vi(·) is a non-decreasing real function.
we also assume that the cost incurred by sending and forwarding  messages is negligible.
3. negligible costs: we assume p-informed agents, where p is such that the agent"s induced cost for keeping records of information is negligible.
2. an acknowledgement protocol is available, so that  every agent can provide a certificate indicating that he handled a certain message properly.
an agent cannot initiate a message on behalf of other agents.
1. an agent can read the content of a message only if he is the target node (even if he has to forward the  message as an intermediate node of some routing path).
the underlying informational and environmental  requirements are as follows.
we consider environments for which future demand of each agent depends on past  demand.
in this section we suggest informational and  environmental assumptions for which we describe a decentralized  budgetbalanced efficient mechanism.
however, it is well known that this mechanism is not budget-balanced (e.g., if the valuation of each player is c, then everyone pays zero).
this goal reduces to the public project problem analyzed by clarke [10].
the efficient goal is to load the item if and only if σvt i ≥ c, where c is the loading cost.
in this problem, agent i gains the value vt i if a particular item is loaded to the local shared cache.
nisan [30] considered a single cache shared by strategic agents.
they were listed in [12] as a challenging application of distributed  algorithmic mechanism design.
web caches are widely used tool to improve overall  system efficiency by allowing fast local access.
