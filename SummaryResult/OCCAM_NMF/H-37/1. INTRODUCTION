we reduce the computational cost of svm learning by relaxing this requirement on the maximum  margin in online settings, and create a relaxed online svm, rosvm, appropriate for high performance content-based spam filtering in large-scale settings. 
we then analyze the effect of the tradeoff parameter in the svm objective function, which shows that the expensive svm methodology may, in fact, be overkill for spam detection.
we first demonstrate that  online svms do indeed provide state-of-the-art spam detection through empirical tests on several large benchmark data sets of email spam.
1.2 contributions in this paper, we address the anti-spam controversy and offer a potential resolution.
it has not yet been empirically demonstrated that svms give  improved performance over these methods in an online spam detection setting [4].
other fast methods for spam filtering include compression models [1] and logistic regression [10].
this allows a deployed system to easily adapt to a changing environment over time.
this bayesian method requires only linear training time, and is easily implemented in an online setting with incremental updates.
practitioners requiring content-based spam filtering have typically chosen to use the faster (if less statistically robust) machine learning method of naive bayes text classification [11, 12, 20].
however, svms typically require training time that is quadratic in the number of training examples, and are impractical for  largescale email systems.
academic researchers have tended to favor the use of support vector machines (svms), a statistically  robust machine learning method [7] which yields  state-of-theart performance on general text classification [14].
1.1 an anti-spam controversy the anti-spam community has been divided on the choice of the best machine learning method for content-based spam detection.
in this paper, we do not explore the related problem of link spam, which is currently best combated by link analysis [13].
content analysis has been widely applied in detecting email spam [11], and has also been used for identifying blog spam [21] and splogs [17].
in content  analysis, the actual message text (often including hyper-text and meta-text, such as html and headers) is analyzed using machine learning techniques for text classification to  determine if the given content is spam.
the approach of content analysis has shown particular promise and generality for combating spam.
there are a variety of methods for identifying these many forms of spam, including compiling blacklists of known spammers, and conducting link analysis.
other forms of spam are also becoming problematic, including blog spam, in which spammers post unwanted comments in blogs [21], and splogs, which are fake blogs constructed to enable link spam with the hope of boosting the measured importance of a given webpage in the eyes of automated search engines [17].
the most well known form of spam is email spam, which remains a major problem for large email systems.
electronic communication is increasingly plagued by  unwanted or harmful content known as spam.
