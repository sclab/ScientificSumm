we then discuss the advantages and limitations of using our framework to model interaction protocols and achieve  flexibility in section 5. section 6 presents our conclusions and items of further work. 
section 4 discusses how our framework can be used for an example of online sale interactions between a merchant, a bank and a customer.
section 3 introduces our modeling  framework and specification of protocols.
section 2 discusses the background material of linear logic, temporal linear logic and commitments.
this paper is organized as follows.
this provides a natural manipulation and reasoning mechanism as well as internal enforcement mechanisms for commitments based on proof search.
we suggest using a combination of linear logic and temporal logic to construct a commitment based interaction framework which allows both temporal and resource-related reasoning for  interaction protocols.
temporal logic, in particular, is suitable for  describing and reasoning about temporal constraints while linear logic [3] is quite suitable for modeling resources.
a key to this is using logic.
what is to be achieved rather then how agents should interact.
in order to achieve that, we specify protocols in a declarative manner, i.e.
both  commitments and protocol actions can then be reasoned about in one consistent system.
rather than creating another layer of commitment outside protocol actions, we try to achieve a modeling of  commitments that is integrated with protocol actions.
there is also a lack of a logic to naturally express aspects of resources,  internal and external choices as well as time of protocols.
as a result, the overhead of  processing the commitment layer makes specification and execution of protocols more complicated and error prone.
execution of protocol actions also requires concurrent execution of operations on related commitments.
however, in these approaches, a  mapping from protocol actions onto operations on commitments 124 978-81-904262-7-5 (rps) c 2007 ifaamas as well as handling and enforcement mechanisms of  commitments must be externally provided.
current approaches [11, 12, 10, 1] to achieve flexibilities using the notion of commitment make use of an abstract layer of commitments.
which refers to a strong promise to other agent(s) to undertake some courses of action.
thirdly, choosing a sequence of interactive actions should be based on reasoning about the intrinsic meanings of  protocol actions, which are based on the notion of commitment, i.e.
secondly, there should be no unnecessary constraint on the order in which actions are performed, such as which of  making payments and sending the cricket bat should come first.
firstly, the payment method used by cus should be at cus"s own choice and have the property that if cus"s credit check results in a disapproval, this exception should also be handled automatically by cus"s switching to paypal.
a flexible approach to this example should include several features.
the interaction ends when goods are delivered and payment is arranged.
otherwise, cus may then take the option to pay via paypal.
if cus"s credit is approved, ebank will arrange the credit  payment.
if cus uses credit payment, mer needs a bank ebank to check cus"s credit.
there are two options for cus to pay.
cus has a goal of obtaining from mer a cricket bat at some time.
a customer cus has $50.
a merchant mer has 200 cricket bats available for sale with a unit price of 10 dollars.
for example, consider the scenario below for online sales.
also, agents should be allowed to adjust their interactive actions to take advantages of  opportunities or handle exceptions that arise during  interaction.
to achieve flexibility, as characterized by yolum and singh in [11], interaction protocols should ensure that agents have autonomy over their interactive behaviors, and be free from any unnecessary constraints.
therefore, agents are required to adapt their interactive behaviors to succeed and interactions among agents should not be constructed rigidly.
in frequently changing environments such as the internet, such fixed sequences can quickly  become outdated and are prone to failure.
in traditional approaches to protocol specification, like those using finite state machines or petri nets, protocols are often predetermined legal sequences of interactive behaviors.
protocols are used to regulate interactions.
in multi-agent environments, agents often need to interact with each other to fulfill their goals.
the agent paradigm has become well suited as a design metaphor to deal with complex  systems comprising many components each having their own thread of control and purposes and involved in dynamic and complex interactions.
recently, software development has evolved toward the development of intelligent, interconnected systems working in a distributed manner.
