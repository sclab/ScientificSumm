once a  precommitment is agreed, it then becomes a commitment and the process moves from negotiation phase to commitment phase, in which the agents act to fulfill their commitments. 
the others can respond by agreeing or disagreeing with the proposal or proposing another pre-commitment.
agents can negotiate about pre-commitments by sending proposals of them to others.
a pre-commitment here refers to a potential commitment that specifies what the owner agent is willing to commit [4], like performing some actions or achieving a particular state.
commitments can be reduced to a more fundamental form known as pre-commitments.
hence, the approaches systematically enhance a variety of legal  computations [11].
from then, the corresponding legal sequences of interactive actions are determined.
completing the  protocol is done via means-end reasoning on commitment  operations to bring the current state to final states where all  commitments are resolved.
commitment based approaches associate protocols actions with operations on commitments and protocol states with the set of effective commitments [11].
on autonomous agents and multi-agent systems (aamas 07) 125 resources sharing [7].
joint conf.
in particular, persistence in commitments  introduces into agents" consideration a certain level of  predictability of other agents" actions, which is important when agents deal with issues of inter-dependencies, global constraints or the sixth intl.
indeed, social  commitment provides intrinsic meanings of protocol actions and states [11].
2.3 commitment the concept of social commitment has been recognized as fundamental to agent interaction.
with , the choice is externally decided by others.
regarding , the choice is an internal choice, as appropriate to one"s own capability.
though both and refer to a point in time, the choice of which time is different.
a means that a can be used once at some time.
similarly, a means that a can be used at any time and exactly once.
a, means that a can be used only at the next time and exactly once.
adding to a formula a, i.e.
formulas with no temporal operators can be considered as being available only at present.
the temporal  operators used are (next), (anytime), and (sometime) [6].
temporal linear logic (tll) [6] is the result of  introducing temporal logic into linear logic and hence is  resourceconscious as well as deals with time.
temporal logic can be used for specification and verification of concurrent and reactive programs [2].
temporal logic, on the other hand, is a formal system which addresses the description and reasoning about the changes of truth values of logic expressions over time [2].
2.2 temporal linear logic while linear logic provides advantages to modeling and reasoning about resources, it does not deal naturally with time constraints.
in addition, it is emphasized in [8] that linear logic is used to model agent states as sets of consumable resources and particularly,  linear implication is used to model transitions among states and capabilities of agents.
linear logic is a natural mechanism to provide this ability [5].
moreover, during interaction, the ability to match  consumption and supply of resources among agents can  simplify the specification of resource allocations.
for instance, to specify that the choice of places a or b for goods" delivery is ours as the supplier, we use a b, or is the client"s, we use a ⊕ b. in agent systems, this duality between inner and outer choices is manifested by one agent having the power to choose between alternatives and the other having to react to whatever choice is made.
as remarked in [5], and ⊕ allow choices to be made clear between internal choices (one"s own), and external choices (others" choice).
a ⊕ (additive disjunction) b, stands for the possibility of either a or b, but we don"t know which.
a (additive conjunction) b, stands for one own choice, either of a or b but not both.
a ℘ (multiplicative disjunction) b, means that if not a then b or vice versa but not both a and b. the ability to specify choices via the additive connectives is a particularly useful feature of linear logic.
a ⊗ (multiplicative conjunction) a, means that one has two as at the same time, which is different from a ∧ a = a. hence, ⊗ allows a natural expression of proportion.
classical conjunction (and) and disjunction (or) are recast over different uses of contexts - multiplicative as combining and additive as sharing to come up with four connectives.
in linear logic, a linear implication a b, however, allows a to be removed after deriving b, which means the dollar is gone after using one dollar to buy a chocolate bar.
in order to resolve such resource - formula mapping issues, girard proposed the constraints on which formulas will be used exactly once and can no longer be freely added or  removed in derivations and hence treating linear logic formulas as resources.
this causes problems as the implication allows to get a chocolate bar (b is true) while retaining one dollar (a remains true).
if we model resources like a as one dollar and b as a chocolate bar, then a ⇒ b in classical logic is read as from one dollar we can get a chocolate bar.
in such logic as classical or temporal logic, however, a direct mapping of resources onto formulas is troublesome.
in real life, resources are consumed and new resources are created.
it has been considered in agent systems to support agent negotiation and planning by means of proof search [5, 8].
linear logic [3] is well-known for  modeling resources as well as updating processes.
2.1 linear logic logic has been used as formalism to model and reason about agent systems.
using logic is central to this specification process.
in other words, protocols should be specified in a declarative manner.
in order to increase the agents" autonomy over their  interactive behaviors, protocols should be specified in terms of what is to be achieved rather than how the agents should act.
