prohibitions) and defaults play in this domain. 
in this latter aspect, we plan to investigate the use of answer set programming to specify the rules of  protocols, attending to the role that incompleteness (rules may only specify either necessary or sufficient conditions, for  instance), explicit negation (e.g.
on autonomous agents and multi-agent systems (aamas 07) 895 of obligations, dynamic updates of protocols and rule  formalisms.
joint conf.
we also plan to study particular refinements and limitations to the proposed model,  particularly with respect to the dispatching of events, semantics the sixth intl.
on top of the presented execution semantics, current and future work aims at the specification of the type system [19] which allows to program the abstract machine, the  specification of the corresponding surface syntaxes (both textual and visual) and the design and implementation of a virtual machine over existing middleware technologies such as fipa platforms or web services.
software components may be programmed in a bdi language such as jason [5] or in a non-agent oriented language).
this abstract machine would be independent of particular agent architectures and  languages (i.e.
the model of social interactions put forward in this paper is intended as the abstract machine of a language of this type.
we argue that the current field of multi-agent system programming may greatly benefit from multi-agent programming languages that allow programmers to accommodate an open set of  interaction mechanisms.
unlike the development of individual agents, which has greatly benefited from the design of several agent  programming languages [4], societal features of multi-agent systems are mostly implemented in terms of visual modelling [8, 18] and a fixed set of interaction abstractions.
in turn, this would allow for the exploitation of common formalisms, particularly concerning protocols.
thus, the proposed model is not intended to capture every organizational or communicative feature of multi-agent interactions, but to reveal their roots in basic interaction mechanisms.
these analyses shall result in new  organizational and communicative abstractions obtained through a refinement and/or extension of the general model of  social interactions.
last, the abstract model of protocols may be refined taking into account existing operational models of norms [12, 6].
similarly, the conceptualization of communicative actions as atomic interactions may similarly benefit from public semantics of communicative actions such as the one introduced in [3].
these proposals as well as others focusing in relevant  abstractions such as power relationships, contracts, trust and reputation mechanisms in organizational settings, etc., could be further exploited in order to characterize more accurately the organizational character of some multi-agent  interactions.
the analysis of social interactions put forward in this  paper draws upon current proposals of the literature in  several general respects, such as the institutional and  organizational character of multi-agent systems [2, 26, 10, 7] and the normative perspective on multi-agent protocols [12, 23, 20].
the  purpose of the speaker coincides with the illocutionary purpose of the ca [22], whereas the purpose of any listener is to  declare that it (actually, the software component) successfully processed the meaning of the ca.
from this perspective, the member types of a ca include the speaker and possibly many listeners.
finally, bottom-level interactions may represent communicative  actions.
the last  levels of the interaction tree may represent small-scale  multiagent interactions such as those represented by interaction protocols [11], dialogue games [16], or scenes [2].
large-scale interactions, modelling complex aggregates of agent interactions such as those represented by e-institutions or virtual organizations [2, 26], are also amenable to be conceptualised as  particular kinds of first-level social interactions.
thus, top-level interactions may represent the kind of agent-web pursued by large-scale initiatives such as the agentcities/opennet one [25].
in the realm of software architectures, this core has been formalised as an operational model of social  connectors, intended to describe both the basic structure and  dynamics of multi-agent interactions, from the largest (the agent society itself) down to the smallest ones  (communicative actions).
this paper has attempted to expose a possible  semantic core underlying the wide spectrum of interaction types between autonomous, social and situated software  components.
