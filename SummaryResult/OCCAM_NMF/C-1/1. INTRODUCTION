in section 5, we article 2 describe our current implementation, followed by our findings in section 6. section 7 discusses the related work in this area and section 8 contains our concluding remarks. 
in the next section, we provide a brief overview of grid information services, uddi and its limitations, which is followed by an overview of dhts in section 3. section 4 describes our proposed architecture with details on use cases.
the second motivating factor stems from the fact that dhts are relatively new tool for building distributed applications and we would like to test its potential by applying it to the problem of distributing uddi.
other distributed computing platforms/middleware while providing more functionality have much higher overhead and complexity.
we recognize that having just this abstraction may not suffice for all distributed applications, but for the objective at hand, works very well as will become clear later.
the first motivating factor is the inherent simplicity of the put/get abstraction that dhts provide, which makes it easy to rapidly build applications on top of dhts.
this crucial design choice is motivated by two factors.
a dht is a peer-to-peer (p2p) distributed system that forms a structured overlay allowing more efficient routing than the underlying network.
in this paper we explore how distributed hash table (dht) technology can be leveraged to develop a scalable distributed web services discovery architecture.
distributing uddi functionality can be achieved in multiple ways and perhaps using different distributed computing infrastructure/platforms (e.g., corba, dce, etc.).
this paper tackles the scalability issue and a way to find services across multiple registries in uddi by developing a distributed web services discovery architecture.
with the advent of grid computing the scalability issue with uddi will become a roadblock that will prevent its deployment in grids.
however, even though uddi has been the de facto industry standard for web-services discovery, imposed requirements of tight-replication among registries and lack of autonomous control, among other things has severely hindered its widespread deployment and usage [7].
the web services community has addressed the need for service discovery, before grids were anticipated, via an industry standard called uddi.
however, the fundamental problem is the need to be scalable to handle huge amounts of data from multiple sources.
the information gathered needs to be provided to variety of systems for the purpose of either utilizing the grid or proving summary information.
the state of the data needs to be maintained in a soft state so that the most recent information is always available.
in addition, threshold traps might be required to indicate specific change in existing conditions.
they provide the ability to query and subscribe to resource/service information.
grid discovery services provide the ability to monitor and discover resources and services on grids.
mgc '05, november 28- december 2, 2005 grenoble , france discovery mechanisms to be deployed in grids.
to copy otherwise,to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee.
the standardization of grids based on web services has resulted in the need for scalable web service permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page.
efficient discovery of grid services is essential for the success of grid computing.
