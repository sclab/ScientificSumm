the rest of this paper is organised as follows: section 2 describes the general structure and implementation of mobile object frameworks in order to understand the challenges related to the collection, propagation and delivery of metrics as described in section 3. section 4 describes some initial testing and results and section 5 closes with a summary, conclusions and discussion of future work. 
it could be done in several places) and thus a decision must be made based on the efficiency of the chosen solution (see section 3).
furthermore, in some cases the location where each metric should be collected is not fixed (i.e.
this problem is non-trivial since typical mobile object frameworks consist of multiple application and middleware components, and thus metrics collection must be performed at different locations and the results efficiently propagated to the adaptation engine.
consequently, the main contribution of this paper is a solution for dynamic metrics collection to support adaptation via object mobility for mobile applications.
in the case of mobjex, although an adaptation engine has been implemented [5], preliminary testing was done using synthetic pre-scripted metrics since there is little prior work on the dynamic collection of software metrics in mobile object frameworks, and no existing means of automatically collecting them.
with the exception of mobjex [6], existing mobile object systems such as voyager [10], fargo [11, 12], and javaparty [13] do not provide automated adaptation, and therefore lack the metrics collection process required to support this process.
on the other hand, adaptation via object mobility [6], also requires detailed software metrics [9] since object placement is dependent on the execution characteristics of the mobile objects themselves.
for example, service-based adaptation, in which service quality or service behaviour is modified in response to changes in the runtime environment, generally requires detailed environmental metrics but only simple software metrics [4].
furthermore, the type of metrics required for performing adaptation is dependent upon the type of adaptation required.
processor, memory and network load) are referred to as environmental metrics [5], while metrics representing application behaviour are referred as software metrics [8].
metrics related to system wide information (e.g.
effective adaptation requires detailed and up to date information about both the system and the software itself.
one solution which is receiving increasing attention in the research community is application adaptation [2-7], in which applications adjust their behaviour in response to factors such as network, processor, or memory usage.
the different capabilities of mobile devices, plus the varying speed, error rate and disconnection characteristics of mobile networks [1], make it difficult to predict in advance the exact execution environment of mobile applications.
