we further propose to make the proxies in our architecture more game cognizant so that cheat detection mechanisms can be built into the proxies themselves. 
software such as punkbuster [22] and a reputation system like those proposed by [23] and [15] would be integral to the operation of an architecture such as ours which has a lot of trust placed on the client.
also, since so much trust is put into the clients of our  architecture, it will be necessary to integrate into the  architecture many of the cheat detection schemes that have been proposed in the literature.
as discussed earlier, this will allow for a more efficient and responsive game in certain situations and alleviate some of the processing load from the server.
we also plan to implement a version of the rpgquest game with dynamic assignment of authority to allow players the authority to pickup objects when no other players are near.
we propose to evaluate the benefits of the proxy-based architecture in terms of scalability, accuracy and  responsiveness.
in future work, we propose to implement the  communications proxy architecture described in this paper and  integrate the mixed authority mechanism within this  architecture.
third, to validate the viability of the mixed authority assignment mechanism, we implemented it within a mmog called rpgquest and described our  implementation experience.
second, we proposed a mixed authority assignment mechanism that divides authority for making decisions on actions and events within the game between the clients and server and argued how such an authority assignment leads to better game playing experience without sacrificing the consistency of the game.
in this paper, we first proposed a proxy-based  architecture for mmogs that enables mmogs to scale to a large number of users by mitigating the need for a large  number of transport sessions to be maintained and decreasing both bandwidth overhead and latency of event update.
