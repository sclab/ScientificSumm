finally, section 8 discusses and compares our work with other related work. 
the details of the developed system is analyzed in section 6. section 7 provides our experimental setup, test cases, and results.
section 5  contains the similarity metrics used in the experiments.
section 4 studies the different service offering mechanisms.
section 3 explains the learning  algorithms that were studied to learn consumer preferences.
the rest of this paper is organized as follows: section 2 explains our proposed architecture.
however, in addition to domain knowledge, this derivation requires appropriate metrics to measure similarity between available services and learned preferences.
if the producer has some domain knowledge about semantic similarity (e.g., knows that the red and rose wines are taste-wise more similar than white wine), then it can generate better offers.
what should the producer"s offer 1301 978-81-904262-7-5 (rps) c 2007 ifaamas contain; white wine or rose wine?
for instance, assume that the producer has learned that the consumer wants to buy a red wine but the producer can only offer rose or white wine.
in other words, the question is how the producer uses the information that was learned from the dialogues to make the best offer to the consumer.
service generation: even after the producer learns the important features for a consumer, it needs a method to generate offers that are the most relevant for the consumer among its set of possible services.
since no information is present before the interactions start, the learning algorithm has to be incremental so that it can be trained at run time and can revise itself with each new interaction.
the producer models the requests of the consumer and its counter offers to learn which  features are more important for the consumer.
the wine seller learns the wine preferences of the customer to sell better targeted wines.
the particular service we have used is a wine selling service.
by using a common ontology, we enable the consumers and producers to share a common  vocabulary for negotiation.
we use an ontology in order to capture the relations between services and to construct the features for a given service.
we represent  service requests as a vector of service features.
preference learning: as an alternative, we propose an  architecture in which the service providers learn the relevant features of a service for a particular customer over time.
hence, it is more appropriate for the producer to learn these preferences for each consumer.
on the other hand, mostly the producer does not know the consumer"s preferences before the negotiation.
some studies take these weights as a priori and uses the fixed weights [4].
for this purpose, evaluation of the service components with  different weights can be useful.
without doubt, considering the preferences of the consumer has a positive impact on the negotiation process.
for instance, completion time of a service may be important for one consumer whereas the quality of the service may be more important for a second consumer.
however, in reality not all features may be relevant and the relevance of a feature may vary from consumer to consumer.
however, most existing negotiation approaches assume that all features of a service are equally important and concentrate on the price [5, 2].
when this is the case, the producer and the consumer need to negotiate the content of the requested service [15].
nevertheless, many times the service provider may not be offering the exact requested service due to lack of resources, constraints in its  business policy, and so on [3].
however, negotiation on price presupposes that other properties of the service have already been agreed upon.
current approaches to e-commerce treat service price as the  primary construct for negotiation by assuming that the service content is fixed [9].
