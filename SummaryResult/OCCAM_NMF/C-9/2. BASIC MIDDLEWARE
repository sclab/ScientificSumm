it offers to change the service model on  demand from traditional client-server to a peer-to-peer based approach and all kind of intermediate stages by migration and exchanging of fragments. 
this allows the fragmented object model to adapt to changing environment conditions or quality of service  requirements.
however internal distribution and interaction is not only transparent on the outer interface of the distributed object, but may even change dynamically at runtime.
any client that wants to access the fragmented object needs a local fragment, which provides an interface identical to that of a traditional stub.
the implementation of these properties however is not bound to a specific location, but may be distributed arbitrarily on various fragments.
from an abstract point of view, a fragmented object is a unit with unique identity, interface, behavior, and state, like in classic object-oriented design.
1).
in the fragmented object model, the distinction between client stubs and the server object is no longer present (fig.
furthermore aspectix supports the fragmented object model [5] that is used to implement and provide decentralized  adaptive services.
at its core, it provides a corba-compliant orb and, as such, supports heterogeneous distributed systems.
the edas environment is based on the aspectix  middleware.
