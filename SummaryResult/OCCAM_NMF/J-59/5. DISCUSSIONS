ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = svi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ svi (using the fact that θi pi ≥ θj pj for i < j). 
let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k .
, n. consider two jobs i and i + k. from lemma 3, svi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.
without loss of generality, assume efficient  ordering of jobs is: 1, .
proposition 6. the shapley value rule satisfies adjusted no-envy.
definition 12. an allocation rule satisfies adjusted  noenvy if for all q ∈ q, (σ, t) ∈ ψ(q), and i, j ∈ n, we have πi ≤ ci(σij ) − tij i .
for simplicity, we state the definition of adjusted no-envy to apply to all such rules.
for example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.
observe that an allocation may not allow for calculation of tij .
as before denote σij be an ordering where the position of i and j is swapped from an ordering σ. for adjusted  noenvy, if (σ, t) is an allocation for some q ∈ q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .
here, we show that adjusted envy  continues to hold in the shapley value rule in our model (when processing times need not be unity).
to overcome this, chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the shapley value rule when processing times of all jobs are unity.
definition 11. an allocation rule satisfies no-envy if for all q ∈ q, (σ, t) ∈ ψ(q), and i, j ∈ n, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j. from the result in [2], the shapley value rule does not  satisfy no-envy in our model also.
5.2 results on envy chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.
this gives us the shapley value rule by lemma 3.
from ete, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)li + αri = pjθj + (1 − α)lj + αrj (since ψ is efficient and reasonable) ⇒ (1 − α)(li − lj) = α(rj − ri) (using pi = pj, θi = θj) ⇒ 1 − α = α (using li − lj = rj − ri = 0) ⇒ α = 1 2 .
let (σ, t) ∈ ψ(q) and π be the resulting cost shares.
consider a q ∈ q in which pi = pj and θi = θj.
proposition 5. any efficient and reasonable allocation rule ψ that satisfies ete is a rule implied by the shapley value rule.
the shapley value rule comes as a result of ete as shown in the following proposition.
if α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.
if α = 0, then every job bears its own cost.
definition 10. an allocation rule ψ is reasonable if for all q ∈ q and (σ, t) ∈ ψ(q) we have for all i ∈ n, ti = α ¡θi   j∈pi(σ) pj − pi   j∈fi(σ) θj¢∀ i ∈ n, where 0 ≤ α ≤ 1. the reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference  between the waiting cost he incurs and the waiting cost he inflicts on other jobs.
we will show how these reasonable mechanisms lead to the shapley value mechanism.
5.1 a reasonable class of cost sharing  mechanisms in this section, we will define a reasonable class of cost sharing mechanisms.
