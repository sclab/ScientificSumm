we use this containment property in our indexing scheme to index ldd. 
thus, containment property limits the range of availability or operation of a service.
the subordinate locations are hierarchically related to each other.
the containment property helps determining relative position of an object by defining or identifying locations that contains those objects.
this is based on the containment property of location dependent data.
almost all of them depict ldd with the help of hierarchical structures [3, 4].
presently there are several applications that deal with ldd [13, 16].
location dependent data are data which are associated with a location.
however, none of them has specifically addressed the requirements of ldd.
these non related data may be clustered or non clustered.
all of the above mentioned schemes have been applied to data which are non related to each other.
it facilitates index replication by linking different search trees.
in this scheme, a parameterized index, called the exponential index is used to optimize the access latency or the tuning time.
another indexing technique proposed is the exponential indexing scheme [17].
by tuning the parameters of p and m, mobile clients can achieve either a good tuning time or good access latency.
the first bucket in each data segment contains a control index, which is a binary index mapping a given key value to the segment containing that key, and a local index, which is an m-entry index mapping a given key value to the buckets within the current segment.
the flexible index first sorts the data items in ascending (or descending) order of the search key values and then divides them into p segments.
a flexible indexing method was proposed in [5].
tan and yu discussed data and index organization under skewed broadcast hashing and signature methods have also been suggested for wireless broadcast that supports equality queries [9].
these structures minimize the average index search cost by reducing the number of index searches for hot data at the expense of spending more on cold data.
[8] considered unbalanced tree structures to optimize energy consumption for non-uniform data access.
[2] and shivakumar et al.
chen et al.
as such, each node in the non-replicated part appears only once in a broadcast and, hence, reduces the replication cost and access latency while achieving a good tuning time.
each broadcast consists of the replicated part and the  nonreplicated part that indexes the data items immediately following it.
specifically, the index tree is divided into a replicated part and a non replicated part.
the distributed indexing method was proposed to efficiently replicate and distribute the index tree in a broadcast.
[5, 6] applied the b+ index tree, where the leaf nodes store the arrival times of the data items.
imielinski et al.
several disk-based indexing techniques have been used for air indexing.
