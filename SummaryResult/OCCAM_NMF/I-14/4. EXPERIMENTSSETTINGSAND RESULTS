however, it remains as future work to discover the  correlation between the magnitude of the performance gains and the size of the data collection and/or the extent of the  heterogeneity between the sub-collections. 
overall, figures 4, 5, and table 1 demonstrate that the reinforcement learning based approach can considerably  enhance the system performance for both data collections.
since both algorithms are designed based on the assumption that document collections can be well represented by their collection model, this result is not surprising.
this is because that the documents in the sub-collection of trec-123-100-random are selected  randomly which makes the collection model, the signature of the collection, less meaningful.
table 1 shows that the performance  improvement for trec-123-100-random is not as significant as the other datasets.
columns tsna-source and tsla-source show the results for dataset trec-123-100-source with tsna and tsla approaches respectively.
the first number is the actual  cumulative utility while the second number is the percentage gain in terms of the utility over tsna approach.
there are two numbers in each cell in the  column tsla-random.
the column tsla-random shows the results for dataset trec-123-100-random with the tsla approach.
in particular, column tsna-random shows the results for dataset trec-123-100-random with the tsna approach.
the five columns show the results for four different approaches.
table 1 lists the cumulative utility for datasets  trec123-100-random and trec-123-100-source with  hierarchical organizations.
the tsla combines the merits of both approaches and outperforms them.
on the contrary, the  two-stepbased learning algorithm can relocate the search session to a neighborhood with more relevant documents.
thus, even the optimal routing policy can do little beyond reaching these relevant documents faster.
moreover, two-phase learning based algorithm is better than single-phase based learning algorithm because the maximal reward an agent can receive from searching its neighborhood within ttl hops is related to the total  number of the relevant documents in that area.
these experimental results demonstrate that learning-based approaches  consistently perform better than non-learning based routing  algorithm.
it illustrates that the cumulative  utility of non-learning algorithms increases largely linearly over time, while the gains of learning-based algorithms  accelerate when more queries enter the system.
figure 5 shows the cumulative utility versus the number of incoming queries over time for ssna, ssla,tsna, and tsla respectively.
the results show that the average performance gain for tsla approach over tnla approach is 35% after stabilization.
the tsna approach has a relatively consistent performance with the average reward ranges from 0.05 − 0.15. the average reward for tsla approach, where learning algorithm is exploited, starts at the same level with the tsna algorithm and improves the average reward over time until 2000−2500 queries joining the system.
but the performance increases over time and the average performance gain stabilizes at about 25% after query range 2000 − 3000. figure 4 shows the arss(average reward per search  session) versus the number of incoming queries over time for the the two-step based non-learning algorithm(tsna), and the two-step learning algorithm(tsla) for data  collection trec-vlc-921.
the average reward for ssla approach starts at the same level with the ssna algorithm.
it shows that the average reward for ssna algorithm ranges from 0.02 − 0.06 and the performance changes little over time.
4.3 results analysis and evaluation figure 3 demonstrates the arss(average reward per search session) versus the number of incoming queries over time for the the single-step based non-learning algorithm (ssna), and the single-step learning algorithm(ssla) for data collection trec-vlc-921.
in our experiments, there are ten types of queries acquired by clustering the query set 301 − 350 and 1 − 50.
the service time for the communication queue and local search queue, i.e tqij and trs, is set as 0.01 time unit and 0.05 time units  respectively.
in our experiments, λ is set as 0.0543 so that the mean of the incoming queries from the environment to the agent network is 50 per time unit.
on autonomous agents and multi-agent systems (aamas 07) 0 50 100 150 200 250 300 350 400 0 500 1000 1500 2000 2500 3000 cumulativeutility query number cumulative utility over the number of incoming queries tsla-921 ssna-921 ssla-921 tsna-921 figure 5: the cumulative utility versus the number of search sessions trec-vlc-921 in addition, we assume that all agents have an equal chance of getting queries from the environment, i.e, λ is the same for every agent.
e−λ 236 the sixth intl.
joint conf.
[9] with parameters α = 0.5 and β = 0.6. in our experiments, we estimate the upward limit and downward degree limit using linear discount factors 0.5, 0.8 and 1.0. once the topology is built, queries randomly selected from the query set 301−350 on trec-vlc-921 and query set 1− 50 on trec-123-100-random and trec-123-100-source are injected to the system based on a poisson distribution p(n(t) = n) = (λt)n n!
during the topology generation process, degree information of each agent is estimated by the algorithm introduced by palmer et al.
the hierarchical agent organization is generated by the algorithm described in our previous algorithm [15].
the two  different sets of partitions allow us to observe how the  distributed learning algorithm is affected by the homogeneity of the collections.
the documents in each subcollection in dataset trec-123-100-source are more  coherent than those in trec-123-100-random.
the two partitions are denoted as trec-123-100-random and trec-123-100-source respectively.
furthermore, trec-123-100 is split into two sets of 0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0 500 1000 1500 2000 2500 3000 arss query number arss versus the number of incoming queries for trec-vlc-921 ssla-921 ssna-921 figure 3: arss(average reward per search  session) versus the number of search sessions for 1phase search in trec-vlc-921 0 0.1 0.2 0.3 0.4 0.5 0.6 0 500 1000 1500 2000 2500 3000 arss query number arss versus query number for trec-vlc-921 tsla-921 tsna-921 figure 4: arss(average reward per search  session) versus the number of search sessions for 2phase search in trec-vlc-921 sub-collections in two ways: randomly and by source.
hence, trec-vlc-921 is much closer to real document distributions in p2p  environments.
it is  observed that dataset trec-vlc-921 is more heterogeneous than trec-123-100 in terms of source, document length, and relevant document distribution from the statistics of the two data collections listed in [13].
in distributed information retrieval domain, the two data collections are split to 921 and 100 sub-collections.
the trec-vlc-921 and  trec123-100 datasets were created by the u.s. national institute for standard technology(nist) for its trec conferences.
4.2 experimental settings in our experiment, we use two standard datasets,  trecvlc-921 and trec-123-100 datasets, to simulate the  collections hosted on agents.
in  simulation, each agent is pulsed regularly and the agent checks the incoming message queues, performs local operations and then forwards messages to other agents .
each trano agent is  composed of an agent view structure and a control unit.
trano supports importation and  exportation of agent organization profiles including topological connections and other features.
trano is built on top of the farm [4], a time based distributed simulator that provides a data  dissemination framework for large scale distributed agent network based organizations.
4.1 trano testbed trano (task routing on agent network organization) is a multi-agent based network based information retrieval testbed.
the following sub-sections introduce the trano testbed, the datasets, and the experimental results.
the experiments are conducted on trano simulation toolkit with two sets of datasets, trec-vlc-921 and  trec123-100.
