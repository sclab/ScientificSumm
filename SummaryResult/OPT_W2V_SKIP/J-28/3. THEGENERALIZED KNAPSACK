In our FPTAS, rather than using a greedy approximation algorithm to solve  iKnapsack( , j), we construct a dynamic programming table to  compute the minimum cost at which at least M − uj+1 units can be obtained using the remaining n − 1 lists in the generalized knapsack.
We say that the size of an anchor tj i is uj i , 8 In fact, because of the one per list constraint, the generalized problem is closer in spirit to the multiple choice knapsack  problem [9], where the underling set of items is partitioned into  disjoint subsets U1, U2, .
It is worth 