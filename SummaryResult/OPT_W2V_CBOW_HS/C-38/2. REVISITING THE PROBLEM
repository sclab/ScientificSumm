Using available bandwidth as criteria for parent selection does not scale for two reasons: First, to cope with dynamics of bandwidth variations, each peer requires to periodically  estimate the available bandwidth from all other peers through measurement (e.g., [6]).
We conclude that a practical solution for  peer-topeer streaming applications should incorporate the following design properties: (i) it should use an unstructured,  multiparent peer-to-peer overlay, (ii) it should provide a scalable peer discovery mechanism that enables each peer to find its good parents efficiently, (iii) it should detect (and possibly avoid) any shared bottleneck among different connections in the overlay, and (iv) it should deploy congestion controlled connections but ensure in-time arrival of delivered segments to each receiver.
Each peer selects a new parent in a demand-driven fashion in order to minimize the number of end-to-end bandwidth measurements, and thus improve scalability.
Information about other peers are used by the PS mechanism at each peer to determine proper parent peers through which it should connect to the overlay.
This suggests that there might exist a tradeoff between maximizing provided bandwidth to each peer and  minimizing overall delay across the overlay.
In PRO, each receiver leverages congestion controlled  bandwidth from its parents as an implicit signal to detect two events: (i) any measurable shared bottleneck among  connections from different parents, and (ii) any change in  network or overlay conditions (e.g., departure or arrival of other close-by peers).
Then, the actual properties (i.e., available  bandwidth and delay) of the selected parent are verified through passive measurement.
Participating peers cooperatively run a distributed algorithm to organize themselves into a source-rooted tree structure in order to minimize either overall delay across all branches of the tree (e.g., [7]), or delay between source and each receiver peer (e.g., [20]).
In the presence of bandwidth asymmetry, this could easily limit delivered bandwidth on each tree below the required bandwidth for a single layer, 2) it is not feasible to build  separate trees that are all optimal for a single selection criteria (e.g., overall delay),.
No of parents for pi nopi(t) No of active parents for pi at time t img sz Size of local image at each peer sgm Size of gossip message delij Estimated delay between pi and pj Clearly, properties of the selected utility function as well as accuracy of estimated parameters (in particular using  outgoing bandwidth instead of available bandwidth) determine properties of the local image at each peer which in turn  affects performance of the framework in some scenarios.
4 Throughout this paper we use receiver and parent as short form for receiver peer and parent peer.
Furthermore, by selecting a new parent from the local  image, PRO increases the probability of finding a good parent in each selection, and thus significantly decreases number of required measurements which in turn improves scalability.
But PRO does not have the same  limitations that exist in multi-tree approaches because it  allows each receiver to independently micro-manage its  parents to maximize its overall bandwidth based on local  information.
Constructing a peer-to-peer overlay for streaming  applications should not only accommodate global design goals such as scalability and resilience but also satisfy the local design goal of maximizing delivered quality to individual peers 1 .
Therefore, the receiver with a higher bandwidth  connectivity (p3) is more likely to keep p1 as parent whereas p0 may examine other parents with higher bandwidth including p3.
Parent Selection: We examine two key aspects of parent selections: (i) Selection Criteria: There are two main criteria for  parent selections: relative delay and available bandwidth  between two peers.
Meshfirst approaches (e.g., [7, 6]) that require each peer to know about all other participating peers as well as centralized  approaches (e.g., [16]) to peer discovery exhibit limited  scalability.
Second, streaming a single  content from multiple senders is challenging for two reasons: 1) This requires tight coordination among senders to  determine overall delivered quality (e.g., number of layers) and decide which sender is responsible for delivery of each  segment.
a New Parent Criteriafor PeerDiscovery Update LocalImage oftheOverlay Unknown peers in the overlay Known peers in the overlay Select Internal Components of Receiver Peer Receiver Peer Figure 1: Interactions between PD and PS  mechanisms through local image 44 P1 P3 P0 L0 L1 L3 Overlay connection Network Path P2 L2 P1 P3 P0 L0 L1 L3 P2 L2 Initial Overlay Reshaped Overlay Figure 2: Using congestion controlled bandwidth as signal to reshape the overlay the corresponding parent if its bandwidth remains low [8].
In practice, a  combination of these cases might simultaneously exist among participating peers [1].
Most of the previous solutions adopted the idea of  application level multicast and used delay as the main selection criteria.
PRO conducts passive measurement not only to  determine available bandwidth from a parent but also to detect any shared bottleneck between paths from different parents.
While these parent  selection strategies minimize associated network load, they may not provide sufficient bandwidth to individual peers because delay is often not a good indicator for available bandwidth between two peers [12, 14].
Each peer uses the PALS mechanism to stream content from  multiple parent peers.
In these cases, the utility value may not effectively guide the search process in identifying good parents which increases the average convergence time until each peer finds a good subset of parents.
First, parent selection  strategy should be determined based on location of a bottleneck.
The utility of a parent peer pi for a receiver pj is a function of their relative network distance (delij) and the outgoing  access link bandwidth of the parent (outbwi), (i.e., U(pi, pj) 3 These multi-tree approaches often do not use congestion control for each connection.
Using parents" access link bandwidth instead of available bandwidth has several advantages: (i) outgoing bandwidth is an upper bound for available  bandwidth from a parent.
When a receiver needs a new parent, its PS mechanism randomly selects a peer from its local  image where probability of selecting a peer directly depends on its utility.
Main Features: Gossiping provides a scalable approach to peer discovery because each peer does not require global knowledge about all group members, and its generated  traffic can be controlled.
One approach to build a multi-parent overlay is to  organize participating peers into different trees where each layer of the stream is sent to a separate tree (e.g., [4, 16]).
Relative delay between any two peers can be estimated in a scalable fashion with one of the existing landmark-based solutions such as Global Network  Positioning (GNP) [15].
There has been a wealth of previous research that explored design space of the PD and PS mechanisms as follows: Peer Discovery: In structured peer-to-peer networks, the existing structure enables each peer to find other  participating peers in a scalable fashion (e.g., [4]).
Peer Selec.
Whenever this condition is not satisfied, either a receiver may not be able to maximize its overall bandwidth or resulting overlay may not be efficient.
All the above limitations are in part due to the simplicity of our framework and would adversely affect its performance.
(ii) estimating available bandwidth requires end-to-end measurement and such a  solution does not scale with the number of peers, and more importantly, (iii) given a utility function, this approach  enables any peer in the overlay to estimate relative utility of any other two peers.
This approach raises several issues: 1) the provided bandwidth to peers in each tree is limited by  minimum uplink bandwidth among upstream peers on that tree.
Each receiver only maintains  information about a fixed (and relatively small) number of promising parent peers in its local image.
More specifically, delivered quality of streaming content to each peer should be proportional to its incoming access link bandwidth.
Limitations and Challenges: The main hypothesis in our framework is that the best subset of parents for each receiver are likely to be part of its local image i.e., PD mechanism can find the best parents.
Each receiver periodically exchanges  messages (i.e., gossips) with other peers in the overlay to learn about those participating peers that are potentially good parents.
The key issue is that minimizing overall delay (global design goal) and maximizing delivered bandwidth to each peer (local design goal) could easily be in conflict.
A common approach to  accommodating bandwidth heterogeneity is to use layer  structured content (either layered or multiple description  encodings) and allow each receiver to have multiple parents.
NICE [2] leverages a hierarchal structure to achieve 1 It is worth clarifying that our design goal is different from common goals in building application-level multicast trees [7] (i.e., minimizing stretch and stress).
Overview: In PRO, each peer (or receiver) progressively searches for a subset of parents that collectively maximize delivered bandwidth and minimize overall delay from all  parents to the receiver.
(ii) Single vs Multiple Parents: A single tree structure for the overlay (where each peer has a single parent) is  inherently unable to accommodate peers with heterogeneous and asymmetric bandwidth.
43 ations in (congestion controlled) bandwidth from different senders.
P2P RECEIVER-DRIVEN OVERLAY Assumptions: We assume that each peer can estimate the relative distance between any two peers using the GNP mechanism [15].
The PD mechanism actively  participates in peer selection by identifying peers for the  local image which limits the possible choices of parents for the PS mechanism.
The collective behavior of PD and PS mechanisms at all participating peers leads to an overlay structure that achieves the above design goals.
Assume another receiver p3 selects p1 as a parent and thus competes with receiver p0 for  available bandwidth on link L1.
Suppose that L1 becomes a bottleneck and the connection between p1 to p3 obtains a significantly higher share of L1"s bandwidth than connection between p1 to p0.
PRO can gracefully accommodate bandwidth heterogeneity and asymmetry among peers since PALS is able to manage delivery of content from a group of parents with different bandwidth.
Finally, the congestion controlled bandwidth from parent peers may not provide a measurable signal to  detect a shared bottleneck when level of multiplexing is high at the bottleneck link.
However, we believe that this is a reasonable design tradeoff since simplicity is one of our key design goals.
This also implies that those solutions that build multi-parent overlay structure but do not explicitly ensure in-time delivery of individual segments (e.g., [3, 11]) may not be able to support streaming applications.
Potentially good parents for a receiver are  identified based on their relative utility for the receiver.
The PD mechanism enables each peer to learn about other  participating peers in the overlay.
Furthermore, peers may join and leave in an arbitrary fashion.
Second, the probability of  interference among different measurements grows with the number of peers in an overlay (similar to joint experiment in RLM [13]).
Furthermore, each peer knows the  incoming and outgoing bandwidth of its access link.
However, when the bottleneck is else where in the network, a receiver should select parents with a diverse set of paths (i.e., utilize different network paths).
Each receiver continuously monitors  available bandwidth from all its parents.
Solutions for constructing peer-to-peer overlays often  require two key mechanisms to be implemented at each peer: Peer Discovery (PD) and Parent Selection (PS).
Achieving these goals is particularly challenging because participating peers often exhibit heterogeneity and asymmetry in their bandwidth connectivity.
Such a subset of parents may change over time as some parents join (or leave) the overlay, or  available bandwidth from current parents significantly changes.
Note that each peer can be both receiver and parent at the same time 4 .
Toward this end, the selected parent is added to the parent list which triggers PALS to request content from this parent.
The local image at each  receiver is dynamically updated with new gossip messages as other peers join/leave the overlay.
PRO constructs a multi-parent,  unstructured overlay.
Similar to many other adaptive  mechanisms (e.g., [13]), the parent selection mechanism should  address the fundamental tradeoff between responsiveness and stability.
If the bottleneck is at the (outgoing) access links of parent peers 2 , then a receiver should simply look for more parents.
To accommodate peer bandwidth heterogeneity, we assume that the content has a layered representation.
scalability but each peer only knows about a group of  closeby peers who may not be good parents (i.e., may not provide sufficient bandwidth).
All connections are congestion controlled by senders (e.g., [17]).
Each peer can maximize its quality by participating in a proper number of trees.
In contrast, unstructured peer-to-peer networks can gracefully accommodate high churn rate [5] but require a separate peer discovery mechanism.
We present a summary of key features and limitations of PRO in the next two sections.
2) Delivered segments from different senders should arrive before their playout times despite uncorrelated  vari2 if bottleneck is at the receiver"s access link, then provided bandwidth to the receiver is already maximized.
However, estimating available bandwidth between two peers requires end-to-end measurement.
However, structured peer-to-peer networks may not be robust against high churn rate [5].
More specifically, parent peers with longer relative distance may provide higher bandwidth than close-by  parents.
Participating peers have  heterogeneous and asymmetric bandwidth connectivity.
If the available bandwidth from p1 decreases after p2 is added, the receiver can conclude that these two parents are behind the same bottleneck (i.e., link L0).
However, this is not a major  limitation since the negative impact of a shared bottleneck in these cases is minimal.
3) connections across different trees are likely to compete for available bandwidth on a single  bottleneck3 .
This approach could accommodate heterogeneity but it  introduces several new challenges.
In the next section, we explain how PRO incorporates all the above design properties.
Whenever a receiver detects such a drop in bandwidth, it waits for a random period of time (proportional to the available bandwidth) and then drops Source Peer Disc.
The congestion controlled bandwidth signals the receiver to properly reshape the overlay.
Therefore, it enables the receiver to roughly classify different parents.
In other words, with proper adjustment, the framework should work with both layered and  multipledescription encodings.
When p0 adds a new parent (p2), the receiver examines the smoothed available bandwidth from p1 and p2 and any measurable correlation between them.
pi Peer i inbwi Incoming access link BW for pi outbwi Outgoing access link BW for pi min nopi Min.
This change in available bandwidth from p1 serves as a signal for p0.
We note that paths from two parents might have some overlap that does not include any bottleneck.
No of parents for pi max nopi Max.
In the following sections, we describe the two key components of our framework in further details. 
Receiver p0 initially has only p1 as a parent.
Figure 2 shows part of an overlay to  illustrate this feature.
gossip Exam.
Table 1 summarizes our notation throughout this paper.
Figure 1 depicts the interactions between PD and PS mechanisms.
Table 1: Notation used throughout the paper Symbol Definition.
= f(delij, outbwi)).
