, θg) ∈ Θ | ∀r.θr ∈ Mt } The auction switches to phase B when all active sellers have at least one full bid in the buyer"s preferred set: ∀i.
Algorithm 1 GAI-based multiattribute auction collect a reported valuation, ˆv from the buyer set high initial prices, p1 (θr) on each level θr, and set Δ = 0 while not [SWITCH] do collect sub-bids from sellers compute Mt apply price change by [A] end while compute ηi while more than one active seller do increase Δ by collect bids on (ηi, Δ) from sellers end while implement allocation and payment to winning seller 5.4 Economic Analysis When the optimal solution to MAP (5) provides negative  welfare and sellers do not bid below their cost, the auction  terminates in phase A, no trade occurs and the auction is trivially  efficient.
In phase A, the auction adjusts prices after each round, reducing the price of every sub-configuration that has received a bid but is not in the preferred set.
[A] The RHS maximum ensures that prices do not get reduced below the buyer"s valuation in phase A.
The reason is that these are the only two configurations which are within (e + 1) = 16 of being efficient for s1 (therefore one of them must be chosen by Phase A), and both provide more than surplus over s2"s most efficient configuration (and this is sufficient in order to win in Phase B).
We need to prove that for at least one of these sub-configurations, πt b(ˆθr) < 0 to ensure activation of rule [A].
We denote the set of sub-bids submitted by si by Bt i , and the corresponding set of full bids is Bt i = {θ = (θ1, .
Let Ψ be a set of configurations, all are within δ of maximizing profit for a trader τ at the prices, and Φ defined as in Lemma 8.
We set = 8, meaning that price reduction for sub-configurations is 4.
This is true for any configuration whose profit improves,  therefore the maximal buyer profit does not change during phase A. LEMMA 13.
Sell bids and  designation of Mt (using ∗) are shown below the price of each  subconfiguration.
Given a truthful buyer and SB sellers, the  auction is (e+2) -efficient: the surplus of the final allocation is within (e + 2) of the maximal surplus.
When sellers are SB, the payment in the end of GAI auction is sell-side (e + 2) -VCG.
The auction selects the best seller (sˆi) from the preceding round, and applies the applicable case below.
The auction terminates in phase B with a final price above buyer"s valuation, pT (ηˆi) − Δ > ub(ηˆi).
Therefore bidding a1 and b1 may result in a poor allocation if the seller is outbid on b1 but left holding a1 .4 Instead of assuming full additivity, the auction designer can come up with a GAI preference structure that captures the set of common interdependencies between attributes.
Based on Phase B"s simple role as a single-dimensional bidding competition over the discount, we next assert that the overall result is efficient under SB, which in turn proves to be an approximately ex-post equilibrium strategy in the two phases.
Therefore some of the sub-configurations of ˆθ are in Mt , and WLOG we assume it is ˆθ1, .
A seller is called Straightforward Bidder (SB) if at each round t she bids on Bt i as follows: if maxθ∈Θ πt i (θ) < 0, then Bt i = ∅.
The initial prices of sub-configurations are set at some level above the buyer"s  valuations, that is, p1 (θr) > fb,r(θr) for all θr.
It is also shown by PK that the maximal regret for buyers from bidding truthfully in this  mechanism is ub(θ∗ ) − ci∗ (θ∗ ) − (ub(˜θ) − ˆc˜i(˜θ)), that is, the marginal product of the efficient seller.
We stress that each trader may have a different set of interdependencies, and therefore to be completely general the 4 If only the sellers are non-additive, the auction design could  potentially alleviate this problem by collecting a new set of bids each round and forgetting bids from previous rounds, and also guiding non-additive sellers to bid on only one level per attribute in order to avoid undesired combinations.
In order to justify the compact pricing structure we require that for any set of optimal configurations (wrt a given utility function), with a corresponding collection of sub-configurations γ, all  consistent covers in γ must be optimal configurations as well.
A value a1 for attribute a may be optimal given that the value of another attribute b is b1 , and arbitrarily suboptimal given other values of b.
Though with these numbers it is not guaranteed by Theorem 17, we expect s1 to win on either the efficient allocation or on a1 b2 c2 which provides a surplus of 39.
If the price of θj was reduced during phase A, that is pt+1 (θj) = pt (θj ) − δ, it must be the case that some w ≤ gj sub-configurations of θj are not in Mt j, and δ = w g .
Initially all configuration have the same cost (165), so sellers bid on their lowest cost  configuration which is a2 b1 c1 for both (with profit 80 to s1 and 90 to s2), and that translates to sub-bids on a2 b1 and b1 c1 .
In the worst case phase A needs to run until ∀θ ∈ Θ.πb(θ) = m. This happens for example when ∀θr ∈ I.pt (θr) = fb,r(θr) + m g .
, g} we denote the corresponding set of  subconfigurations by θμ, and define the profit from a configuration θ over the subset μ as πb(θμ) = X r∈μ (fb,r(θr) − p(θr)).
5.1 The Multiattribute Procurement Problem In the procurement setting a single buyer wishes to procure a single good, in some configuration θ ∈ Θ from one of the  candidate sellers s1, .
For compliance with the procurement literature we refer to seller si"s valuation as a cost function, denoted by ci.
In our example, a seller could submit sub-bids on a set of  subconfigurations such as a1 b1 and b1 c1 , and that combines to a full bid on a1 b1 c1 .
Since the computation tasks: Bt i = ∅, rule [SWITCH] and choice of ηi are all involving the set Bt i , it is  important to note that their performance only depend on the size of the set Bt i , since they are all subsumed by the combinatorial  optimization task over Bt i or Bt i ∩ Mt .
Since prices cannot go below fb,r(θr), an upper bound on the number of rounds required is T ≤ X θr∈I (p1 (θr) − fb,r(θr)) g However phase A may converge faster.
We  assume that the efficient allocation (θ∗ , i∗ ) provides positive welfare, that is σi∗ (θ∗ ) = πt b(θ∗ ) + πt i∗ (θ∗ ) > 0. si∗ is SB therefore she will leave the auction only when πt i∗ (θ∗ ) < 0.
In each round t < T of phase A there exists an active seller i for whom Bt i ∩ Mt = ∅.
5.5 Computation and Complexity The size of the price space maintained in the auction is equal to the total number of sub-configurations, meaning it is exponential in maxr |Ir|.
From Corollary 11 and Corollary 9, for any ˜θ, πT b (ηi) ≥ πT b (˜θ) − (e + 1) πT i (ηi) ≥ πT i (˜θ) ⇒ σi(ηi) ≥ σi(˜θ) − (e + 1) This establishes the approximate bilateral efficiency of the results of Phase A (at this point under the assumption of SB).
For example, if a and b are interdependent (meaning CDI(a, b) does not hold), we should be able to bid on the cluster ab.
While a2 b1 c2 is no longer optimal after the price change, a1 b2 c2 remains optimal on subsequent rounds because b2 c2 ∈ Mt , and the price change of a1 b2 affects both a1 b2 c2 and the efficient configuration a1 b2 c1 .
The multiattribute allocation problem (MAP) [19] is the welfare optimization problem in procurement over a discrete domain, and it is defined as: i∗ , θ∗ = arg max i,θ (ub(θ) − ci(θ)).
Now (round 2) their prices go down,  reducing the profit on a1 b2 c2 to 66 and therefore in round 3 s1 prefers a2 b1 c2 (profit 67).
The buyer profit from a configuration θ is defined as7 πb(θ) = ub(θ) − p(θ) and similarly πi(θ) = p(θ) − ci(θ) is the profit of si.
The auction proceeds in two phases.
If sellers si and sj are SB, and si is active at least as long as sj is active in phase B, then σi(ηi) ≥ max θ∈Θ σj(θ) − (e + 2) .
The function σi : Θ → R represents the welfare, or surplus  function ub(·) − ci(·).
Sell-side δ-VCG payment for MAP is a  payment p such that V CG(ˆub, ˆci) − δ ≤ p ≤ V CG(ˆub, ˆci) + δ.
Mt j = {θr | πt b(θj) ≥ max θj ∈Θj πt b(θj ) − gj g , r ∈ Gj } Then define Mt = Sh j=1 Mt j.
In round 15, Δ = 48 meaning p15 (a1 b1 c1 ) = 85 and that causes s2 to drop out, setting the final allocation to (s1, a1 b2 c1 ) and p15 (a1 b2 c1 ) = 157 − 48 = 109.
Otherwise let Ωt i ⊆ arg max θ∈Θ πt i (θ) Bt i = {θr | θ ∈ Ωt i, r ∈ {1, .
One extreme is to choose p1 (θr) = 234 I1 I2 a1 b1 a2 b1 a1 b2 a2 b2 b1 c1 b2 c1 b1 c2 b2 c2 fb 65 50 55 70 50 85 60 75 f1 35 20 30 70 65 65 70 61 f2 35 20 25 25 55 110 70 95 Table 1: GAI utility functions for the example domain.
At this point s1 has a full bid (in fact two full bids: a1 b2 c2 and a1 b2 c1 ) in M5 , and I1 I2 t a1b1 a2b1 a1b2 a2b2 b1c1 b2c1 b1c2 b2c2 1 75 75 75 75 90 90 90 90 s1, s2 ∗ s1, s2 ∗ 2 75 71 75 75 86 90 90 90 s2 s1 ∗ s2 ∗ s1 3 75 67 71 75 82 90 90 86 s1, s2 ∗ s2 ∗ s1 ∗ 4 75 63 71 75 78 90 86 86 s2 s1 ∗ s2 ∗, s1 ∗, s1 5 75 59 67 75 74 90 86 86 s2 ∗, s1 ∗ s2 ∗, s1 ∗, s1 6 71 59 67 75 70 90 86 86 s2 ∗, s1 ∗ ∗, s1 s2 ∗, s1 7 71 55 67 75 70 90 82 86 s2 ∗, s1 ∗ s2 ∗, s1 ∗, s1 8 67 55 67 75 66 90 82 86 ∗ s2 ∗, s1 ∗ ∗ ∗, s1 s2 ∗, s1 9 67 51 67 75 66 90 78 86 ∗, s2 ∗, s1 ∗ ∗, s2 ∗, s1 ∗, s1 Table 2: Auction progression in phase A.
Lemmas 12 through 15 show that through the price system, the choice of buyer preferred configurations, and price change rules, Phase A leads the buyer and each of the sellers to their mutually efficient configuration.
(5) To illustrate the need for a GAI price space we consider the case of traders with non-additive preferences bidding in an additive price space such as in PK"s auction AD.
The set of full bids of a seller contains all consistent covers that can be generated from that seller"s current set of sub-bids.
We set the initial prices are high such that maxθ∈Θ π1 b (θ) < 0, and by Lemma 12 maxθ∈Θ πt b(θ) < 0 during phase A.
The existence of a full bid over a configuration θ represents the seller"s willingness to accept the price pt (θ) for supplying θ.
In the first phase (A), at each round t the auction computes a set of preferred  sub-configurations Mt .
For simplicity we assume that for any θr, π1 b (θr) is some product of g (that can be easily done), and that ensures that πt b(ˆθr) = 0 because once profit hits 0 it cannot increase by rule [A].
The auction has the dynamics of a descending clock auction: at each round t, bids are collected for current prices and then prices are reduced according to price rules.
These configurations stay optimal for another round (5), with profit 62.
Let the initial negative profit chosen by the auctioneer be m = maxθ∈Θ π1 b (θ).
To be in Mt these k sub-configurations must have been in some preferred full configuration, meaning there exists θ ∈ Mt such that θ = (ˆθ1, .
Under GAI, the buyer"s value function ub and sellers" cost functions ci can be decomposed as in (1).
When phase A ends B10 1 ∩ M10 = {a1 b2 c2 } so the auction  terminates with the slightly suboptimal configuration and surplus 40. 
This bound is tight, that is for any GAI tree and a non-trivial domain we can construct a set Ψ as above in which there exists a consistent cover whose utility is exactly δg below the maximal.
Proof sketch (full proof in the online appendix): A source of an  element θr is a configuration ˜θ ∈ Ψ from which it originated  (meaning, ˜θr = θr).
At each θj we flip the value of a set of sub-configurations μj corresponding to a subtree, with the sub-configurations of the configuration ˆθj ∈ Ψ which is the source of the parent γj of μj .
In the  onesided multiattribute VCG auction, buyer and sellers report  valuation and cost functions ˆub, ˆci, and the buyer pays the sell-side VCG payment to the winning seller.
In that case, in round 3 the configuration a1 b2 c2 provides the same profit (67) as a2 b1 c2 , and s1 bids on both.
Since this is equivalent to price-only auctions, the concern is only with the time complexity of phase A.
After the next price change the configurations a1 b2 c1 and a1 b2 c2 both become optimal (profit 66), and the  subbids a1 b2 , b2 c1 and b2 c2 capture the two.
One of the benefits of the compact pricing structure is the  compact representation it lends for bids: sellers submit only sub-bids, and therefore the number of them submitted and stored per seller is bounded by |I|.
We show a similar result, and therefore define δ-VCG payments.
The price of a  configuration θ at time t is defined as pt (θ) = g X r=1 pt (θr) − Δ.
For example, consider the procurement of a good with three attributes, a, b, c. Each attribute"s domain has two values (e.g., {a1 , a2 } is the domain of A).
The first purpose of this sub-section is to show that the complexity of all the computations required for the auction depends only on |I|, i.e., no computation depends on the size of the full exponential domain.
5.2 GAI Trees Assume that preferences of all traders are reflected in a GAI structure I1, .
Specifically, the phase A price change rule is applied to all θr ∈ Sn i=1 Bt i \ Mt : pt+1 (θr) ← max(pt (θr) − g , fb,r(θr)).
The sell-side VCG payment is V CG(ˆub, ˆci) = ˆub(θ∗ ) − (ˆub(˜θ) − ˆc˜i(˜θ)).
This is the ideal situation, where the auction allocates the chosen configuration and seller at this resulting price.
At the start of the auction, the buyer reports (to the auction, not to sellers) her complete valuation in GAI form.
The sub-configurations α and β are consistent if for any attribute aj ∈ Ir ∩ Ir , α and β agree on the value of aj.
The definition of Mt j ensures πt b(θj ) < max θ∈Θ πt b(θj) − gj g .
At this point, the auction selects the buyer-optimal full bid ηi for each seller si.
LEMMA 12. maxθ∈Θ πt b(θ) does not change in any round t of phase A.
Let Ψ be a set of configurations, all maximizing profit for a trader τ (seller or buyer) at the relevant prices.
6 The discount term could be replaced with a uniform price  reduction across all sub-configurations.
Intuitively, an SB seller follows a myopic best response strategy (MBR), meaning they bid myopically rather than strategically by optimizing their profit with respect to current prices.
The auction terminates in phase B with a final price pT (ηˆi)− Δ ≤ ub(ηˆi).
For connected GAI trees, Mt is the set of sub-configurations that are part of a configuration within of optimal.
(6) In phase B, si may bid only on ηi.
We use fb,r and fi,r to denote the local functions of buyer and sellers (respectively), according to (4).
Since combinations of sub-bids from different rounds can yield sub-optimal configurations, each sub-bid should be tagged with the number of the latest round in which it was  submitted, and only consistent combinations from the same round are considered to be full bids.
In general, the closer the initial prices reflect buyer valuation, the faster phase A converges.
After the price change, s1 has higher profit (74) on a1 b2 c2 and she therefore bids on a1 b2 and b2 c2 .
This contradicts Lemma 12 since we set high initial prices.
On the other extreme, if the GAI network is connected then e+1 = g. We also note that without assuming any preference structure, meaning that the CDI map is fully connected, g = 1 and the efficiency loss is again .
Here,  subconfigurations are assignments of the form a1 b1 , a1 b2 , b1 c1 , and so on.
Phase B is a one-dimensional competition over the surplus that remaining seller candidates can provide to the buyer.
5.3 The GAI Auction We define an iterative multiattribute auction that maintains a GAI pricing structure: that is, a price pt (·) corresponding to each  subconfiguration of each GAI-tree element.
That would make phase A redundant, at the cost of full initial revelation of buyer"s valuation as done in other  mechanisms discussed below.
We use θr to denote the  subconfiguration formed by projecting configuration θ to element Ir.
It takes four more rounds for s2 and Mt to converge (M10 ∩B10 2 = {a1 b1 c1 }).
To ensure this (see Lemmas 8 and 10), we assume a GAI decomposition in the form of a tree or a forest (the GAI tree).
Next, we analyze the number of rounds it takes for the auction to terminate.
We use θj to denote the projection of a configuration θ on the tree Gj , and gj denotes the number of GAI elements in Gj .
We show that all θj are  consistent and that they must all be suboptimal as well, and since all elements of θL have a mutual source, meaning θL = ˆθL ∈ Ψ, it contradicts optimality of Ψ. COROLLARY 9.
The prices of sub-configurations are fixed at pT (·) during this phase.
This can happen only when πt b(θ∗ ) > 0, therefore si∗ does not drop in phase A hence the auction cannot terminate before reaching  condition [SWITCH].
231 Bidders submit sub-bids on sub-configurations and on an  additional global discount term Δ.6 Sub-bids are always submitted for current prices, and need to be resubmitted at each round, therefore they do not need to explicitly carry the price.
The auction returns with no allocation.
The buyer has some private valuation function (wtp) ub : Θ → R, and similarly each seller si has a private valuation function (willingness-to-accept).
For SB seller si, ∀t, ∀θ ∈ Bt i , πt i (θ ) = max θ∈Θ πt i (θ).
SB is an (3e + 5) ex-post Nash Equilibrium for sellers in GAI auction.
With this implementation sellers need not resubmit their bid until a price of at least one sub-configuration has changed.
Since Mt grows monotonically with t, a naive application of optimization algorithm to generate the best outcomes sequentially might end up enumerating significant portions of the fully exponential domain.
The set of sub-configurations {a1 b1 , b1 c1 } is a consistent cover, corresponding to the configuration a1 b1 c1 .
We therefore assume throughout the analysis that the optimal (seller,configuration) pair provides non-negative welfare.
After round 9 the auction sets η1 = a1 b2 c1 (which yields more buyer profit than a1 b2 c2 ) and η2 = a1 b1 c1 .
∀θ ∈ Mt , πt b(θ ) ≥ max θ∈Θ πt b(θ) − (e + 1) In the fully additive case this loss of efficiency reduces to .
The efficient allocation is (s1, a1 b2 c1 ) with a surplus of 45.
232 Since we do not assume anything about the buyer"s strategy, the analysis refers to profit and surplus with respect to the face value of the buyer"s report.
To  calculate Bt i sellers need to optimize their current profit function, as  discussed in Section 4.2.
If ∀r.ˆθr ∈ Mt , then ˆθ ∈ Mt by definition of Mt .
The optimal values for disconnected components are independent of each other hence if the maximal profit for each component does not change the combined maximal profit does not change as well.
When the solution to MAP provides positive  surplus, and at least the best seller is SB, the auction must reach phase B.
This is still better than a general pricing structure that solicits bids for the cluster abc.
fb  represents the buyer"s valuation, and f1 and f2 costs of the sellers s1 and s2.
The collection is called a cover if it contains  exactly one sub-configuration αr corresponding to each element Ir, r ∈ {1, .
Therefore, πt+1 b (θ ) = πt (θ ) + δ = πt (θ ) + w g ≤ max θ∈Θ πt b(θj).
This is also equivalent to the tree-width (plus one) of the original CDI-map.
7 We drop the t superscript in generic statements involving price and profit functions, understanding that all usage is with respect to the (currently) applicable prices.
Table 2 shows the progress of phase A.
A simple change can be made to avoid much of the redundant communication: the auction can retain sub-bids from previous rounds on sub-configurations whose price did not change.
A tree structure can be achieved for any set of CDI conditions by triangulation of the CDI-map prior to construction of the clique graph (GAI networks and GAI trees are defined by Gonzales and Perny [14], who also provide a triangulation algorithm).
Next we consider combinations of configurations that are only within some δ of optimality.
For the purpose of the computational analysis let dj denote the domain of attribute aj, and I = Sg r=1 Q j∈Ir dj, the collection of all sub-configurations.
, g}, πt b(θr) > 0  contradicting rule [A].
The maximal surplus of the second best seller, s2, is 25, achieved by a1 b1 c1 , a2 b1 c1 , and a2 b2 c2 .
The only adjustment in phase B is to Δ, which is increased in every round by .
If the buyer"s preferences are not additive, choosing preferred levels per attribute (as in auction AD) admits undesired combinations and fails to guide the sellers to the efficient configurations.
Assume for contradiction that for any ˆθr ∈ ¯Mt , πt b(ˆθr) ≥ 0.
To illustrate how some efficiency loss could occur consider the case that c1(b2 c2 ) = 60.
Since Bt i ∩ Mt = ∅, clearly ηi ∈ Mt .
For any price system p, σi(θ) = πb(θ) + πi(θ).
M1 contains the sub-configurations a2 b2 and b2 c1 of the highest value configuration a2 b2 c1 .
The following lemma bridges the apparent gap between the  compact pricing and bid structure and the global optimization performed by the traders.
therefore she no longer changes her bids since the price of her  optimal configurations does not decrease.
In the example below the choice of a lower initial price for the domain of I1 provides some speedup by revealing a harmless amount of information.
Let be the prespecified price increment parameter.
The overall auction is described by high-level pseudocode in  Algorithm 1.
Rule [A] sets a lower bound on all prices therefore the auction either terminates in phase A or must reach condition [SWITCH].
Between this option and the other extreme, which is ∀α, ˆα ∈ I, p1 (α) = p1 (ˆα) the auctioneer has a range of choices to determine the right tradeoff between convergence time and information revelation.
If traders could bid on  clusters of interdependent attributes, it would solve the problems  discussed above.
It is well-known that truthful bidding is a dominant strategy for sellers in the one-sided VCG auction.
We call each Ir a GAI element, and any  assignment to Ir a sub-configuration.
Phase B requires maxi=1,...n πT i (ηi)1 .
s2 sticks to a2 b1 c1 during the first four rounds, switching to a1 b1 c1 in round 5.
Price is therefore decreased on a2 b1 and b1 c1 .
ηi is chosen to maximize the buyer"s surplus out of Bt i at the end of phase A.
We prove the lemma per each tree Gj.
Crucially, for any μ and its  complement ¯μ and for any trader τ, πτ (θ) = πτ (θμ) + πτ (θ¯μ).
ηi = arg max θ∈BT i (ub(θ) − pT (θ)).
For SB seller si, ηi is (e + 1) -efficient.
For the next round (10) Δ = 8, increased by 8 for each subsequent round.
In round t > 1, only sellers who where active in round t − 1 are  allowed to participate, and the auction terminates when no more than a single seller is active.
That leaves the buyer with a profit of 31 and s1 with a profit of 14, less than below the VCG profit 20.
Let Φ = {θr | θ ∈ Ψ, r ∈ {1, .
, θg) Since ˆθ /∈ Mt It must be that case that πt b(ˆθ) < πt b(θ ).
In practice, however, sellers are unlikely to have the information that would let them exploit that potential gain.
In contrast, the set {a1 b1 , b2 c1 } is inconsistent.
We set all initial prices over I1 to 75, and all initial prices over I2 to 90.
πi(θμ) is defined similarly for si.
Then any consistent cover in Φ is within δg of maximizing utility for τ.
When payment is guaranteed to be δ-VCG sellers can only affect their payment within that range, therefore their gain by falsely  reporting their cost is bounded by 2δ.
By Lemma 13 prices must go down in every round of phase A.
[SWITCH] Let T be the round at which [SWITCH] becomes true.
As explained in Section 5.4, the role of phase A is to guide the traders to their efficient configurations.
Let (θ∗ , i∗ ) be the optimal solution to MAP.
Usually in iterative auctions the VCG outcome is only nearly achieved, but the deviation is bounded by the minimal price change.
The functions πi and σi refer to the true cost functions of si.
Note that p9 (a1 b1 c1 ) = 133, and c2(a1 b1 c1 ) = 90, therefore πT 2 (η2) = 43.
A seller is considered active in a round if she submits at least one full bid.
Following PK, we rely on an equivalence to the one-sided VCG auction to establish incentive properties for the sellers.
Let Mt denote the set of configurations that are consistent covers in Mt : Mt = {θ = (θ1, .
Therefore πt b(θk+1, .
The price of at least one sub-configuration must be reduced at every round in phase A.
The discount Δ is initialized to zero.
Moreover, the total time spent on this task throughout the auction is O(|I|(|I| + T)).
When the GAI tree is in fact a forest, we apportion the error proportionally across the disconnected trees.
Therefore there must be ˆθr ∈ Mt .
ya yb    yc Z Z Z (i)   ¨ ©a, b   ¨ ©b, c (ii) Figure 1: (i) CDI map for {a, b, c}, reflecting the single  condition CDI(a, c).
The sellers need to send their bids over and over again at each round.
Then any consistent cover in Φ is also a profit-maximizing configuration for τ.
The welfare achieved in this case is optimal.
Non-additive sellers face an exposure problem, somewhat analogous to traders with complementary  preferences that participate in simultaneous auctions.
All sellers drop out in phase A (i.e., before rule [SWITCH] holds).
, ˆθg) = 0 Hence for at least one r ∈ {k + 1, .
The auction offers the winner sˆi an opportunity to supply ηˆi at price ub(ηˆi).
Next we formally define Mt .
Let (˜θ,˜i) be the best solution to MAP when i∗ does not participate.
Starting from the supposedly suboptimal cover θ1 , we build a series of covers θ1 , .
The auction  terminates when at most one seller (if exactly one, designate it sˆi) is active.
However to be active in round t, Bt i = ∅.
That is, sellers cannot gain more than (3e + 5) by deviating.
Table 1 shows the GAI utilities for the buyer and the two sellers s1, s2.
Bt i = ∅ ∨ Bt i ∩ Mt = ∅.
All active sellers drop out in the same round in phase B.
If b in turn depends on c, we need another cluster bc.
As shown below, this connectivity parameter is an important factor in the performance of the auction.
A collection ν of sub-configurations is consistent if all pairs α, β ∈ ν are consistent.
, θg) > πt b(ˆθk+1, .
, αg} represents a full  configuration, which we denote by (α1, .
If ˆθr ∈ ¯Mt , ∀r = 1, .
That ensures that all elements in μj ∪ {γj} have a mutual source ˆθj .
5.6 Example We use the example settings introduced in Section 5.2.
They are much more likely to lose from bidding on their less attractive configurations.
, g then πt b(ˆθ) = 0.
We are first concerned with the computation of Mt .
A GAI network is a graph G whose nodes correspond to the GAI elements I1, .
, Ig, with an edge between Ir, Ir iff Ir ∩ Ir = ∅.
Let ej = gj −1 denote the number of edges in Gj .
fb,r(θr) + m g .
5 We relax this requirement in Section 6.
Let α be an assignment to Ir and β an  assignment to Ir .
GAI structure needs to account for all.5 However, in practice many domains have natural dependencies that are mutual to traders.
Another potential concern is the communication cost associated with the Japanese auction style.
Section 5.4 shows how to define Mt to ensure  convergence, and Section 5.5 shows how to efficiently compute it.
, θg) ∈ Θ | ∀r.θr ∈ Bt i }.
There are four distinct cases: 1.
Let G be comprised of trees G1, .
Recall that the GAI structure is I1 = {a, b}, I2 = {b, c} (note that e = 1).
In Section 5.5 we discuss the computational tasks associated with the auction, and Section 5.6 provides a detailed example.
Let the GAI structure be I1 = {a, b}, I2 = {b, c}.
Equivalently, a GAI network is the clique graph of a CDI-map.
Let ˆθ ∈ Bt i .
We define the connectivity parameter, e = maxj=1,...,h ej .
Figure 1 shows the simple CDI map and the corresponding GAI network, which is a GAI tree.
The computation of Mt can be done in time O(|I|2 ).
The bounds are in practice significantly lower, based on results on similar problems from the probabilistic reasoning literature [18].
In  addition, for μ ⊆ {1, .
(ii) The corresponding GAI network.
Note that a consistent cover {α1, .
LEMMA 10.
DEFINITION 9.
LEMMA 8.
LEMMA 18.
However as shown below this plain enumeration can be avoided.
LEMMA 15.
233 LEMMA 14.
PROPOSITION 20.
COROLLARY 11.
DEFINITION 10.
LEMMA 16.
DEFINITION 11.
THEOREM 19.
THEOREM 17.
DEFINITION 12.
, ˆθk, θk+1, .
