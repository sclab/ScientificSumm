However, these results are premature at present for two reasons: (1) They are generated via simulation of hikers walking at random; and (2) It is not clear what impact the erasing of witness records has on the accuracy of inferred location/hot search areas of lost hikers.
Similarly, the witness records  generated by 1 at record times 10, 15 and 16 (see Table 1) have all been generated due a single contact between access point A and node 1.
Figure 15 shows the trails that hikers 1, 2, 3, 4 and 5 took, along with the encounter points obtained from witness records collected at the control center.
This has happened because these witness records were generate by hiker 2 during his encounter with 1 at time 15 and 16.
The goal of this experiment is to illustrate that  CenWits can deduce the trail a hiker takes by processing witness information.
The number of hikers in this simulation was 10 and the number of access points was 5.
Until this time, hiker 2 hadn"t come in contact with any location points.
Hiker 1 takes a trail that goes along  access points A and B, while hiker 3 takes trail that goes along access points C and B. Hiker 2 takes a trail that does not come in the range of any access points.
Figure 16: Identifying Hot Search Area Experiment (with hiker 6) 6.2 Results of Power and Memory  Management The witness information shown in Tables 1, 2 and 3 has not been filtered using the three criteria described in  Section 4.1.
To evaluate the impact of these criteria, we simulated  CenWits to generate a significantly large number of records for a given number of hikers and access points.
In fact, the last two records in Table 3 have (?,?)
The X,Y locations in this table  correspond to the location information provided by access points A, B, and C. A is located at (12,7), B is located at (31,17) and C is located at (12,23).
Figure 14: Indirect Inference Experiment Node Id Record (X,Y) Location Hop Time Time Count 2 16 (12,7) 6 0 2 15 (12,7) 6 0 1 4 (12,7) 4 0 1 6 (12,7) 6 0 1 29 (31,17) 29 0 1 31 (31,17) 31 0 Table 2: Witness information collected from hiker 1 in indirect inference experiment.
For example, they can reduce MAX MIN MAX # of RECORD RECORD HOP Witness COUNT GAP COUNT Records 5 5 5 628 4 5 5 421 3 5 5 316 5 10 5 311 5 20 5 207 5 5 4 462 5 5 3 341 3 20 3 161 Table 4: Impact of memory management techniques.
For example, when hikers 1 and 2 meet at time 16, the last recorded location time of Node Id Record (X,Y) Location Hop Time Time Count 3 78 (12,23) 78 0 3 107 (31,17) 107 0 3 106 (31,17) 106 0 3 76 (12,23) 76 0 3 79 (12,23) 79 0 2 94 (12,23) 79 0 1 16 (?,?)
Three encounter points  (between hiker 1 and the three access points) extracted from 188 this witness information are shown in Figure 13 (shown in rectangular boxes).
For example, the witness records generated by 3 at record times 76, 78 and 79 (see Table 3) have all been  generated due a single contact between access point C and node 3.
Interestingly, a more accurate location information of 1 and 2 encounter or 2 and 3 encounter can be computed by process the witness information at the control center.
This experiment is designed to illustrate that the location,  direction and speed of a hiker can be inferred by CenWits, even if the hiker never comes in the range of any access point.
Using this information, we can infer the direction in which hiker 1 was moving and speed at which he was moving.
In all these experiments, there are three access points (A, B and C) where nodes dump their witness information.
It is a very simple experiment in which a single hiker starts from A, goes to B and then C, and finally returns to A (See Figure 13).
Thus (18,10) is a more accurate location of encounter between 1 and 2.
Again, by applying the record gap criteria, two of these three records will be erased.
For example, the location time in some witness records is not the same as the record time.
To determine the hot search areas, the witness records of hiker 6 are processed to determine the trail he is most likely on, the speed at which he had been moving, direction in which he had been moving, and his last known location.
Part of the witness information collected at the control center is shown in Table 1.
We generated  witness records by having the hikers walk randomly.
Figure 15: Identifying Hot Search Area Experiment (without hiker 6) 189 Now suppose hiker 6 is reported missing at time 260.
So, node 1 generates a witness record with record time 16, location (12,7) and location time 6.
Figure 13: Direct Contact Experiment Node Id Record (X,Y) Location Hop Time Time Count 1 15 (12,7) 15 0 1 33 (31,17) 33 0 1 46 (12,23) 46 0 1 10 (12,7) 10 0 1 48 (12,23) 48 0 1 16 (12,7) 16 0 1 34 (31,17) 34 0 Table 1: Witness information collected in the direct contact experiment.
The hiking trail taken by hiker 6 as inferred by CenWits is shown by a dotted line and the hot search areas identified by CenWits are shown by dark lines inside the dotted circle in Figure 16.
By applying the record gap criteria, two of these three records will be erased.
The number of witness records  reported in this table is an average number of witness records a sensor node stored at the time of dump to an access point.
We first show how  CenWits can be used to determine the hiking trail a hiker is most likely on and the speed at which he is hiking, and identify hot search areas in case he is reported missing.
For brevity, we have not shown the entire witness information collected at the control center.
Assuming a constant hiking speed and a relatively straight-line hike, it can be computed that at time 16, hiker 1 must have been at location (18,10).
This information is available at http://csel.cs.colorado.edu/∼huangjh/Cenwits/index.htm.
In this experiment, there are three hikers, 1, 2 and 3.
When a node starts up, it stores its current location and emits a beacon  periodicallyin the prototype, a node emits a beacon every minute.
1 Table 3: Witness information collected from hiker 3 in indirect inference experiment.
6.1 Locating Lost Hikers The first experiment is called Direct Contact.
We applied the three criteria to measure the amount of memory savings in a sensor node.
Furthermore, given a map of hiking trails in this area, it is clearly possible to identify the hiking trail that hiker 1 took.
This means that the node that generated that record did not have its most up-to-date location at the encounter time.
There are some interesting data in these tables.
Part of the witness information collected at the control center from access points A, B and C is shown in Tables 2 and 3.
However, this hiker meets hiker 1 and 3 during his hike.
Finally, our third experiment called Identifying Hot Search Areas is designed to determine the trail a hiker has taken and identify hot search areas for rescue after he is reported missing.
Next, we show the results of power and memory management  techniques of CenWits in conserving power and memory of a sensor node in one of our experiments.
The witness information dumped at the three access points was then collected and processed at a control center.
We have implemented a prototype of CenWits on MICA2 sensor 900MHz running Mantis OS 0.9.1b.
There are six hikers (1, 2, 3, 4, 5 and 6) in this experiment.
It took 25 units of time for hiker 1 to go from A (12,7) to B (31,17).
It illustrates the importance of witness information in search and rescue applications.
hiker 1 is (12,7) recorded at time 6.
Our experiments did not generate enough data to test the impact of record count or hop count criteria.
as their location.
A detailed report on these experiments with the raw data collected and photographs of hikers, access points etc.
These results show that the three memory management criteria significantly reduces the memory consumption of sensor nodes in CenWits.
For example, A,1 at 16 means 1 came in contact with A at time 16.
We have conducted a number of experiments with this prototype.
Based on this information and the hiking trail map, hot search areas are identified.
Here we report results from three of them.
A witness record is 16 bytes long.
These access points also provide location information to the nodes that come with in their range.
This is illustrated in Figure 14.
The results are shown in Table 4.
The second experiment is called Indirect Inference.
the memory consumption by up to 75%.
SiRF has a rich command set, but we record only X and Y coordinates.
One of the sensor is equipped with MTS420CA GPS module, which is capable of barometric pressure and two-axis acceleration sensing in addition to GPS location tracking.
is available at http://csel.cs.colorado.edu/∼huangjh/ Cenwits.index.htm.
In our future work, we plan to undertake a major study to address these two concerns. 
We use SiRF, the serial communication protocol, to control GPS module.
1 1 15 (?,?)
