In this paper, we propose PackageBLAST, an adaptive multi-policy grid service to run BLAST searches in grids composed by segmented genetic databases.
The choice of the best allocation policy depends on the application access pattern and on the environment in which it runs [13].
Section 2 presents the sequence comparison problem and the BLAST algorithm.
SW [14] is an exact algorithm that finds the best local alignment between two sequences of size n in quadratic time and space.
As far as we know, this is the first grid service that runs BLAST with multiple task policies with a segmented database in a heterogeneous non-dedicated platform.
This led to the idea of grid computing, which involves  cooperative and secure sharing of non-dedicated and  heterogeneous resources that are geographically distributed [5].
Section 3 describes allocation policies for grids.
Resource scheduling is one of the most important  components of a grid system.
PackageBLAST executes on Globus 3 [4] and, by now, provides five allocation policies.
This paper is organized as follows.
Biological sequence comparison (or sequence alignment) is one of the most important problems in computational  biology, given the number and diversity of the sequences and the frequency on which it is needed to be solved daily.
Also, we propose an adaptive mechanism to assign weights to the grid nodes, taking into account their current workload.
In order to schedule master/slave applications many task allocation policies were proposed such as Self Scheduling [15] and FAC2 [8].
In genome projects, the size of the sequences to be compared is constantly increasing, thus an O(n2 ) solution is expensive.
For this reason, heuristics like BLAST [3] were proposed to reduce execution time.
The choice of the best resources for a particular application is called task allocation, which is an NP-Complete problem.
Section 5 presents the design of PackageBLAST.
Grid applications usually do not have high communication rates and many of them follow the master/slave model [13].
Experimental results are discussed in  section 6.
Section 7 concludes the paper. 
The popularity of the Internet made possible the  interconnection of millions of powerful machines in a global scale.
Section 4 discusses related work.
