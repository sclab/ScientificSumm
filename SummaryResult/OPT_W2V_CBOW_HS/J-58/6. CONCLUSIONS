In this paper, we have studied how to design a truthful  mechanism M = (O, P) for a given allocation rule O for a binary demand game.
Towards this research direction, Theorem 4 can be extended to a general  allocation rule O, whose range is R+ .
We first showed that the allocation rule O  satisfying the MP is a necessary and sufficient condition for a truthful mechanism M to exist.
We point out here that the goal of this paper is not to design a better allocation rule for a  problem, but to design an algorithm to compute the payments efficiently when O is given.
It would be of interest to design algorithms to compute P in optimal time.
For this problem, a truthful payment scheme P exists for an allocation rule O if and only if the workload assigned by O is monotonic in a certain manner.
Another research direction is to design an approximation  allocation rule O satisfying MP with a good approximation ratio for a given binary demand game.
In this paper, we have studied mechanism design for binary  demand games.
We then formulate a general framework for designing payment P such that the mechanism M = (O, P) is truthful and computable in polynomial time.
Acknowledgements We would like to thank Rakesh Vohra, Tuomas Sandholm, and anonymous reviewers for helpful comments and discussions. 
We further presented several general composition-based techniques to compute P  efficiently for various allocation rules O.
The remaining difficulty is then how to compute the payment P under mild assumptions about the valuations if a truthful mechanism M = (O, P) does exist.
It wound be of interest to generalize our framework for designing a truthful payment scheme for a binary demand game to non-binary demand games.
In this paper, we have concentrated on how to compute P in polynomial time.
It would be of significance to design allocation rules with good approximation ratios such that a given binary  demand game has a computationally efficient payment scheme.
Our algorithms do not necessarily have the  optimal running time for computing P given O.
Several concrete examples were discussed to demonstrate our general framework for  designing P and for composition-based techniques of computing P in polynomial time.
We have made some progress in this research direction in [22] by providing an  algorithm to compute the payments for unicast in a node weighted graph in optimal O(n log n + m) time.
However, some problems cannot be directly  formulated as binary demand games.
Many works [12, 13] in the mechanism design literature are in this direction.
The job scheduling problem in [2] is such an example.
