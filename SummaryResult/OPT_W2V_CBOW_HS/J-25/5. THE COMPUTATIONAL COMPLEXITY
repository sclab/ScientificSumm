5.4.4 Reducing to clauses of at most 2 variables If we allow securities to have variable payoffs and prices, we can reduce to the case where each security"s payoff clause is a conjunction of at most 2 variables or their negations.
Given that zi is true and ni = ¯xi (without loss of generality), it follows from the construction of SC that the setting of the yis causes SC to pay off iff it satisfies C. This establishes the reduction from T∃∀BF to the matching problem, when the securities are constrained to be a conjunction of polynomially many base events or their negations.
If only one security is bought, then the adversary can always set w so that it won"t pay off; hence the auctioneer will buy either both or neither, for a total cost of c (here we use the fact that one is only allowed to buy either 0 or 1 shares of each security).
If one doesn"t buy Sr−1, the adversary can set all w to false, in which case none of the new clauses will pay off, regardless of the value of xi and Q.
If the formula φ is satisfiable then there is some state with payoff 0.5 and no fractional unit of the security φ is a matching.
So buying all of the replacement securities for each is equivalent to buying the original security for r. It remains to show that buying a proper, nonempty  subset of the securities is irrational.
Each expensive security forces the adversary to set some variable, xi to a particular value to prevent the security from paying off; this corresponds to setting the xi variables in the original game.
One can ensure that all of the payoff clauses have exactly 3 variables, with a similar construction.
As no auctioneer can buy more than n expensive securities, it must therefore buy exactly one of (¯xi ∧ Q) or (¯ni ∧ Q), for each i, 1 ≤ i ≤ n. For the rest of the analysis, we assume that the auctioneer follows this constraint.
Similarly, if the buyer buys (¯ni ∧ Q), then the adversary must set ni and zi to be true, and we can assume without loss of generality that the adversary sets xi to be false.
By Observation 2, if one buys all the S securities, one is guaranteed to almost make back ones investment (except for 2), in which case by Observations 3 and 4, the adversaries optimal strategy is to make exactly one of w1, w2 or w3 true.
We note that in the basic construction, all of the clauses with more than 3 variables are associated with cheap  securities (cost ).
The securities both have payoff p, and their costs can be any positive values that sum to c. Note that at most one of the securities can pay off at a time.
We can view the 0 − 1-matching problem as one in which the auctioneer is a buyer who buys securities corresponding to disjunctions of the base events, and then the adversary sets the values of the base events to minimize the payoff from the securities.
First, in both cases, the cost is c. If the adversary makes X, Y and Z true, then S pays off 1, and (assuming that exactly one of w1, w2 and w3 is true), exactly one of S1, S2 or S3 will pay off 1.
Setting > 0 will also allow us to show hardness results for the case where all securities have the same cost.
• Security ψj is true only in state s. • Security τ is true in each state ek but not r or s. We have buy orders on each φi and ψj security for 0.5 − 1 8q and a buy order on τ for 0.5.
Finally, we have a cheap security with payoff clause ( ¯Q).
These hardness results hold even if there is a promise that no subset of the securities guarantees a worst-case payoff identical to their cost.
If one doesn"t buy S , then the adversary can set the w variables so that none of S1, .
, ψq and τ , as follows: • Security φi is true in state r, and is true in state ek if k is not in ci.
150 We note that the existence of a matching is in Σp 2: We use y to choose a subset of the orders and z to represent a state ω with (x, y, z) in A if the set of orders has a total nonpositive auctioneer"s payoff in state ω.
To show that matching is NP-complete we reduce the  NPcomplete problem EXACT COVER BY 3-SETS (X3C) to a matching of securities.
We will show that computing a matching is Σp 2-complete, and remains so even for quite restricted types of securities, and hence is (likely) neither in NP or co-NP.
Given a security s with payoff clause (X ∧ Y ∧ Z), cost c and payoff 1, we introduce fresh auxiliary variables, w1, w2 and w3 (new variables are used for each clause) and replace S with the following securities: • Securities S1, S2 and S3, each with cost c/3 and payoff 1, with respective payoff clauses (X ∧ w1), (Y ∧ w2) and (Z ∧ w3).
That is, one can buy n expensive securities and all of the cheap securities for less than 1, but one cannot buy n + 1 expensive securities for less than 1.
The number of securities.
We can get around this problem by adding auxiliary base securities, A and B, and defining two securities τ = (φ ∧ A) ∨ (A ∧ B) τ = (φ ∧ A) ∨ (A ∧ B) with separate buy orders of 0.5 on each.
Clearly, buying none of S1, S2 and S3 has, up to negligible 2 factors, the same price/payoff behavior as not buying S. We next argue that, subject to the established constraints put on the players" behaviors, buying all of S1, S2 and S3 has the same price/payoff behavior (again ignoring 2 factors) as buying S, regardless of how the adversary sets X, Y and Z.
Here n refers to the problem"s input size that includes descriptions of all of the buy and sell orders.
Recall that the expensive securities have payoff clauses (¯xi ∧ Q) or (¯ni ∧ Q).
A language L is in Σp 2 if there exists a polynomial p and a set A in P such that x is in L if and only if there is a y with |y| = p(|x|) such that for all z, with |z| = p(|x|), (x, y, z) is in A.
The input (X, C) is in X3C if C contains an exact cover of X, i.e., there is a subcollection C of C such that every element of X occurs in exactly one member of C .
Having set w1 true, the adversary can set w2, .
5.2 Large number of securities with divisible orders With unlimited base securities, the linear program given in Section 5.1 has an exponential number of constraint  equations.
If the matching problem were in NP, one could use heuristics to search for and verify a match if it exists; even if such heuristics fail in the worst case, they may succeed for most examples in practice.
Given a security S whose payoff clause is C = (v1 ∧ v2 ∧ · · · ∧ vk) (variable negations are irrelevant to this discussion), cost c and payoff p, introduce a new auxiliary variable, w, and replace the security with two securities, S1 and S2, with payoff clauses, C1 = (v1 ∧ v2 ∧ w) and C2 = ( ¯w ∧ v3 ∧ · · · ∧ vk).
, S6, each with cost 4 and payoff 24 − 2, with payoff clauses, (w1 ∧ w2) (w1 ∧ w3) (w2 ∧ w3) ( ¯w1 ∧ ¯w2) ( ¯w1 ∧ ¯w3) ( ¯w2 ∧ ¯w3) Here, 2 is a tiny positive quantity, described later.
Thus, for a clause C = (x2 ∧ ¯x7 ∧ ¯y5) we construct a cheap security SC, with payoff clause (z1 ∧ · · · ∧ zn ∧ x2 ∧ n7 ∧ ¯y5).
For each i, we have 0 ≤ αi ≤ 1 and for each state ω in Ω we have the constraint Υ ω auc = X i −αiΥ ω i ≥ 0.
q > q: In state r, the auctioneer"s payoff is −q (.5 + 1 8q ) − q(−.5 + 1 8q ) + .5 ≤ −(q + q) 1 8q < 0. q > q : In state s, the auctioneer"s payoff is −q (.5 + 1 8q ) − q (−.5 + 1 8q ) + .5 ≤ −(q + q ) 1 8q < 0. q ≤ q ≤ q: Consider the set C consisting of the ci where φi is in the matching.
The auctioneer"s payoff in ek is at most −q (.5 + 1 8q ) − q (−.5 + 1 8q ) ≤ −(q + q ) 1 8q < 0.
In each state ek we have an auctioneer"s payoff of (.5 − 1 8q ) + (q − 1)(−.5 − 1 8q ) + q(.5 − 1 8q ) − .5 = .5 − 2q 1 8q = .25 ≥ 0.
We construct our securities so that the optimal buying strategy is to buy n expensive securities along with a set of cheap securities, of negligible cost (for some cases we can modify the construction so that all securities have the same cost).
If φ were satisfiable then in the state corresponding to the satisfying assignment and both A and B to be true, τ and τ both have an auctioneer"s payoff of −0.5 so even no divisible matching can exist.
By Observation 1, there is no point in buying a nonempty proper subset of the S securities: The adversary can ensure that none of the bought securities will pay off, and even if all the S securities pay off, it will not be sufficient to recoup the cost of buying a single S security.
Since the buyer doesn"t buy (¯ni ∧ Q) (by the above constraint), and all the other securities pay the same or less when ni is made false, we can assume without loss of generality that the adversary sets ni to be false.
The problem is thus whether one can buy n expensive securities and all the cheap securities, so that at for any setting of the base events at least one security will pay off.
The cheap securities are such that preventing every one of of these securities from paying off is equivalent to falsifying φ in the original game.
Summarizing the previous argument, we may assume  without loss of generality that the buyer buys all of the S  securities (for all clauses), and that for each clause the adversary sets exactly one of that clause"s auxiliary variables w1, w2 or w3 to be true.
For the simplest reduction, we consider the matching problem where one has a set of Arrow-Debreu securities whose payoff events are conjunctions of the base securities, or their negations.
Finally, we show that the problem remains hard even if only conjunctions of 2 variables are allowed, though with securities that deviate slightly from Arrow-Debreu securities in that they may have varying, non unit payoffs.
This follow from the fact that if the  adversary sets xi, ni and zi to be false, and every other base event to be true, then only the (¯xi ∧ Q) and (¯ni ∧ Q)  securities will pay off.
Thus, buying a proper subset of these securities will not increase ones payoff.
Summarizing the preceding argument, there is an exact correspondence between the rational strategies of the buyer and settings for the xi variables forced on the adversary.
, Sn be a set of securities, where each security Si has cost ci and pays off pi whenever formula Ci is satisfied.
Setting one of w1, w2 or w3 to be true, and the others to be 0, will cause exactly one of the S securities to pay off.
Hence, owning one share each of S1 and S2 is equivalent to owning one share of S. Note that C1 has three variables and C2 has k−1 variables.
If the buyer doesn"t buy S1, then if the adversary makes w1 true and w2 and w3 false, neither S2 nor S3 will pay off, regardless of how the adversary sets X, Y and Z.
So if no matching exists there must exist m + 1 constraints that force all the αi to zero.
5.3 Small number of securities with indivisible orders This case is easily seen to be in NP: Just  nondeterministically guess a nonempty subset S of orders and check for each state ω in Ω that Υ ω auc = X i∈S −Υ ω i ≥ 0.
For 1 ≤ i ≤ n, we have two expensive securities with payoff clauses (¯xi ∧Q) and (¯ni ∧Q) and two cheap securities with payoff clauses (xi ∧ ¯zi) and (ni ∧ ¯zi).
We also include a base security Q.
We also assume that n bounds the number of base securities.
Given a boolean formula φ with variables x1, .
Similarly, if the matching problem were in co-NP, one might hope to at least heuristically rule out the possibility of matching.
For each clause C ∈ φ, we convert every negated variable ¯xi into ni and add the conjunction z1 ∧ · · · ∧ zn.
To show co-NP-completeness we reduce the NP-complete problem of Boolean formula satisfiability to the nonexistence of a matching.
By the theory of linear programming, an upper bound on the objective function can be forced by a collection of m + 1 constraints.
Unless the polynomial-time hierarchy collapses (which is considered unlikely), a problem that is complete for Σp 2 is not contained in NP or co-NP.
If the formula φ is not satisfiable then every state has an auctioneer"s payoff of 0.5 and a single unit of the security φ is a matching.
We show that buying all of the new securities is equivalent to buying the original security, and that buying a proper, nonempty subset of the securities is irrational.
Then the adversary must set xi to be true (since it must set Q to be true), or the security will pay off.
We at times refer to a security by its payoff clause.
By applying the transformation successively, one obtains an equivalent set of securities, of polynomial size, whose payoff clauses have at most 3 variables.
By a standard trick we can reduce the number of base events in each conjunction to 3, and with a slight twist we can even ensure that all securities have the same price as well as the same payoff.
Since a matching requires a nonempty subset of the orders and τ by itself is not a matching we have q + q > 0.
Secondly, for our analysis we need to ensure that a trader cannot spend more to get more, say by spending 1.5 for a set of securities with the property that at least 2 securities pay off under all possible events.
Similarly, if one 152 doesn"t buy Si, for 1 ≤ i ≤ r −2, the adversary can set wi+1 to be true, all the other w variables to be false, and again there is no payoff, regardless of the value of xi and Q.
For any i, there exists a setting of w1, w2 an w3 such that of the S securities only Si pays off.
The 0 − 1-matching problem asks whether one can, by accepting either 0 or 1 of each security, guarantee a worst-case payoff strictly larger than the total cost.
Next, we claim that for each i, 1 ≤ i ≤ i, the auctioneer must buy at least one of the (¯xi ∧ Q) and (¯ni ∧ Q) securities.
A security S with cost c, payoff p and defining clause (x ∧ y) can be replaced by securities S1 and S2 with cost c/2, payoff p and defining clauses (x∧y∧w) and (x∧y∧ ¯w), where w is a new auxiliary variable.
The adversary also decides the value of the y1, .
If X is false, then S doesn"t pay off, and the adversary can set w1 true (and w2 and w3 false), ensuring that none of S1, S2 and S3 pays off.
We consider two  possibilities: (a) O(log n) base securities yielding a polynomial  number of states.
We next claim that a rational buyer will either buy all of S1, S2 or S3, or none of them.
We now argue that a matching exists iff ∃x1 .
The total cost of the securities will be just under 1, and each security pays off 1, so the adversary must ensure that none of the securities pays off.
Let the base securities be the variables of φ and consider the single security φ with a buy order of 0.5.
A set of orders has a matching exactly when P i αi > 0.
Clearly, buying none of the new securities is equivalent to not buying the original security.
Instead of subdividing costs, we can simply make all of the resulting securities have cost ; the  constraints on C and must reflect the new, larger number of cheap securities.
5.4.3 Reducing to equi-cost securities By setting C and appropriately, one can ensure that in the basic reduction every security costs a polynomially bounded integer multiple of ; call this ratio r. We now show how to reduce this case to the case where every  security costs .
But for problems outside of NP or co-NP, there is no framework for verifying that a heuristically derived answer is correct.
If wi is true, then (¯xi ∧ Q ∧ w1) is equivalent to (¯xi ∧ Q).
For any setting of w1, w2 and w3, at least one of the S securities will pay off.
, e3q, r, s} and define securities labelled φ1 , .
By making > 0 , we can show it hard to distinguish portfolios that guarantee a positive profit from those that risk a positive loss.
To see this, note that if wi is set to false, then ( ¯wi ∧wi+1) will be true unless wi+1 is set to false; thus, setting w1 to false forces the adversary to set wr−1 to false, causing the final clause to be true.
With O(log n) base securities, we have |Ω| bounded by a polynomial so we can solve this linear program in polynomial time.
, yn is the following  fullyquantified formula true ∃x1 .
First, observe that if the adversary sets all of the base securities to false (0), then only the ( ¯Q) security will pay off.
Then, it may be verified that, given the ability to set w arbitrarily, the adversary can cause C to be unsatisfied iff it can cause both C1 and C2 to be unsatisfied.
Note that the adversary must in all cases set each zi event to be true.
Clearly, the adversary must make Q hold, or the ( ¯Q)  security will pay off.
One could argue that if the formula φ is not satisfiable then no fully rational buyer would want to buy φ for a cost of 0.5.
(b) An unlimited number of base securities yielding an exponential number of states.
For all i, Ci is a conjunction of 3 base events (or their negations), pi = 1, and ci = cj for all i and j.
We note that this reduction can be combined trivially with the reduction that ensures that all of the defining clauses have 3 or fewer variables.
, yn) = (x1 ∧ ¯x3 ∧ y2) ∨ (x2 ∧ y3 ∧ y7) ∨ · · · .
This shows that matching is in co-NP.
OF MATCHING In this section we examine the computational complexity of the auctioneer"s matching problem.
In states r and s the auctioneer"s payoffs are −q(.5 + 1 8q ) + −q(−.5 + 1 8q ) + .5 = −5 − 2q 1 8q = .25 ≥ 0.
Replace S with security S , with payoff clause (¯xi ∧ Q ∧ w1) (w1, .
Under these  constraints, those securities not corresponding to clauses in φ are guaranteed to not pay off.
Given these constraints we maximize X i αi.
With a slightly messier argument, all of the defining clauses can be set up to have exactly 3 variables.
If w1, w2 and w3 are all false, all of the S securities will pay off.
Note also that by making 2 positive we prevent the existence of break-even buying strategies in which the buyer only purchases S securities.
For each of the variables {xi}, {yi} in φ, we add a  corresponding base security (with the same labels).
While it may seem that being NP-complete or co-NP-complete is hard enough, there are further practical consequences of being outside of NP and co-NP.
Note that one might argue that one should maximize some linear combination of the −Υ ω i s to maximize the surplus.
5.1 Small number of securities with divisible orders We can build a linear program based on Definition 2.
Since |Ω| and |S| are bounded by a polynomial in n, the verification can be done in polynomial time.
, Sr−1, with payoff clauses ( ¯w1 ∧ w2), ( ¯w2 ∧ w3), .
The case of single-variable payoff clauses is handled by two applications of this technique.
If φ were not satisfiable then one unit of each would be a matching since in every state at least one of τ or τ are false.
, Sr−1, then the adversary must set w1 to be true, or one of the securities will pay off.
For all i, Ci is a conjunction of at most 2 base  securities (or their negations).
Hence, there is no point in buying either S2 or S3 if one doesn"t buy S1.
The auctioneer has the option of accepting either 0 or 1 of each of the given securities.
The problem remains Σp 2-complete when φ(x1, .
5.4 Large Number of Securities with  Indivisible Orders The class Σp 2 is the second level of the polynomial-time hierarchy.
Thus, the accumulated losses of 2 can never spell the  difference between making a guaranteed profit and making no profit at all.
The selector sets the xi variables, and then the adversary sets the yi variables so as to falsify the formula φ.
However, this would allow one to buy a security for nothing that pays (in the worst case) nothing.
In our basic construction, each expensive security costs C and each cheap security costs ; all securities pay off 1.
Furthermore, the problem remains Σp 2-complete under the following two special cases: 1.
We first reduce to the case where the payoff events are conjunctions of arbitrarily many base events (or their  negations).
We have variables αi.
The matching problem is 1. computable in polynomial-time for O(log n) base  securities with divisible orders.
Assume that  security S has payoff clause (¯xi ∧ Q) (the other case is handled identically).
We claim that a matching exists if and only if (X, C) is in X3C.
In nondeterministic polynomial-time we can guess these constraints and solve the reduced linear program.
We prove a stronger theorem which implies that matching is in Σp 2.
, yn) is restricted to being a disjunction of conjunctions of at most 3 variables (or their negations), e.g., φ(x1, .
Among the technical difficulties we face is how to prevent the buyer from buying conflicting securities, e.g., one that forces xi = 0 and the other that forces xi = 1, allowing for a trivial arbitrage.
, wr−1 to false, ensuring that none of the securities S1, .
We claim the collection consisting of φi for each ci in C , every ψj and τ has a matching.
The T∃∀BFproblem may be viewed as a game between a selector and an adversary.
NP-complete for O(log n) base securities with  indivisible orders.
We first note that if the buyer buys securities S1, .
Consider the number q of the φi in that  matching and q the number of ψj in the matching.
This form, without the bound on the conjunction size, is known as disjunctive normal form (DNF); the restriction to conjunctions of 3 variables is 3-DNF.
The resulting reasonable strategies  correspond exactly to the game version of T∃∀BF.
Whether to allow divisible or indivisible orders.
Recall that for each clause C ∈ φ there is a corresponding security SC.
It must then set zi to be true or (xi∧¯zi) will pay off.
Fix a formula φ.
5.4.1 The basic reduction Before describing the securities, we give some intuition.
, zn to be true, and without loss of  generality may be assumed to set ni = ¯xi.
149 Let m ≤ n be the total number of buy and sell orders.
Each constraint is short to describe and easily  computable given ω.
5.4.2 Reducing to 3-variable conjunctions There are standard methods for reducing DNF formulae to 3-DNF formulae, which are trivially modifiable to our  securities framework; we include the reduction for completeness.
Suppose now that (X, C) is not in X3C but there is a matching.
However this approach will not find matchings that have zero surplus.
There must be some state ek not in any of the ci or C would be an exact cover.
151 Thus, no buyer can buy more than n expensive securities and guarantee a profit.
For the rest of the discussion, we assume that the players follow these constraints.
Karp showed that X3C is NP-complete.
Less formally, for NP (or co-NP)-complete problems, you have to be lucky; for Σp 2-complete problems, you can"t even tell if you"ve been lucky.
Σp 2-complete for unlimited securities with indivisible orders.
Furthermore, the adversary is also constrained to set the variables Q, z1, .
The same argument holds if Y or Z are false. 
We do this by successively constraining the buyer and the adversary, eliminating behaviors that would cause the other player to win.
We reduce T∃∀BF to finding a matching.
For each existential variable xi we add additional base securities, ni and zi.
The 0−1-matching problem is Σp 2-complete.
2. co-NP-complete for unlimited securities with divisible orders.
Suppose that the buyer buys (¯xi ∧Q).
, wr−1 are auxiliary variables; fresh variables are chosen for each clause), and also S1, .
, Sr−1 will pay off; any money spent on these  securities is wasted.
If (X, C) is in X3C, let C be the subcollection that covers each element of X exactly once.
• Securities S1, .
, ( ¯wr−2 ∧ wr−1), and( ¯wr−1 ∧ ¯w1).
By a simple case analysis, we have the following.
To prove Theorem 2, we reduce from the standard Σp 2 problem that we call T∃∀BF.
The input to X3C consists of a set X and a collection C of 3-element subsets of X.
Note that |C | = q.
Essentially the same analysis as given above  applies to this case.
We set C, and 2 so that Cn + (|cheap securities|) + 2(|clauses|) < 1.
Suppose we have an instance (X, C) with the vector X = {x1, .
∀yn φ(x1, .
∀yn φ(x1, .
Applying the same argument to S2 and S3 establishes the claim.
The class Σp 2 contains both NP and  coNP.
We require that Cn+ (|cheap securities|) < 1 and C(n+1) > 1.
, Sr−1 pays out.
Let S1, .
Remark: We may loosely think of as 0.
We show the following results.
We have three cases.
We set Ω = {e1, .
, xn and y1, .
We consider four cases based on two parameters: 1.
, xn, y1, .
, xn, y1, .
, xn, y1, .
, xn, y1, .
Theorem 1.
, ym base events.
Theorem 2.
, x3q} and C = {c1, .
Observations: 1.
, φm , ψ1 , .
