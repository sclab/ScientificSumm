To find out the important part of the ad, the authors explore using different ad sections (bid phrase, title, body) as a  basis for the ad vector.
In [14] a system for phrase extraction is described that used a variety of features to determine the importance of page phrases for advertising purposes.
Furthermore, since in the vector model the dimensions are determined by the number of unique words, plain cosine similarity will not take into account synonyms.
Online advertising in general and contextual advertising in particular are emerging areas of research.
To solve this problem, Ribeiro-Neto et al expand the page vocabulary with terms from other similar pages weighted based on the overall  similarity of the origin page to the matched page, and show improved matching precision.
[8] examines a  number of strategies to match pages to ads based on extracted keywords.
The first five strategies proposed in that work match the pages and the ads based on the cosine of the angle between the ad vector and the page vector.
During evaluation, each page phrase up to length 5 is considered as potential result and evaluated against a trained classifier.
The ads and pages are represented as vectors in a vector space.
The learning algorithm takes into account features based on tf-idf, html meta data and query logs to detect the most important phrases.
The published literature is very sparse.
The function is  represented as a tree composed of arithmetic operators and the log function as internal nodes, and different numerical features of the query and ad terms as leafs.
Another approach to contextual advertising is to reduce it to the problem of sponsored search advertising by  extracting phrases from the page and matching them with the bid phrase of the ads.
The winning strategy out of the first five requires the bid phrase to appear on the page and then ranks all such ads by the cosine of the union of all the ad sections and the page vectors.
A recent work by Ribeiro-Neto et.
In our work we also experimented with a phrase extractor based on the work reported in [12].
While both pages and ads are mapped to the same space, there is a discrepancy (impendence mismatch) between the vocabulary used in the ads and in the pages.
The results show that genetic programming finds matching functions that  significantly improve the matching compared to the best method (without page side expansion) reported in [8].
In a follow-up work [7] the authors propose a method to learn impact of individual features using genetic  programming to produce a matching function.
A study presented in [13] confirms the intuition that ads need to be relevant to the user"s  interest to avoid degrading the user"s experience and increase the probability of reaction.
The system is trained with pages that have been hand  annotated with important phrases.
While increasing slightly the precision, it did not change the relative performance of the explored algorithms. 
