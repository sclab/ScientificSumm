232 research is how to share the savings in costs from the  initial ordering to the optimal ordering amongst jobs (also see Hamers et al.
Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.
We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 
One of their approaches, called the tail game, is related to the reverse rule of Chun [1].
A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and  processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).
Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.
First best implementation means that there exists an efficient  mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.
The problem of fair division of costs among agents in a queue has many practical applications.
Another stream of literature is on sequencing games, first introduced by Curiel et al.
1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.
Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).
If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).
From the  seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers.
[4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.
For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence  property.
Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).
Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.
In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.
Moulin [22, 21] studies strategic concepts such as  splitting and merging in queueing problems with unit per unit waiting costs.
Efficient ordering of this queue directs us to serve the jobs in increasing  order of the ratio of per unit time waiting cost and processing time.
Strategic aspects of queueing problems have also been  researched.
A set of jobs need to be served by a server.
For example,  computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are  scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).
The particular notion of the worth of a coalition makes the sequencing game of Curiel et al.
While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.
If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.
Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.
Due to two dimensional nature of our model and one dimensional nature of Maniquet"s model [15], his axioms are insufficient to characterize the Shapley value in our setting.
We introduce axioms such as independece of  preceding jobs" unit waiting cost and independence of following jobs" processing time.
Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.
Recently, there has been increased interest in cost  sharing methods with submodular cost functions [11, 12, 6, 24].
Mitra [19] studies the first best implementation in queueing models with generic cost functions.
Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.
Cost sharing is a fundamental problem in many settings on the Internet.
We hope that our analysis will give new insights on cost sharing problems of this nature.
How should the jobs share the cost equitably amongst themselves (through transfers)?
We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.
Study of queueing  problems has attracted economists for a long time [7, 17].
The general cost sharing literature is vast and has a long history.
Maniquet [15] studies a model where he assumes all processing times are unity.
Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.
Depending on the ordering  selected, one job inflicts cost on the other.
A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .
The current surge in cost sharing literature from computer  scientists validate this claim [8, 11, 12, 6, 24].
Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.
Each job has a finite  processing time and a per unit time waiting cost.
We provide a simpler expression of the Shapley value in the tail game,  generalizing the result in Chun [1].
For a good survey, we refer to [20].
To compensate for waiting by jobs, monetary  transfers to jobs are allowed.
They take two approaches to define the worth of coalitions.
Klijn and S´anchez [13] study the core of this game in detail.
The server can process only one job at a time.
For a detailed survey, refer to Curiel et al.
Chun [2] also studies the envy properties of these rules.
Our fairness axiom says that each job should at least bear such expected costs.
In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions.
For such a model, he characterizes the Shapley value rule using classical fairness axioms.
Klijn and S´anchez [14] showed that the tail game is balanced.
Further, they provide expressions for the Shapley value in tail game in terms of marginal  vectors and reversed marginal vectors.
We characterize the Shapley value rule using these fairness axioms.
We show that the Shapley value rule satisfies many intuitive  fairness axioms.
Curiel et al.
[4] convex, whereas our game is not convex and does not assume the presence of any initial order.
[9], Curiel et al.
Chun characterizes this rule using similar fairness axioms.
