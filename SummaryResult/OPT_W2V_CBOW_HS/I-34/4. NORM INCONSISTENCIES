The conflict resolution algorithm can be applied without change to accumulate a maximal conflict set ΣMAX c for each prohibition in Ω that unifies with obligations. 
The obligation demands that an agent performs an action that is forbidden.
We can reuse the machinery, introduced above for  resolving conflicts between permissions and prohibitions, in order to a) detect and b) resolve such inconsistencies.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 647 express the nature of a conflict between a prohibition and  permission.
If a substitution σ can be found that unifies an obligation and a prohibition, then a situation of norm inconsistency occurs [13].
With Definition 7, we 3 The combinatorial effort is not necessary anymore if instead we maintain a set of norms conflict-free: each time a new norm is to be introduced then we compare it with the existing ones, thus making the maintenance process of linear complexity.
Similarly, a situation of inconsistency can be defined reusing this definition and replacing the P deontic modality with O.
We can reuse the machinery for conflict resolution, developed previously, for resolving inconsistency.
The Sixth Intl.
Joint Conf.
