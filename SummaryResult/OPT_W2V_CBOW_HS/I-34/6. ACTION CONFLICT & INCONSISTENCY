Relationships among actions are domain-dependent.
Different domains have distinct ways of relating their actions; engineers build ontologies to represent such relationships.
However, conflicts and inconsistencies may also arise indirectly via relationships among actions.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) The Sixth Intl.
The domain axioms, denoted as Δ, are a finite and  possibly empty set of formulae ϕ → (ϕ1 ∧ · · · ∧ ϕn) where ϕ, ϕi, 1 ≤ i ≤ n, are atomic first-order formulae.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) The Sixth Intl.
By explicitly representing and manipulating domain knowledge we achieve generality: the very same  machinery can be used with different domains.
In our previous discussion, norm conflict and inconsistency were detected via a direct comparison of the atomic formulae  representing the action.
Our example above can be captured by Δ = {(p(X) → q(X, X)), (q(X, X) → p(X))}.
Joint Conf.
Joint Conf.
A set of norms can have different conflicts and inconsistencies, for distinct domains of  application.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 649 650 The Sixth Intl.
We propose a simple means to account for such relationships and show how these can be connected to the mechanisms introduced above.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 651 
In the discussion below we concentrate on norm conflict, but norm inconsistency can be dealt with similarly, if we change the deontic modalities P for O.
Joint Conf.
Rather than making use of sophisticated formalisms for ontology construction, we employ a set of domain axioms, defined below: DEF.
For instance, if p(X) amounts to q(X, X), then norms PA:Rp(X) and FA:Rq(X, X) are in conflict since PA:Rp(X) can be rewritten as PA:Rq(X, X) and we thus have both PA:Rq(X, X) and FA:Rq(X, X).
Joint Conf.
648 The Sixth Intl.
