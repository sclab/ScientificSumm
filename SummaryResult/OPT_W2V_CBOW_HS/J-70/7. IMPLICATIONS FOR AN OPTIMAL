Then, if the optimal auction solution allocates item so to the bidder for a type, in the AMD solution, let the mechanism choose outcome o for that type.
To show NP-hardness, we reduce an arbitrary  paymentmaximizing deterministic AMD instance, with a single agent and a uniform distribution over types, to the following  optimal combinatorial auction design problem instance with a single bidder with best-only preferences.
It follows that there exists a solution to the optimal auction design instance.
The reason is that if the bidder is reporting truthfully, taking all but the highest valued item away from the bidder will not hurt the bidder; and, by free disposal, doing so can only reduce the incentive for this bidder to falsely report this type, when the bidder actually has another type.
Given an optimal combinatorial auction  design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), if the number of bidders is a constant k, then the optimal randomized  auction can be designed in polynomial time.
Also, suppose that the bidders" preferences have the following structure: whenever a bidder receives a bundle of items, the bidder"s utility for that bundle is determined by the best item in the bundle only.
Let the payment functions be the same.
For every  outcome o ∈ O in the AMD instance (besides the outcome o0), let there be one item so ∈ S. Let the type space be the same, and let v(θi, so) = ui(θi, o) (where u is as specified in the AMD instance).
If the optimal auction solution allocates nothing to the bidder for a type, in the AMD solution, let the mechanism choose outcome o0 for that type.
Bidder i is said to have best-only  preferences over bundles of items if there exists a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s).
We now show that the problem of designing a  deterministic optimal auction here is NP-complete, by a reduction from the payment maximizing AMD problem!
First suppose there exists a solution to the AMD instance, given by an outcome function and a payment function.
Given an optimal combinatorial auction  design problem under best-only preferences (given by a set of items S and for each bidder i, a finite type space Θi and a function vi : Θi × S → R such that for any θi ∈ Θi, for any B ⊆ S, ui(θi, B) = maxs∈B vi(θi, s)), designing the  optimal deterministic auction is NP-complete, even for a single bidder with a uniform distribution over types.
We show the instances are equivalent.
Then, if the AMD solution chooses outcome o for a type, in the optimal auction solution, allocate {so} to the bidder for this type.
The optimal auction design problem is to specify the rules of the auction so as to maximize expected revenue to the auctioneer.
By the at-most-one-item observation, we can  without loss of generality restrict ourselves to allocations where each bidder receives at most one item.
For any bundle B ⊆ S, let ui(θi, B) be bidder i"s utility for receiving bundle B when the bidder"s type is θi.
Then, the utility that an agent receives for  reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the optimal  auction solution.
(Unless o = o0, in which case we allocate {} to the bidder.)
The optimal auction design problem is solved for the case of a single item by the famous Myerson auction [18].
By the at-most-one-item observation, we can assume without loss of generality that the solution never allocates more than one item.
Then, the utility that an agent receives for reporting a type (given the true type) in either solution is the same, so we have incentive compatibility in the AMD solution.
Fortunately, we can also carry through the easiness result for randomized mechanisms to this combinatorial auction setting-giving us one of the few known polynomial-time  algorithms for an optimal combinatorial auction design  problem.
Now suppose there exists a solution to the optimal auction design instance.
Moreover, because the type distribution and the payment function are the same, the expected revenue to the designer/auctioneer is the same.
Moreover, because the type distribution and the payment function are the same, the expected revenue to the auctioneer/designer is the same.
COMBINATORIAL AUCTION DESIGN PROBLEM In this section, we will demonstrate some interesting  consequences of the problem of automated mechanism design for a self-interested designer on designing optimal  combinatorial auctions.
Let the payment functions be the same in both instances.
Let the expected revenue target value be the same in both instances.
It follows that there exists a solution to the AMD instance.
The problem is in NP because we can  nondeterministically generate an allocation rule, and then set the payments using linear programming.
However, designing optimal auctions in combinatorial auctions is a recognized open research problem [3, 25].
We make the following useful observation in this setting: there is no sense in awarding a bidder more than one item.
(We emphasize that 138 which item is the best is allowed to depend on the bidder"s type.)
(By the revelation principle, without loss of generality, we can assume the auction is truthful.)
Because we can list the outcomes explicitly, we can simply solve this as a payment-maximizing AMD instance, with linear programming.
Consider a combinatorial auction with a set S of items for sale.
(For any IC and IR constraints.)
The problem is open even if there are only two items for sale.
There are fewer than (|S| + 1)k such allocations-that is, a polynomial number of allocations.
(The  twoitem case with a very special form of complementarity and no substitutability has been solved recently [1].)
Theorem 5.
Suppose we have free disposal-items can be thrown away at no cost.
Theorem 4.
Definition 10.
