Because of our Lindahl price construction, when all agents reply ‘YES" to a demand query, we have found an optimal  allocation, analogous to the case where an agent replies ‘YES" to an equivalence query when the target function has been exactly learned.
That is, the resulting algorithm does not simply learn the  valuations exactly, then compute an optimal allocation.
Otherwise, we can obtain a  counterexample to an equivalence query given an agent"s response to a demand query.
It is possible to generate a Lindahl equilibrium for valuations v1, .
Otherwise, at least one of Si or Si is a counterexample to ˜vi, by Lemma 1.
, ˜vn, and finding an optimal allocation does not imply that the agents" valuations have been exactly learned.
ELICITATION The key to converting a learning algorithm to an  elicitation algorithm is to simulate equivalence queries with  demand and value queries until an optimal allocation is found.
, Vn can be polynomial-query elicited from value and demand queries if they can each be polynomial-query exactly learned from membership and equivalence queries.
, An are all polynomial-query learning algorithms.
Note that the conversion procedure results in a  preference elicitation algorithm, not a learning algorithm.
This procedure will halt, since in the worst-case all agent valuations will be learned exactly, in which case the  optimal allocation and Lindahl prices will be accepted by all agents.
Consider the elicitation algorithm in Figure 1.
We identify a counterexample by performing value queries on both these bundles, and provide it to Ai as a response to its equivalence query.
We would not obtain this property with  equivalence queries based on manifest valuations. 
Rather, it elicits partial information about the valuations through value queries, and periodically tests whether enough  information has been gathered by proposing an allocation to the agents through demand queries.
The procedure performs a polynomial number of queries, since A1, .
Condition (2) holds because the computed allocation is revenue-maximizing for the auctioneer, regardless of the agents" true valuations.
Each membership query in step 1 is simulated with a value query since these are in fact identical.
Thus an optimal allocation has been found.
, vn using an  allocation and prices derived using manifest valuations ˜v1, .
The use of demand queries to simulate equivalence queries enables this early halting.
If all agents reply ‘YES", condition (1) holds.
The representation classes V1, .
Consider step 4.
Theorem 1.
