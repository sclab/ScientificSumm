Notice also that given the semantics presented in Definition 2, if institutions can be specified via TBoxes then the meaning of such specifications is a set of interpreted transition systems, i.e., the models of those TBoxes.
The definition states that an institution specification needs to be  expressed on a language including institutional as well as brute terms (1); that a part of the specification concerns a description of mere institutional terms (3); and that there needs to be a part of the  specification which connects institutional terms to brute ones (2).
The abstract norm is formalized by Formula 1 by making use of a  standard reduction technique of deontic notions (see [16]): the  statement it is forbidden to discriminate on the basis of citizenship amounts to the statement after every execution of a transition of type DISCR(i, j) the system always ends up in a violation state.
eInstitutions impose properties on the possible states of a MAS: they  specify what are the states in which an agent i enacts a role r; what are the states in which a certain agent is violating the norms of the  institution, etc.
In particular, an institution specification Ins must have some precise linguistic  relationship with the ‘brute" descriptions upon which the institution is specified.
Terminological axioms in Γbridge and Abridge formalize in DL the Searlean notion of counts-as conditional ([25]), that is, rules  stating what kind of meaning an institution gives to certain brute facts and transitions (e.g., checking box No.4 in form No.2 counts as accepting your personal data to be used for research purposes).
In fact, it is the case that a same set of abstract norms can be translated to different and even incompatible sets of concrete norms.
For each relevant institutional state type (e.g., rea(i, r)), the terminological axioms which define an institution, i.e., its norms, can be clustered in (possibly  overlapping) sets of three different types: the axioms specifying how states of that institutional type can be reached (e.g., how an agent i can enact the role r); how states of that type can be left (e.g., how an agent i can ‘deact" the a role r); and what kind of institutional  consequences do those states bear (e.g., what rights and power does agent i acquire by enacting role r).
What Example 1 shows is that the problem of the abstractness of norms in institutions can be formally addressed and can be given a precise formal semantics.
Institutive modules We call institutive modules those sets of  terminological axioms of an institution specification describing how states with certain institutional properties can be reached, for  instance, how an agent i can reach a state in which it enacts role r. They can be seen as procedures that the institution define in order for the agents to bring institutional states of affairs about.
Systems of rules of this type empower the agents enacting some relevant role by establishing a connection between the brute actions of the agents and some institutional effect.
Or in other words: what does it mean for a designer of an eInstitution to state a set of norms?
If the designer uses transition types SEND(msg33, i, j) and SEND(msg38, i, j) for the concrete system specification, then Formulae 5 and 6 can be thought of as bridge axioms connecting notions belonging to the institutional alphabet (to accept, and to reject) to concrete ones (to send specific messages).
Restricted versions of status modules can also be represented enabling two essential deontic notions: it is possible (respectively, impossible) to reach a violation state by performing a transition of a certain type, and it is possible (respectively,  impossible) to reach a legal state by performing a transition of a certain type.
Status modules We call status modules those sets of  terminological axioms which specify the institutional consequences of the occurrence of a given institutional state-of-affairs, for instance, the fact that agent i enacts role r. EXAMPLE 3.
Consider an alternative institution specification Ins containing Formulae 1-3 and the following translation rule: PAY(j, i, e10) DISCR(i, j) (10) Would this formula be an acceptable translation of the abstract norm expressed in Formula 1?
Because of its suitability for representing complex domain descriptions, the formal framework we will make use of is the one of Description Logics (DL).
(An institutive module for roles) The fact that an agent i enacts a role r (rea(i, r)) is the effect of a corresponding enactment action ENACT(i, r) performed under certain  circumstances (Formula 16), namely that the agent does not already enact the role, and that the agent satisfies given conditions (cond(i, r)), which might for instance pertain the computational capabilities required for an agent to play the chosen role, or its capability to interact with some specific system"s infrastructures.
(A terminative module for roles) Terminative  modules for roles specify, for instance, how a transition type DEACT(i, r) can be executed which has as consequence the reaching of a state of type ¬rea(i, r): rea(i, r) DEACT(i, r).¬rea(i, r) (18) SEND(i, s, msg9) DEACT(i, r) (19) That is to say, i deacting a role r always leads to a state where 3 See in particular Example 6 and Definition 5 i does not enact role r; and i sending message No.9 to a specific interface infrastructure s count as i deacting role r. Examples 3-5 have shown how roles can be formalized in our framework thereby getting a formal semantics: roles are also sets of terminological axioms concerning state types of the sort rea(i, r).
It is  obtained from description logic EL, which contains only state types intersection , existential restriction ∃ and 5 , but extended with the ⊥ state type and with transition type inclusion axioms of a  complex form: a1 ◦.
There exist sets of terminological axioms Γbridge ⊆ Γins and Abridge ⊆ Ains such that either the left-hand side of these axioms is always a description expressed in Lbrute and the right-hand side a description expressed in Lins, or those axioms are definitions.
The satisfiability problem4 in logic ALCH( ,◦,¬,id) is undecidable since transition type inclusion axioms correspond to a version of what in Description Logic are known as role-value maps and logics extending ALC with role-value maps are known to be undecidable ([3]).
Formulae 2 and 3 express two effect laws: if the requester j is Dutch then after all executions of transitions of type DISCR(i, j) j is accepted by i, whereas if it is not all the executions of the transitions of the same type have as an effect that it is not accepted.
The problem can be represented as follows.
¬rea(i, r) cond(i, r) ENACT(i, r).rea(i, r) (16) SEND(i, s, d) ◦ NOTIFY(s, i) ENACT(i, r) (17) Terminative modules Analogously, we call terminative  modules those sets of terminological axioms stating how a state with certain institutional properties can be left.
A terminological box (henceforth TBox) T = Γ, A consists of a finite set Γ of state type inclusion assertions (γ1 γ2), and of a finite set A of transition type inclusion assertions (α1 α2).
For example, that cars have wheels is a common factual property, whereas the fact that cars count as vehicles in some technical legal sense is a property that law imposes on the concept car.
An example which pertains to the  normative description of the status of both a buyer and a seller roles is the following: rea(i, buyer) rea(j, seller) win bid(i, j, b) ∀¬PAY(i, j, b).viol(i) (13) If agent i enacts the buyer role and j the seller role and i wins bid b then if i does not perform a transition of type PAY (i, j, b), i.e., does not pay to j the price corresponding to bid b, then the system ends up in a state that the institution classifies as a violation state with i being the violator.
Of particular interest are then those consequences that attribute powers to agents enacting specific roles: rea(i, buyer) rea(j, seller) ∀BID(i, j, b).bid(i, j, b) (14) SEND(i, j, msg49) BID(i, j, b) (15) If agent i enacts the buyer role and j the seller role, every time agent i bids b to j this action results in an institutional state  testifying that the corresponding bid has been placed by i (Formula 14).
In fact, the following inclusions would then hold in Ins : dutch(j) ∀PAY(j, i, e10).accepted(j) (11) ¬dutch(j) ∀PAY(j, i, e10).¬accepted(j) (12) In fact, there properties of the transition type PAY(j, i, e10) look at least awkward: if an agent is Dutch than by paying e10 it would be accepted, while if it was not Dutch the same action would make it not accepted.
(Syntax of ALCH( ,◦,¬,id) ) transition types and state type constructs are defined by the  following BNF: α := a | α ◦ α | α α | ¬α | id(γ) γ := c | ⊥ | ¬γ | γ γ | ∀α.γ where a and c are atomic transition types and, respectively, atomic state types.
(Semantics of ALCH( ,◦,¬,id) ) An interpreted transition system m for ALCH( ,◦,¬,id) is a  structure S, I where S is a non-empty set of states and I is a function such that: I(c) ⊆ S I(a) ⊆ S × S I(⊥) = ∅ I(¬γ) = Δm\ I(γ) I(γ1 γ2) = I(γ1) ∩ I(γ2) I(∀α.γ) = {s ∈ S | ∀t, (s, t) ∈ I(α) ⇒ t ∈ I(γ)} I(α1 α2) = I(α1) ∪ I(α2) I(¬α) = S × S \ I(α) I(α1 ◦ α2) = {(s, s ) | ∃s , (s, s ) ∈ I(α1) & (s , s ) ∈ I(α2)} I(id(γ)) = {(s, s) | s ∈ I(γ)} An interpreted transition system m is a model of a state type  inclusion assertion γ1 γ2 if I(γ1) ⊆ I(γ2).
if dutch(j)then ACCEPT(i, j) else REJECT(i, j) DISCR(i, j) (4) SEND(msg33, i, j) ACCEPT(i, j) (5) SEND(msg38, i, j) REJECT(i, j) (6) ∀ACCEPT(i, j).accepted(j) ≡ (7) ∀REJECT(i, j).¬accepted(j) ≡ (8) It is easy to see, on the grounds of the semantics exposed in  Definition 2, that the following concrete inclusion statement holds w.r.t.
In symbols: if γ1 γ2 ∈ Γbridge then either γ1 ∈ Lbrute and γ2 ∈ Lins or it is the case that also γ2 γ1 ∈ Γbridge.
Current formal approaches to institutions, such as ISLANDER [6], do not allow for the formal specification of  explicit translations of abstract norms into concrete ones, and focus only on norms that can be specified at the concrete system  specification level.
An institutional property is therefore a property of system states or system transitions (i.e., a state type or a transition type) that does not belong to a merely technical, or factual, description of the system.
An institution can be specified as a terminological box Ins = Γins, Ains , where each inclusion statement in Γins and Ains models a norm of the institution.
it is needed to formally specify an explicit bridge between the  concepts used in the description of the actual system and the  institutional ‘abstract" concepts.
These transitions systems can be in turn thought of as all the possible MASs which model the specified institution.
The sets of norms specifying an institution can be clustered on the grounds of the rea state types.
The scenario suggests that, just by modifying an appropriate set of terminological axioms, it is possible for the designer to obtain a different institution by just modifying the sets of bridge axioms without touching the terminological axioms expressed only in the institutional language Lins.
From an agent perspective institutions are, to paraphrase this quote, the rules of the various games agents can play in order to interact with one another.
Needless to say this is not intuitive, because the abstract transition type DISCR(i, j) obeys some intuitive conceptual constraints  (Formulae 2 and 3) that all its translations should also obey.
2.3 From abstract to concrete norms To illustrate Definition 3, and show its explanatory power, an example follows which depicts an essential phenomenon of  institutions.
The semantics of ALCH( ,◦,¬,id) is model theoretical and it is given in terms of interpreted transition systems.
Atomic state types c are often indexed by an agent identifier i in order to express agent properties (e.g., dutch(i)), and atomic transition types a are often indexed by a pair of agent identifiers (i, j) (e.g., PAY(i, j)) denoting the  actor and, respectively, the recipient of the transition.
2.1 Preliminaries: a very expressive DL The description logic language enabling the necessary  expressivity expands the standard description logic language ALC ([3]) with relational operators ( ,◦,¬,id) to express complex transition types, and relational hierarchies (H) to express inclusion between transition types.
(A status module for roles) Enacting a role within an institution bears some institutional consequences that are grouped under the notion of status: by playing a role an agent acquires a specific status.
Whether the agents are actually able to execute the required ‘brute" actions is a different issue, since agent i can be in some states (or even all states) unable to effectuate a SEND(i, j, msg49) transition.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) the specified institution: if dutch(j) then SEND(msg33, i, j) else SEND(msg38, i, j) DISCR(i, j) (9) This scenario exemplifies a pervasive feature of human institutions which, as extensively argued in [10], should be incorporated by electronic ones.
As readers acquainted with  deontic logic have probably already noticed, our treatment of the notion The Sixth Intl.
Some observations are in order.
To say it with [25], the fact that cars have wheels is a brute fact, while the fact that cars are vehicles is an institutional fact.
In particular we will make use of the following definition of the if-then-else transition type: if γ then α1else α2 = (id(γ) ◦ α1) (id(¬γ) ◦ α2).
Essentially, the empowerment phenomenon is analyzed in term of two rules: one specifying the institutional effects of an institutional action (Formula 14), and one translating the institutional transition type in a brute one (Formula 15).
By stating how an agent can enact and ‘deact" a role r, and what normative consequences follow from the enactment of r, an institution describes expected forms of agents" behavior while at the same time abstracting from the concrete agents taking part to the system.
It is worth stressing that without providing a model-theoretic  semantics for the translation rules linking the institutional notions to the brute ones, it would not be so straightforward to model the  logical constraints to which the translations are subjected (Example 2).
They can be thus thought of as procedures that the institution defines in order for the agent to see to it that certain institutional states stop holding.
Some of the institutional state types  occurring in the institution specification play a key role in structuring the specification of the institution itself.
We use the term to refer to any set of interacting agents whose behavior can usefully be regarded as governed by norms ([15], p.276).
The step toward a formal grounding of this view of institutions is now short: norms can be thought of as terminological axioms, and institutions as sets of terminological axioms, i.e., terminological boxes.
Rules of this kind state for instance how an agent can stop enacting a certain role.
2.5 Tractable specifications of institutions In the previous sections we fully deployed the expressivity of the language introduced in Section 2.1 and used its semantics to provide a formal understanding of many essential aspects of  institutions in terms of transition systems.
The operator id applies to a state description γ and yields a transition description, namely, the transition ending in γ states.
Formula 4 refines it by making explicit that a precise if-then-else procedure counts as a discriminatory act of agent i. Formulae 5 and 6 specify which  messages of i to j count as acceptance and rejection.
It is worth providing the intuitive reading of a couple of the  operators and the constructs just introduced.
They do this via linking some institutional properties of the possible states and transitions of the system (e.g., agent i  enacts role r) to some brute properties of those states and transitions (e.g., agent i performs protocol No.56).
To sum up, institution are viewed as sets of norms (normative system perspective), and norms are thought of as the imposition of an institutional description of the system upon its description in terms of brute properties.
One of them is logic ELH(◦) .
That is to say, institutions provide descriptions of entities by making use of conceptualizations that are not proper of the common descriptions of those entities.
We have seen that the terminological axioms specifying an institution concern complex descriptions of new institutional notions.
To this aim language Lins would need to be expanded with a set of state types {legal(i)}0≤i≤n whose intuitive meaning is to denote legal states as opposed to states of type viol(i).
(Institutions as TBoxes) A TBox Ins = Γins, Ains is an institution specification if: 1.
Some of these consequences are deontic and  concern the obligations, rights, permissions under which the agent puts itself once it enacts the role.
This is precisely the advantage of viewing translation rules as  specific terminological axioms, i.e., Γbridge and Abridge, working as a bridge between two languages (Definition 3).
In fact, the language presented in Definitions 1 and 2 is a notational variant of the language of Dynamic Logic ([5]) without the iteration operator of transition types.
The system designer should make some concrete choices for interpreting the norm and these choices should be kept track of in order to explicitly link the abstract norm to its concrete interpretation.
Notice that we use the same symbols and ¬ for denoting the boolean operators of disjunction and negation of both state and transition types.
By ignoring for a second the philosophical jargon of the  Seventeenth century we can easily extract an illuminating message from the excerpt: what institutions do is to impose properties on already existing entities.
Such a procedure is performed through a system  infrastructure s, which notifies to i that it has been registered as  enacting role r after sending the necessary piece of data d (SEND(i, s, d)), e.g., a valid credit card number.
Obviously, not every TBox can be considered to be an institution specification.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 629 2.2 Institutions as terminologies We have upheld that institutions impose new system  descriptions which are formulated in terms of sets of norms.
We denote by Lins the non-logical alphabet containing only institutional state and transition types, and by Lbrute the  nonlogical alphabet containing those types taken to talk about, instead, ‘brute" states and transitions1 .
This translation can nevertheless not be arbitrary ([1]).
Finally, Formulae 7 and 8 state two  intuitive effect laws concerning the ACCEPT(i, j) and REJECT(i, j) types.
It is a model of a transition type inclusion assertion α1 α2 if I(α1) ⊆ I(α2).
In the next section the same framework is applied to provide a formal analysis of the notion of role.
The paradigmatic example in this sense ([25]) are facts such as agent i enacts role r which will be denoted by state types rea(i, r).
The actual possibility of performing the required ‘brute"  actions is not an institutional issue, but rather an issue concerning the implementation of an institution in a concrete system.
The use of such formalism will also stress the idea of viewing institutions as the impositions of domain descriptions.
2.4 Institutional modules and roles Viewing institutions as the impositions of institutional  descriptions on systems" states and transitions allows for analyzing the normative system perspective itself (i.e., institutions are sets of norms) at a finer granularity.
As a consequence, some key constructs are still definable in ALCH( ,◦,¬,id) .
Borrowing the terminology from work in legal and institutional theory ([23, 25]), these clusters of norms can be called, respectively, institutive, terminative and status modules.
Logic ELH(◦) is also a fragment of the well investigated description logic EL++ whose satisfiability problem has been shown in [2] to be decidable in polynomial time.
As usual, state types are interpreted as sets of states and transition types as sets of state pairs.
Notice that Formula 13 formalizes at the same time an obligation pertaining to the role buyer and a right pertaining to the role seller.
Here, as well as in the rest of the examples in the paper, we provide just that part of the formalization which is strictly functional to show how the formalism works in practice.
Together with the norm also some intuitive background knowledge about the discrimination action needs to be formalized.
The axiom states that transitions where i receives e10 from j count as transitions of type DISCR(i, j).
Boolean operators are defined as usual.
It is on the contrary perfectly intuitive that Formula 9 obeys the constraints in Formulae 2 and 3, which it does, as it can be easily checked on the grounds of the semantics.
Specifically, institutive and terminative modules can be represented which contain transition types  inclusion axioms.
All formulae have to be read as schemata determining a finite number of subsumption expressions depending on the number of agents i, j considered.
The transition type DISCR(i, j) has been translated to a  complex procedure composed by concrete transition types.
It is the description logic variant of the test operator in Dynamic Logic ([5]).
Formula 15 states how the bidding action can be executed by sending a specific message to j (SEND(i, j, msg49)).
Institutions build structured  descriptions of institutional properties upon brute descriptions of a given domain.
The operator ◦ denotes the concatenation of transition types.
The normative system perspective on institutions is, as such,  nothing original and it is already a quite acknowledged position within the community working on electronic institutions, or eInstitutions ([26]).
By removing the agent identifiers from state types and transition types we  obtain state type forms (e.g., dutch or rea(r)) and transition type form (e.g., PAY).
The following  sections provide a formal analysis of this thesis and show its  explanatory power in delivering a rigorous understanding of key features of institutions.
The remaining sets of terminological axioms Γins\Γbridge and Ains\Abridge are all expressed in Lins.
The Sixth Intl.
In a nutshell, institutions are impositions of institutional terminologies upon brute ones.
(Derived constructs) The correspondence between description logic and dynamic logic is well-known ([3]).
In particular ∀α.γ has to be read as: after all executions of transitions of type α, states of type γ are reached.
Definition 3 shows that for such a design task 1 Symbols from Lins and Lbrute will be indexed (especially with agent identifiers) to add some syntactic sugar.
(Lbrute from a designer"s perspective) From a  design perspective language Lbrute has to be thought of as the  language on which a designer would specify a system instantiating a given institution2 .
In other words, a transition type PAY(j, i, e10) does not intuitively yield the effects that a sub-type of DISCR(i, j) yields.
Following a notational convention common within DL we denote this language with ALCH( ,◦,¬,id) .
630 The Sixth Intl.
(From abstract to concrete norms) Consider an institution supposed to regulate access to a set of public web  services.
An interpreted transition system m is a model of a TBox T = Γ, A if m is a model of each inclusion assertion in Γ and A.
2 To make a concrete example, the AMELI middleware [7] can be viewed as a specification tool at a Lbrute level.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 631 of obligation (Formula 13) makes again use of a standard  reduction approach ([16]).
We advance a precise thesis on this issue, which is also inspired by work in social theory: Now, as the original manner of producing physical  entities is creation, there is hardly a better way to  describe the production of moral entities than by the word ‘imposition" [impositio].
Formula 17 specifies instead the procedure counting as an action of type ENACT(i, r).
Fragments like ELH(◦) could be used as target logics within theory approximation approaches ([24]) by aiming at compiling TBoxes expressed in ALCH( ,◦,¬,id) into approximations in those fragments. 
This section spends a few words about the viability of performing automated reasoning in the logic presented.
What has not been sufficiently investigated and understood with formal methods is, in our view, the question: what does it 628 978-81-904262-7-5 (RPS) c 2007 IFAAMAS amount to, for a MAS, to be put under a set of norms?
∀DISCR(i, j).viol ≡ (1) dutch(j) ∀DISCR(i, j).accepted(j) (2) ¬dutch(j) ∀DISCR(i, j).¬accepted(j) (3) The rest of the axioms concern the translation of the abstract type DISCR(i, j) to concrete transition types.
(Acceptable and unacceptable translations of  abstract norms) Reconsider again the scenario sketched in Example 1.
Tractable (i.e., polynomial time decidable) fragments of logic ALCH( ,◦,¬,id) can however be isolated which still exhibit some key expressive features.
This is the case also in human societies: priests are empowered to give rise to marriages but if a priest is not in state of performing the  required speech acts he is actually unable to marry anybody.
In [12], we have  thoroughly compared this approach with approaches such as [9] which conceive of translation rules as inference rules.
It may contain the following norm: it is forbidden to  discriminate access on the basis of citizenship.
Would any translation do?
More interesting is instead how the notion of institutional power is modeled.
law, computer systems, and many other kinds of organizational structure may be viewed as instances of normative systems.
We will come back to some complexity features of this logic in Section 2.5.
The technical content of the present paper heavily capitalizes on that work.
Despite the very limited expressivity of this fragment, some rudimentary institutional specifications can still be successfully represented.
A formal theory of counts-as statements has been thoroughly  developed in a series of papers among which [10, 13].
The problem is that the meaning of ‘paying" is not intuitively subsumed by the meaning of ‘discriminating".
At this point, the step toward eInstitutions is natural.
In other words, Formulae 14 and 15 express only that agents playing the buyer role are entitled to make bids.
The two examples have shown how our approach can account for some essential features of institutions.
Suppose now a  system has to be built which complies with this norm.
For moral entities do not arise from the intrinsic substantial principles of things but are superadded to things already existent and  physically complete ([21], pp.
Social theory usually thinks of institutions as the rules of the game ([18, 23]).
To assume an  institutional perspective on MASs means therefore to think of MASs in normative terms: [.
The non-logical alphabet on which Ins is specified contains elements of both Lins and Lbrute.
We will come back to this issue in Section 3.
The first question is: what does it mean, in concrete, to discriminate on the basis of citizenship?
The clause for Abridge is analogous.
There is a difference between being entitled to make a bid and being in state of making a bid ([4]).
It is worth noticing that this modeling option is aligned with work on social theory addressing the concept of role such as [20].
In symbols: L(Ins) ⊆ Lins ∪ Lbrute.
In symbols: L(Γins\Γbridge) ⊆ Lins and L(Ains\Abridge) ⊆ Lins.
DEFINITION 2.
.◦an a (with n finite number).
DEFINITION 3.
DEFINITION 1.
Joint Conf.
Joint Conf.
Joint Conf.
We address this issue extensively in Section 33 .
EXAMPLE 2.
EXAMPLE 4.
EXAMPLE 5.
EXAMPLE 1.
REMARK 2.
REMARK 1.
