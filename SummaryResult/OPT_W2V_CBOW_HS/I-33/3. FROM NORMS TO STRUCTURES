The formal  specification of an infrastructure amounts to the formal specification of interaction requirements, that is to say, the specification of which relevant transition types are executable and under what conditions.
Links in a  formal specification of an organizational structure stand therefore for statements of the kind: role r can (ought to, may) execute α w.r.t.
While given a concrete institution an  organizational structure can be in principle fully specified (by  checking for all -finitely many- relevant inclusion statements whether they are implied or not by the institution), it is not possible to  obtain a full terminological specification from an organizational  structure.
In particular, it will become clear how a normative conception of the notion of role relates to a structural one, that is, how the view of roles as a sets of norms (specifying how an agent can enact and deact the role, and what social status it obtains by doing that) relates to the view of roles as positions within social structures.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 633 To translate a given concrete institution into a corresponding  organizational structure we need a function t assigning pairs of roles to axioms.
Exploiting Definition 7, we would obtain a number of  executability laws in the fashion of Formula 20 for all roles in Roles (thus 2|Roles| axioms).
For the sake of simplicity, the following definition will consider only the can and ought-to interaction modalities.
the execution of α  under circumstances γ. Analogously, axioms of the form rea(i, r) rea(j, s) γ ∀¬α.viol(i) (obligation laws) are translated into the pair (r, s) belonging to the obligation dimension (i.e., O) of the organizational structure w.r.t.
A simple infrastructure Inf for that institution could contain for instance the following terminological axioms for any pair of different agents i, j and message type msg: ∃SEND(msg33, i, j).
(Organizational structure) An organizational structure is a multi-graph: OS = Roles, {Cp}p∈Mod, {Op}p∈Mod where: • Mod denotes a set of pairs p = γ : α, that is, a set of state type (condition) and transition type (action) pairs of Lins∪Lbrute with α being an atomic transition-type indexed with a pair (i, j) denoting placeholders for the actor and the recipient of the transition; • C (can) denotes links to be interpreted in terms of the  executability of the related α in γ, whereas O (ought) denotes links to be interpreted in terms of the obligation to execute the related α in γ.
(Correspondence of specifications) A concrete institution CIns = Γ, A is said to correspond to an organizational structure OS (and vice versa) if, for every x ∈ Γ: • x = rea(i, r) rea(j, s) γ ∃α.
(Regimentation via infrastructure specification) Consider Example 3 and suppose the following translation rule to be also part of the institution: BNK(i, j, b) CC(i, j, b) ≡ PAY(i, j, b) (22) condition pay(i, j, b) ≡ rea(i, buyer) rea(j, seller) win bid(i, j, b) (23) The first formula states how the payment can be concretely carried out (via bank transfer or credit card) and the second just provides a concrete label grouping the institutional state types relevant for the norm.
Suppose now a designer to be interested in a system which,  besides implementing an institution, also incorporates an  organizational structure enjoying desirable structural properties such as  flexibility, or robustness6 .
Let us denote with Sub the set of all state type inclusion statements γ1 γ2 that can be expressed on Lins ∪ Lbrute.
role s if γ is the case.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) observations apply also to deontic notions: agents might be allowed to perform certain transactions under some relevant conditions but they might be unable to do so under those same conditions.
For instance, the infrastructural choice formalized in Example 7  implies that for the pair of roles (buyer, seller), it is always the case that (buyer, seller) ∈ C :PAY(i,j,b).
iff t(x) ∈ Cγ:α • x = rea(i, r) rea(j, s) γ ∀¬α.viol(i) iff t(x) ∈ Oγ:α Intuitively, function t takes axioms from Γ (i.e., the set of state type terminological axioms of CIns) and yields pairs of roles.
Function t is a partial function Sub Roles × Roles such that, for any x ∈ Sub if x = rea(i, r) rea(j, s) γ ∃α.
(25) In other words, in states of type condition pay(i, j, b) the only  executable brute actions are BANK(i, j, b) or CC(i, j, b) and,  therefore, PAY(i, j, b) would necessarily be executed.
At this point all the formal means are put in place which allow us to formally represent institutions as well as organizational  structures.
This lies on the fact that in Definition 6 the strictly  terminological information contained in the specification of an institution (eminently, the set of transition type axioms A and therefore the bridge axioms) is lost while moving to a structural description.
This process can be thought of as the inference of structural links from  institutional specifications.
(Concrete institution) A concrete institution obtained by joining the institution Ins = Γins, Ains and the infrastructure Inf = Γinf , Ainf is a TBox CIns = Γ, A such that Γ = Γins ∪ Γinf and A = Ains ∪ Ainf .
This can be recursively done by just adding any new inferred  inclusion x to the previous set of axioms Γ, thus obtaining an  updated institutional specification containing Γ ∪ {x}.
By relating structural links to state type  inclusions it is therefore possible to check whether adding a link in OS results in a stronger institutional specification, that is, if the corresponding inclusion statement is not already implied by Ins.
In other words, an institution can empower agents by means of  appropriate rules but this empowerment can remain dead letter.
That is to say, executability and obligation laws containing the enactment configuration rea(i, r) rea(j, s) as a premise and concerning transition of types α, with i actor and j recipient of the α transition, are translated into role pairs (r, s).
Definition 7 establishes a correspondence between two  essentially different perspectives on the design of open systems allowing for feedbacks between the two to be formally analyzed.
Notice that Definition 7 supports the inference of links in a structure.
(the negation of a is executable exactly in γ states).
This link follows from links (buyer, seller) ∈ C :BNK(i,j,b) and (buyer, seller) ∈ C :CC(i,j,b) on the grounds of the bridge axioms of the institution (Formula 22).
In order to specify a regimentation at the infrastructural level it is enough to state that: condition pay(i, j, b) ≡ ∃(BNK(i, j, b) CC(i, j, b)).
Given a concrete institution CIns, Definition 7 allows a designer to be aware of the impact that specific terminological choices (in particular, the choice of certain bridge axioms) and infrastructural ones have at a structural level.
(executability) or x = rea(i, r) rea(j, s) γ ∀¬α.viol(i) (obligation) then t(x) = (r, s), where α is an atomic transition-type indexed with a pair (i, j).
Interaction modalities can  therefore be of an institutional kind or of a brute kind.
By checking whether a given  inclusion statement of the relevant syntactic form follows from CIns (i.e., the so-called subsumption problem of DL) it is possible, via t, to add new links to the corresponding organizational structure.
In other words, an infrastructure specification states all and only the conditions under which an atomic brute transition type and its negation are executable, which occur in the brute alphabet of the bridge axioms of Ins.
(Infrastructures as TBoxes) An infrastructure Inf = Γinf , Ainf for institution Ins is a TBox on Lbrute such that for all a ∈ L(Abridge) there exist  terminological axioms in Γinf of the following form: γ ≡ ∃a.
Obviously, different infrastructures can be devised for a same  institution giving rise to different concrete institutions which makes precise implementation choices explicit.
State and transition types in Lins ∪Lbrute will be used to label the links of the structure.
By the expressions (r, s) ∈ Cγ:α and (r, s) ∈ Oγ:α we mean  therefore: agents enacting role r can and, respectively, ought to interact with agents enacting role s by performing α in states of type γ.
To give a simple example consider again Example 6 but from a reversed perspective.
This shows, in turn, that the added value of the specification of  institutions lies precisely in the terminological link they establish between institutional and brute, i.e., system level notions. 
(executability laws) are  translated into the pair (r, s) belonging to the executability dimension (i.e., C) of the organizational structure w.r.t.
As shown in [11] such formal representations of organizational structures are of use for investigating the structural properties  (robustness, flexibility, etc.)
Secondly, links should be labeled according to the transition type α they refer to and the conditions γ in which that transition can, ought to, may etc.
It states what can be in concrete done and under what conditions.
We call a concrete institution specification CIns an institution specification Ins coupled with an infrastructure specification Inf.
5 Notice therefore that EL is a seriously restricted fragment of ALC since it does not contain the negation operator for state types  (operators and ∀ remain thus undefinable).
On the one hand (from left to right), it can make  explicit what the structural consequences are of a given institution supported by a given infrastructure.
First of all, it should be clear whether a link  denotes that a certain interaction between two roles can, or ought to, or may etc.
Of particular relevance are the implementation choices concerning abstract norms like the one represented in Formula 13.
3.3 Relating institutions to organizations The Sixth Intl.
Similar 4 This problem amounts to check whether a state description γ is satisfiable w.r.t.
More concretely, axioms of the form rea(i, r) rea(j, s) γ ∃α.
This formal  relation will make explicit how institutions are related to organizational structures and vice versa.
To draw a parallelism with what just said in the previous  paragraph, this process can be thought of as the inference of norms and infrastructural constraints from the specification of organizational structures.
(a is executable exactly in γ states) and γ ≡ ∃¬a.
In other words, it is possible to use institution specifications as inference tools for structural specifications.
We  refer to this kind of problems as infrastructural.
As a result, the following inclusion does not hold with respect to the corresponding concrete institution: condition pay(i, j, b) ∃¬PAY(i).viol(i).
On the other hand (from right to left), it can make explicit what kind of institution is actually  implemented by a given organizational structure.
The implementation of an institution in a concrete system calls therefore for the design of appropriate infrastructures or artifacts ([19]).
These interactions can be depicted as the links of a graph defined on the set of roles of the organization.
Such links are then to be labeled on the basis of the type of interaction they stand for.
From a design perspective the interpretation of Definition 7 is twofold.
3.2 Organizational Structures This section briefly summarizes and adapts the perspective and results on organizational structures presented in [14, 11].
Notice that language ALCH( ,◦,¬,id) contains negation and intersection of arbitrary state types.
(Infrastructure specification) Consider the  institution specified in Example 1.
3.1 Infrastructures In discussing Example 3 we observed how being entitled to make a bid does not imply being in state of making a bid.
The institutive, terminative and status modules of roles are translated into definitions of positions within a OS.
a given TBox T, i.e., to check if there  exists a model m of T such that ∅ ⊂ I(γ).
It then follows on the grounds of Example 1 that agent i can always accept agent j.
(21) Notice that the executability condition is just .
Leaving technicalities aside, function t distills thus the terminological and infrastructural constraints of CIns into  structural ones.
that a given organization exhibits.
(20) The formula states that it is always in the possibilities of agent i to send message No.
A designer can choose to regiment such norm ([15]), i.e., make violation states unreachable, via an appropriate infrastructure.
632 The Sixth Intl.
Definition 7 labels the yielded pairs accordingly to the syntactic form of the translated axioms.
the execution of α under  circumstances γ.
The next and final step of the work consists in providing a formal relation between the two frameworks.
Organizational structures typically concern the way agents  interact within organizations.
It is well-known that if these operators are available then all most typical reasoning tasks at the TBox level can be  reduced to the satisfiability problem.
One last observation is in order.
Suppose a designer wants a fully  connected graph in the dimension C :SEND(i,j) of the organizational structure.
Let us see this in some more details.
We refer to that work for a more comprehensive exposition.
(24) ¬condition pay(i, j, b) ≡ ∃¬(BNK(i, j, b) CC(i, j, b)).
take place.
take place.
33 to agent j.
DEFINITION 6.
DEFINITION 5.
DEFINITION 4.
DEFINITION 7.
Joint Conf.
Joint Conf.
∃ACCEPT(i, j).
EXAMPLE 6.
EXAMPLE 7.
