As in previous section, we can show that B(W, V ) is equal to ˆf(0) ∪ ˆf(B(V, U1) × · · · × B(V, Uk)) ∪ ˆf(1) [0, 1]2 ; also, any path from w = 0 to w = 1 that is a subset of B(W, V ) constitutes a valid breakpoint policy.
, n, let the payoffs of Sk and Tk be the same as those for the U and V described in Section 3; recall that the  breakpoint policies for U and V are shown in Figure 2.
Fix k < n, and let u, t, v, and w denote the  strategies of Vk−1, Tk, Vk, and Vk+1, respectively.
For any two-pass algorithm A for which there exists an index j, j ∈ [1, n/4], a segment S of B(Vj , Vj−1), and an interior point (x, y) of S such that BB(Vj, Vj−1) does not contain (x, y), we can choose payoff matrices of the vertices Vj, .
This set is  produced from the sets {BB(V, U) | U is a child of V } by  applying the procedure from the beginning of Section 6  (substituting BB(V, Uj ) for B(V, Uj) for all children Uj of V ) , and then possibly omitting some of the points of the resulting set (which is then stored explicitly).
, uk) that can be represented as a ratio of two multilinear functions f1, f2, i.e., f = f1(u1,...,uk) f2(u1,...,uk) , there exist payoff matrices P0 and P1 for V such that P[0] − P[1] = wf2(u1, .
To describe ˆf(0)∩[0, 1]×{0}, note that f(u, t) = .5t+.1u+.2 is monotone in t and u and satisfies f(0, 0) = .2.
The proof of this lemma is based on the fact that every monomial of the form as(u0)s0 .
Theorem 7 demonstrates that any two-pass algorithm will fail during the downstream pass on Tn if there is an index j such that the set BB(Vj+1, Vj) omits any interior point of any of the (at least 3j ) segments of B(Vj+1, Vj).
To complete the construction, we need to show that we can  design the payoff matrix for Vk so that it prefers playing 0 to playing 1 if and only if .5t + .1u + .2 > w. To this end, we prove a more general statement, namely, that the indifference function of a vertex can be an arbitrary fractional multilinear function of its descendants" strategies.
Define S1 = {(f(u, 0), v) | (v, u) ∈ B(Vk, Vk−1) ∩ [0, .9]×[0, 1]}, S2 = {(f(u, .5), v) | (v, u) ∈ B(Vk, Vk−1) ∩ [.1, .9]×[0, 1]}, S3 = {(f(u, 1), v) | (v, u) ∈ B(Vk, Vk−1) ∩ [.1, 1]×[0, 1]}; these sets correspond to horizontal segments of B(Vk, Tk).
Moreover, {(v, w) | (v, w) ∈ B(Vk+1, Vk), 0 ≤ w ≤ .2} = [0, .2]×{0} and {(v, w) | (v, w) ∈ B(Vk+1, Vk), .8 ≤ w ≤ 1} = [.8, 1]×{1}.
We assume that the degree of each vertex is bounded by a constant K, i.e., the payoff matrix for each vertex is of size O(2K ).
Finally, the set B(Vk+1, Vk) contains two segments that  correspond to the vertical segments of B(Vk, Tk), i.e., S4 = {(f(0, t), .1) | t ∈ [.5, 1]) = [.45, .7]×{.1} and S5 = {(f(1, t), .9) | t ∈ [0, .5]) = [.3, .55]×{.9}.
More precisely, we say that an  algorithm A is a two-pass algorithm if 0 0 0 00 0 0 0 0 00 0 0 0 0 00 0 0 0 0 1 1 1 11 1 1 1 1 11 1 1 1 1 11 1 1 1 1 0000000000000000000000000000011111111111111111111111111111 0.2 0.8 0.9 1 0.1 1 V V 2 3 S 1 S S S S 1 T 0 T 2 3 4 5 Figure 7: Breakpoint policy for V2.
Moreover, in our example the breakpoint policies coincide with the best response policies, which means that even finding a single Nash equilibrium using the approach of [8, 9] is going to take  exponentially long time.
We conclude that B(Vk+1, Vk) 106 0 00 00 00 00 00 00 00 00 00 0 1 11 11 11 11 11 11 11 11 11 1 00000000001111111111 1 1 10.8 1 1 0.9 0.1 V V0.5 0.2 V V 21 10 Figure 6: Breakpoint policies for V0 and V1.
S 1 1 T S n−1 00 0000 11 1111 00 0000 11 1111 00 0000 11 1111 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 0 00 1 11 00 0000 11 1111 00 0000 11 1111 0 00 1 11 0000 00000000 00000000 0000 1111 11111111 11111111 1111 000 000000 000000 000 111 111111 111111 111 S S T T T 2 n−1 n 2 n 1 n−12 n VVVVV 0 Figure 5: The tree Tn that corresponds to exponential-size breakpoint policy.
, uk) be the expected payoff obtained by this  vertex when it plays j and the (mixed) strategies of its neighbours are given by a vector (w, u1, .
Recall that the payoffs of a  vertex with k + 1 neighbours are described by matrices P0 and P1 , where Pj i0i1...ik is the payoff that V gets when it plays j, and its neighbours play i0, .
, uk) and define the indifference  function f : [0, 1]k → [0, 1] as f(u) = A(u)/B(u); clearly, if each Uj plays uj, W plays w and w = f(u), V is indifferent between playing 0 and 1.
, ik are independent Bernoulli random variables, each of which is 1 with the respective probabilities w, u1, .
, Uk and whose parent is W ; the best response policy of each Uj is B(V, Uj).
For any X = X1 × · · · × Xk, where Xi ⊆ [0, 1]2 define ˆf(X) = {(f(u), v) | (v, ui) ∈ Xi, i = 1, .
• The downstream pass is identical to the downstream pass of [8] as described in Section 2 except that it operates on the sets BB(W, V ) rather than on the sets B(W, V ).
In fact, the converse is true: we can construct a family of trees and payoff  matrices for all players so that the best response policies for some of the players consist of an exponential number of segments.
For the inductive step, the main idea is that we can zoom in on any part of a best response policy (including the part that was omitted!)
In fact, a stronger statement is true: for any polynomial-time two-pass algorithm (defined later) that works with subsets of best response policies for this graph, we can choose the payoffs of the vertices so that the downstream pass of this algorithm will fail.
The payoff of V0 is 1 if V1 selects the same action as V0 and 0 otherwise; V0"s best response policy is given by Figure 6.
For any w ∈ [0, 1] we have f(0, 0) ≥ w if and only if w ∈ [0, .2].
, Uk, for any function f = f(u1, .
Namely, when each of the Uj plays uj and W plays w, we have P0 = L0 (u1, .
• During the upstream pass, for each vertex V with parent W , A constructs a set BB(W, V ) ⊆ B(W, V ).
We say that a function of k variables is multilinear if it can be represented as a sum of monomials and each of these monomials is linear in all of its variables.
Since f is a continuous function, the number of segments in each Si is at least the number of segments in B(Vk, Vk−1)∩[.1, .9]×[0, 1], which is at least 3k−1 by induction hypothesis.
One can view B(Vk+1, Vk) as a union of seven components: ˆf(0) ∩ [0, 1]×{0}, ˆf(1) ∩ [0, 1]×{1}, and five components that correspond to the segments of B(Vk, Tk).
, uk, w), where the  functions L0 (·, .
ui ∈ pbrUi (1) and wB(u) ≤ A(u)}.
6.2 Irreducibility of the Best Response Policy for Tn While the best response policy constructed in the previous  subsection has exponential size, it is not clear `a priori that it is  necessary to keep track of all of its line segments rather than to focus on a small subset of these segments.
(ARBITRARY) TREE For arbitrary trees, the general structure of the algorithm remains the same, i.e., one can construct a best response policy (or,  alternatively, a breakpoint policy) for any vertex based on the best  response policies of its children.
Given a tree vertex V whose parent is W and whose children are U1, .
Suppose that Vk prefers playing 0 to playing 1 if and only if .5t + .1u + .2 > w. Then B(Vk+1, Vk) consists of at least 3k segments.
For every k = 1, .
Moreover, as f is monotone in u and f(1, 0) < f(0, .5) < f(1, .5) < f(0, 1), all Si, i = 1, 2, 3, are disjoint.
ui ∈ pbrUi (0) and wB(u) ≥ A(u)} and ˆf(1) = {(w, 1) | ∃u s.t.
Similarly to the previous section, we can compute V "s expected payoffs P0 and P1 from playing 0 or 1, respectively.
Set u = (u1, .
, sk ∈ {0, 1}, can be  represented as t=t0...tk∈Σk+1 Ct(u0)t0 (1 − u0)1−t0 .
Note that this definition is different from a more standard one in that we do not require that all of the monomials have the same degree.
(uk)tk (1 − uk)1−tk for some Ct, t ∈ {0, 1}k+1 .
Consider a vertex V whose children are U1, .
We conclude that ˆf(0) ∩ [0, 1]×{0} = [0, .2]×{0}.
Similarly, it follows that ˆf(1) ∩ [0, 1]×{1} = [.8, 1]×{1}.
, uk), where both A(·, .
However, it turns out that for two-pass algorithms such as the algorithm of [8], the best response policy cannot be simplified.
Hence, the inequality P0 > P1 can be rewritten as wB(u1, .
, k} Also, set ˆf(0) = {(w, 0) | ∃u s.t.
It is not hard to see that the indifference function for Tk is given by f(s) = .8s+.1.
6.1 Exponential Size Breakpoint Policy While the algorithm of Section 4 can be generalized for  boundeddegree trees, its running time is no longer polynomial.
Let P[j] = P[j](w, u1, .
is a continuous line that consist of at least 3k segments and satisfies the condition of the lemma.
, uk), i.e., P[j] = E[P j i0i1...ik ] where i0, .
by using an appropriate indifference function; this allows us to reduce the case j = j0 to j = j0 − 1. 
, uk, w), P 1 = L1 (u1, .
Now, suppose it is true for B(Vk, Vk−1).
, uk) > A(u1, .
, uk) − f1(u1, .
Also, we have pbrVk−1 (0) = {0} and pbrTk (0) = {0}.
The proof proceeds by induction on k. For k = 0, the statement is obvious.
It is easy to see that S1, S2, S3 ⊂ B(Vk+1, Vk).
, ik ∈ {0, 1}.
For j = 1, the argument is similar to that in Section 3.
, ·) are linear in all of their  arguments.
, ·) are linear in all of their arguments.
Consider the tree Tn given by Figure 5; let Vn be the root of this tree.
, Vn so that the downstream pass of A will fail, and, additionally, payoffs to V4j , .
, Vn are identically 0.
(uk)sk , s1, .
This implies Theorem 3.
Clearly, S4 connects S2 and S3, S5 connects S1 and S2, and S4 and S5 do not intersect each other.
, ·) and B(·, .
• A consists of an upstream pass and a downstream pass.
LEMMA 3.
, ik, and j, i0, .
LEMMA 4.
We proceed by induction.
We sketch the proof of Theorem 7; the details can be found in the full version of this paper [6].
THEOREM 7.
In the rest of this subsection, we describe this construction.
, ·), L1 (·, .
Let us examine them in turn.
The details can be found in the full version of this paper [6].
