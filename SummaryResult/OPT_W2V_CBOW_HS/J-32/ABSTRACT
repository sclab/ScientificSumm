It has recently been shown that the problem of finding Nash equilibria in a general degree-3 graphical game with two actions per player is complete for the complexity class PPAD, indicating that it is unlikely that there is any polynomial-time algorithm for this problem.
This setting was first considered by Kearns, Littman and Singh, who  proposed a dynamic programming-based algorithm that computes all Nash equilibria of such games.
Moreover, our algorithm can be used to compute Nash equilibria of graphical games on arbitrary trees, but the running time can be exponential, even when the tree has bounded degree.
Later, Littman, Kearns and Singh proposed a modification to this algorithm that can find a single Nash equilibrium in  polynomial time.
It is an open question whether our algorithm runs in polynomial time on graphs with pathwidth 1, but we show that finding a Nash  equilibrium for a 2-action graphical game in which the underlying graph has maximum degree 3 and constant pathwidth is PPAD-complete (so is unlikely to be tractable).
We show that this is inevitable - any algorithm of this type will take  exponential time, even on bounded-degree trees with pathwidth 2.
In this paper, we study the complexity of graphical games with two actions per player on bounded-degree trees.
and computes all Nash equilibria in quadratic time if the input graph is a path, and in polynomial time if it is an arbitrary graph of maximum degree 2.
The running time of their algorithm is exponential, though approximate equilibria can be computed  efficiently.
When the number of players is large, and the underlying graph has low degree, they provide a concise way to represent the players"  payoffs.
Graphical games have been proposed as a game-theoretic model of large-scale distributed networks of non-cooperative agents.
We show that this modified algorithm is incorrect - the output is not always a Nash equilibrium.
We then propose a new algorithm that is based on the ideas of Kearns et al.
Categories and Subject Descriptors F.2 [Theory of Computation]: Analysis of Algorithms and  Problem Complexity; J.4 [Computer Applications]: Social and  Behavioral Sciences-economics General Terms Algorithms, Economics, Theory 
