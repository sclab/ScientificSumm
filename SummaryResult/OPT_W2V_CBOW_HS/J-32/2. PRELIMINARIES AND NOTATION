When a node V is instructed by its parent to adopt mixed strategy v, it does the  following for each child U - It finds a pair (v, u) ∈ B(V, U) (with the same v value that it was given by its parent) and instructs U to play u. 
Suppose that (V, W ) is an edge of the tree, that v is a mixed strategy for V and that w is a mixed strategy for W .
Given an edge (V, W ) of the tree G, and a mixed strategy w for W , let G(V,W ),W =w be the instance obtained from G by (1) deleting all nodes Z which are separated from V by W (i.e., all nodes Z such that the path from Z to V passes through W ), and (2) restricting the instance so that W is required to play mixed  strategy w. Definition 1.
Typically, W is the parent of V , and this is just referred to as the best response policy for V .
101 We say that v is a potential best response to w (denoted by v ∈ pbrV (w)) if there is an equilibrium in the instance G(V,W ),W =w in which V has mixed strategy v. We define the best response policy for V , given W , as B(W, V ) = {(w, v) | v ∈ pbrV (w), w ∈ [0, 1]}.
With the above assumptions about the root, the downstream pass is straightforward: Let W denote the root and V denote its child.
The root selects any pair (w, v) from B(W, V ).
Each vertex has two actions, which are denoted by 0 and 1.
The upstream pass of the generic algorithm of [8] computes the best response policy for V for every node V other than the root.
For convenience, we assume without loss of generality that the root has a single child, and that its payoff is independent of the action chosen by the child.
This can be achieved by first choosing an arbitrary root of the tree, and then adding a dummy parent of this root, giving the new parent a constant payoff function.
A mixed strategy is given by a single number x ∈ [0, 1], which denotes the probability that the player selects action 1.
It decides to play mixed strategy w and it instructs V to play mixed strategy v. The remainder of the downward pass is recursive.
The expression B(W, V )|V =v is used to denote the set B(W, V ) ∩ [0, 1]×{v}.
Fur the purposes of the algorithm, the tree is rooted arbitrarily.
We consider graphical games in which the underlying graph G is an n-vertex tree.
