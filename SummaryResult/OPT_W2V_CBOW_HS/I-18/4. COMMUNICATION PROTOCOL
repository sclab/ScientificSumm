Only the set of the agents knowing K may have changed because agents si and sj may have already transmitted the information to other agents.
If K is already known, it is updated if the content or the set of agents knowing it have been modified.
An internal update from si at time t ∈ T is  performed: - when knowledge K is created; - when data(K) is modified.
An agent notifies any change within its  knowledge and each agent must propagate these changes to its vicinity who update their knowledge bases and reiterate the process.
Let si and sj two agents meeting at time t ∈ T. For agent si, the complexity of  Protocol 1 is O(|Rt si | + |Rt si |.|S| | {z } emission + |Rt sj | + |Rt sj |.|S| | {z } reception ) For each received piece of information, agent si uses Protocol 3 and searches through its knowledge bases: |Rt si | pieces of information for each received request and |Rt si |.|S| pieces of 2 Communicating endlessly without converging.
Once an internal update is made - i.e.
Two objects that are too close to each other cannot be collected by the same agent because the action takes some time and an agent cannot stop its movement.
For the worst case, each agent sk sends |Rt sk | pieces of information on requests and |Rt sk |.|S| pieces of  informations on candidacies (one candidacy for each request and for each agent of the swarm).
4.4.2 Complexity It has been shown that in a set of N agents where a  single one has a new piece of information, an epidemic protocol takes O(logN) steps to broadcast the information [33].
The temporal complexity of a  communication occurrence at time t ∈ T between two agents si and sj is, for agent si, O(|Rt si |.|Rt sj |.|S|2 ) Proof 1.
Consequently, the complexity of Protocol 3 is O(|Rt sj |.|Rt si | + |Rt sj |.|Rt si |.|S|2 ) Thus, the temporal complexity of a communication  occurrence is: O(|Rt si | + |Rt si |.|S| + |Rt sj |.|Rt si | + |Rt sj |.|Rt si |.|S|2 )) Then: O(|Rt si |.|Rt sj |.|S|2 ) 
- ∀ K ∈ Kt si received by sj at time t: 1. sj updates Kt sj with K 2. sj acknowledges receipt of K to si.
∀ K ∈ K, the external update at time t ∈ T is defined as follows: 1. if ∃ K ∈ Kt si such as iddata(K) = iddata(K ) then a. if tK ≥ tK then i. if tK > tK then SK ← SK ∪ {si} ii.
Kt si ← (Kt si \{K }) ∪ {K} 2. else a. Kt si ← Kt si ∪ {K} b. SK ← SK ∪ {si} The Sixth Intl.
For an internal update, updating K depends on data(K): a candidacy C is modified when its modality changes and a request R is modified when an agent realizes it.
Let si be an agent and K the knowledge transmitted by agent sj.
Two kinds of updates exist for an agent: - an internal update from a knowledge modification by the agent itself; - an external update from received knowledge.
When s1 meets s2, it communicates the list of the objects it knows, that is to say A. s2 now believes that A exists and prepares to collect it.
Consequently, it replaces the old information by the new one and adds itself to the set of agents knowing K (1.a.i).
During one step, each agent has a communication occurrence.
In the vicinity of s2, s3  communicates its list of objects and A is not in the list.
Knowledge K is a tuple < data(K), SK , tK >: - data(K) is a request R or a candidacy C; - SK ⊆ S is the set of agents knowing K; - tK ∈ T is a temporal timestamp.
In the sequel, we will note Kt si the knowledge of agent si at time t ∈ T. 4.3 An epidemic protocol From the corridor metaphor, we can define a  communication protocol that benefits from all the communication  opportunities.
∀ K ∈ Kt si such as sj ∈ SK : a. si communicates K to sj b. if sj acknowledges receipt of K, SK ← SK ∪ {sj}.
Consequently, an internal update can only be performed once.
Each agent selects a set of agents at a given time in order to share information.
Thus for each candidacy, there exists a date t ∈ T when changes will propagate no more.
on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 289 If the incoming information has a more recent timestamp, it means that the receiver agent has obsolete information.
As both agents meet in a place where it is possible for s3 to have collected A, the object would have been in the list if it had not been collected.
Indeed, a request R can only be in two states (realized or not) given by the boolean bR.
As far as candidacies are concerned, updates only modify the modalities, which may change many times and go back to previous states.
4.2 Knowledge to communicate In order to build up their plans, agents need to know the current requests and the others agents" intentions.
Let si be an agent in S. ∀t ∈ T: - ∀ sj ∈ Vicinity(si, t), si executes: 1.
If K is unknown, it is simply added to the agent"s knowledge.
In order to optimize the collection, the agents can communicate when they meet.
However, a candidacy C is associated to a request and a realization date (the deadline given by obsC ).
It is not certain that A is still there because another agent may have passed before s2, but it can take it into account in its plan.
Various agents go to and fro in a corridor where objects to collect appear from time to time.
For an external update, only the most recent knowledge K is taken into account because timestamps change only when data(K) is modified.
information for each received candidacy.
If both timestamps are the same, both pieces of  information are the same.
As agents do not have much time to communicate, such a communication occurrence must not have a too big temporal complexity, which we can prove formally: Proposition 1.
Consequently, the sets of agents knowing K are unified (1.a.ii).
R is realized - R cannot go back to its former state.
Let si ∈ S be an agent.
4.4.1 Convergence The structure of the transmitted information and the  internal update mechanism (Protocol 2) allow the process to converge.
Deliberative agents need communication to cooperate,  whereas it is not necessarily the case for reactive agents [2, 41].
For each agent two kinds of knowledge to maintain are defined: - requests (Definition 2); - candidacies (Definition 3).
When K is updated, the timestamp is updated too.
At time t, s1 did not collect A and s2 does not know that A exists.
After the deadline, the candidacy becomes meaningless.
s2 can thus believe that A does not exist anymore and can withdraw it from its plan.
4.4 Properties Communication between two agents when they meet is made of the conjunction of Protocol 1 and Protocol 3.
The speed of information transmission is contingent upon the length of the discussion round.
Let us suppose three agents, s1, s2, s3 and an object A to be collected.
Protocol 3 (External update).
At time t , s3 collects A.
Protocol 2 (Internal update).
Then it seems that livelocks2 would be likely to appear.
Communication is commonly associated with cooperation.
4.1 The corridor metaphor The suggested protocol is inspired from what we name the corridor metaphor, which represents well the satellite swarm problem.
SK ← {si}.
In both cases: 1. tK ← t; 2.
In the sequel, we call this conjunction a communication occurrence.
This protocol is a variant of epidemic protocols [22] inspired from the work on overhearing [27].
Gossip protocols [22, 24], or epidemic protocols, are used to share knowledge with multicast.
Protocol 1 (Communication).
S 2 S ABel A 1 A 3S Figure 1: Time t 1 S 2S Bel non A 3S Figure 2: Time t Example 1.
if tK = tK then SK ← SK ∪ SK iii.
Joint Conf.
Definition 5 (Knowledge).
