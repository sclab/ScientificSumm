Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.
An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves.
[7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.
It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.
We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.
We believe, that for the support of group interaction, the status of the group itself has also be taken into account.
The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.
89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.
New situations appear, where the user"s context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.
This is achieved by so-called entities, which describe  objectse.g.
Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.
Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.
In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.
First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.
These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).
Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.
This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.
a human user - that are important for a certain context scenario.
Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now.
Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).
To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.
Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.
Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.
We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.
With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.
Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.
Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.
In order to do this, there are a few layers between (see Figure 1).
A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.
Support for Mobile Groups [6] Most of today"s context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].
In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.
The communication between entities and attributes is based on context events.
XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.
This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms.
[4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.
Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.
Group interaction includes all means that enable group members to communicate freely with all the other members.
1.1 What is Context Computing?
[9] defines context as the user"s location, environment, identity and time.
1.3 Context Middleware The Group Interaction Support System (GISS) uses the  softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.
The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.
The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.
First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.
It does this by communicating work context, agenda and workspace information to the users.
When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.
At this point, the question how context information can be used for supporting group interaction comes up.
In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).
Each entity can contain a collection of such attributes, where an entity itself is an attribute.
This provides a comprehensive description of a user"s current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.
Therefore, we have added a fifth  contextdimension group-context, which comprises more than the sum of the individual member"s contexts.
Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.
Chapter 5 gives a final summary of our work.
[4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.
Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or  ECArules at runtime. 
Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.
Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.
According to this definition, [4] defines a system to be  contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the user"s task.
According to Merriam-Webster"s Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.
The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.
Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).
A software framework for developing  contextsensitive applications is presented, which serves as middleware for GISS.
Finally, the stored context information is used to trigger certain context events (context triggering).
Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.
day of birth or e-mail address).
For example, if we know a person"s identity, we can easily derive related information about this person from several data sources (e.g.
These attributes are complex pieces of software, which are implemented as Java classes.
In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc.
Most definitions of context are done by enumerating examples or by choosing synonyms for context.
Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.
Today"s computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.
These rules are referenced by the entity"s XML configuration.
Figure 2.
Figure 1.
