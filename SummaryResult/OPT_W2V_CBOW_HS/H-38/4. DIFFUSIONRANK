For such f(0) in a random graph, we can find the heat distribution at time 1 by using Eq.
The heat  distribution is exactly the i−th row of the matrix of (I + γ N R)N or eγR .
(6) in the case of a random graph, in which f(0) is set to be a special initial heat  distribution so that the trusted Web pages have unit heat while all the others have zero heat.
By such a setting, DiffusionRank is a generalization of TrustRank when γ tends to infinity and when g is set in the same way as TrustRank.
, js), then for each page i, v hi,jv is the heat that page i receives from G2, and can be computed by the discrete approximation of Eq.
1 (b) is an undirected graph, and so we employ the Eq.
When γ tends to infinity and f(0) is not the zero vector, eγR f(0) is proportional to the stable distribution produced by PageRank.
When γ = 0, the ranking value is most robust to manipulation since no heat is diffused and the system is unchangeable, but the Web structure is  completely ignored since eγR f(0) = e0R f(0) = If(0) = f(0); when γ = ∞, DiffusionRank becomes PageRank, it can be manipulated easily.
Algorithm 1 DiffusionRank Function Input: The transition matrix A; the inverse transition  matrix U; the decay factor αI for the inverse PageRank; the decay factor αB for PageRank; number of iterations MI for the inverse PageRank; the number of trusted pages L; the thermal conductivity coefficient γ.
The intuition behind is that the amount h(i, j) of heat that a page vi receives from a unit heat in a page vj in a unit time embodies the extent of the link connections from page vj to page vi.
, n}, s) 6: d = 0, Count = 0, i = 0 7: while Count ≤ L do 8: if π(i) is evaluated as a trusted page then 9: d(π(i)) = 1, Count + + 10: end if 11: i + + 12: end while 13: d = d/|d| 14: h = d 15: Find the iteration number MB according to λ 16: for i = 1 TO MB do 17: h = (1 − γ MB )h + γ MB (αB · A · h + (1 − αB) · 1 n · 1) 18: end for 19: RETURN h 4.1 Algorithm For the ranking task, we adopt the heat kernel on a  random graph.
These results are normalized by the total number of each group, and the edges are ignored if the values are less than 0.000001.
Although the inverse PageRank is not perfect in its  ability of determining the maximum coverage, it is appealing because of its polynomial execution time and its  reasonable intuition-we actually inverse the original link when we try to build the seed set from those pages that point to many pages that in turn point to many pages and so on.
In our model, g should be the true teleportation determined by the user"s browse habits, popularity distribution over all the Web pages, and so on; P should be the true model of the random nature of the World Wide Web.
Output: DiffusionRank score vector h. 1: s = 1 2: for i = 1 TO MI do 3: s = αI · U · s + (1 − αI ) · 1 n · 1 4: end for 5: Sort s in a decreasing order: π = Rank({1, .
In both settings, we can easily divide the graph into two parts: {1, 2, 3, 4, 5, 6, 7} with positive temperatures and {8, 9, 10, 11, 12} with  negative temperatures.
Roughly speaking, when there are more uncrossed paths from vj to vi, vi will receive more heat from vj; when the path length from vj to vi is shorter, vi will receive more heat from vj; and when the pipe connecting vj and vi is wide, the heat will flow quickly.
While it is a natural application for DiffusionRank because of the easy interpretation by the amount heat from one group to another group, it is difficult to apply other ranking techniques to such an application because they lack such a physical meaning.
We also observe that if γ = 1, λ < 1, then |(1+ γ(λ−1) N )N − eγ(λ−1) | < 0.005 if N ≥ 100, and |(1+ γ(λ−1) N )N −eγ(λ−1) | < 0.01 if N ≥ 30.
(7), we have (I+ γ N R)N = (I+ γ N (−I+ P))N = S−1      1 ∗ ∗ ∗ 0 (1 + γ(λ2−1) N )N ∗ ∗ 0 0 ... ∗ 0 0 0 (1 + γ(λn−1) N )N      S. (9) Comparing Eq.
After time 1, if we set γ = 0.5, the heat distribution is [0.25, 0.16, 0.17, 0.16, 0.15, 0.09, 0.01, -0.04, -0.18 -0.21, -0.21, -0.34], and if we set γ = 1, it will be [0.17, 0.16, 0.17, 0.16, 0.16, 0.12, 0.02, -0.07, -0.18, -0.22, -0.24, -0.24].
, |λn| < 1, we can find an invertible matrix S = ( x S1 ) such that S−1 PS =      1 ∗ ∗ ∗ 0 λ2 ∗ ∗ 0 0 ... ∗ 0 0 0 λn      .
Formally the DiffusionRank is described in  Algorithm 1, in which,the element Uij in the inverse transition matrix U is defined to be 1/Ij if there is a link from i to j, and 0 otherwise.
Then u,v hiu,jv is the total amounts of heat that G1 receives from G2, where hiu,jv is the iu−th row jv−th column element of the heat kernel.
γ is set to be 1, the numbers in Fig.
(6), by which we need N iterations and for each  iteration we need a multiplication operation between a matrix and a vector, while in Eq.
, 0, which means that 1 is the only nonzero eigenvalue of eγR when γ → ∞.
Assume the n − 1 other eigenvalues of P are |λ2| < 1, .
If we know that node 1 belongs to one  community and that node 12 belongs to another community, then we can put one unit positive heat source on node 1 and one unit negative heat source on node 12.
Based on the fact that the connection from a trusted page to a bad page should be weak-less uncross paths, longer distance and  narrower pipe, we can say DiffusionRank can resist web spam if we can select trusted pages.
4.2.3 Graph cut Third, it can be used to partition the Web graph into several parts.
By the Perron Theorem [11], we have shown that 1 is the largest eigenvalue of P = [(1 − α)g1T + αA], and that no other eigenvalue whose absolute value is equal to 1.
So the ith-row jth-column element hij in the matrix (I + γ∆tR)N or eγR means the amount of heat that vi can receive from vj from time 0 to 1.
(4) in the case of a static graph or Eq.
Setting g according to the trusted pages will not be consistent with the basic idea of Heat Diffusion on a random graph.
Therefore both x and eγR f(0) are the eigenvectors corresponding the unique eigenvalue 1 of eγR when γ → ∞, and consequently x = ceγR f(0).
The initially trusted people are endowed with the power to decide who can be further trusted, but cannot decide the final voting results, and so they are not dictators.
Let x be the stable distribution, and so Px = x. x is the eigenvector corresponding to the eigenvalue 1.
The graph in Fig.
As a result, R = −I + P. In fact, the more general setting for DiffusionRank is P = αB ·A+(1−αB)· 1 n ·g·1T .
(a) Group to Group Relations (b) An undirected graph Figure 1: Two graphs 4.2.2 Group-group relations Second, it can be naturally employed to detect the  groupgroup relation.
In doing so, manipulated Web page will get a lower rank unless it has strong in-links from the trusted Web pages directly or indirectly.
For such an application of  DiffusionRank, the computation complexity for Discrete  Diffusion Kernel is the same as that for PageRank in cases of both a static graph and a random graph.
Let fi(0)= 1, fj(0) = 0 if j = i, then the vector f(0) represent the unit heat at node vi while all other nodes has zero heat.
(7) Since eγR = eγ(−I+P) = S−1      1 ∗ ∗ ∗ 0 eγ(λ2−1) ∗ ∗ 0 0 ... ∗ 0 0 0 eγ(λn−1)      S, (8) all eigenvalues of the matrix eγR are 1, eγ(λ2−1) , .
Then the problem about determining N-the number of iterations arises: For a given threshold , find N such that ||((I + γ N R)N − eγR )f(0)|| < for any f(0) whose sum is one.
1 (a) are the amount of heat that they diffuse to each other.
We can see that when γ → ∞, eγR eγR f(0) = eγR f(0), and so eγR f(0) is an eigenvector of eγR when γ → ∞.
This trusted pages selection procedure by inverse PageRank is completely borrowed from TrustRank [7] except for a fix number of the size of the trusted set.
γ is the thermal conductivity-the heat diffusion coefficient.
For a random graph, the matrix (I + γ N R)N or eγR can measure the similarity relationship between nodes.
For a static graph, similarly the matrix (I + γ N H)N or eγH can measure the similarity relationship between nodes.
In a social network interpretation,  DiffusionRank first recognizes a group of trusted people, who may not be highly ranked, but they know many other people.
One takes the discrete form, and has the  advantage of fast computing while the other takes the continuous form, and has the advantage of being easily analyzed in  theoretical aspects.
(1) we also need a multiplication operation between a matrix and a vector for each iteration.
= x since Rx = (−I + P)x = −x + x = 0, and hence x is the eigenvector of eγR for any γ.
The final heat that vi receives will depend on various paths from vj to vi, their length, and the width of the pipes.
, fn(1))T , finally we sum those fj(1) where j ∈ {i1, i2, .
More specifically, we need to first set f(0) for such an application as follows.
In the extreme case, if it is infinitely large, then heat will diffuse from one node to other nodes immediately, and this is exactly the case corresponding to PageRank.
In the algorithm, the underlying random graph is set as P = αB · A + (1 − αB) · 1 n · 1n×n, which is induced by the Web graph.
4.4 The Number of Iterations While we enjoy the advantage of the concise form of the exponential heat kernel, it is better for us to calculate  DiffusionRank by employing Eq.
1 (a) shows the results generated by the DiffusionRank.
For directed graphs and random graphs, similarly we can cut them by employing corresponding heat solution.
For example, let G2 and G1 denote two groups, containing pages (j1, j2, .
In this paper, we use the relatively accurate setting N = 100 to make the real eigenvalues in (I + γ N R)N − eγR less than 0.005. 
We propose a heuristic method to determine N so that the difference between the eigenvalues are less than a threshold for only positive λs.
Thus the value hij can be used to measure the similarity from vj to vi.
Then we employ Eq.
Next we discuss how to determine the number of iterations if we employ the discrete heat kernel.
We expect an appropriate setting of γ that can balance both.
Let g = 1 n 1.
4.3 The Physical Meaning of γ γ plays an important role in the anti-manipulation effect of DiffusionRank.
When γ → ∞, they become 1, 0, .
(9), we observe that the  eigenvalues of (I + γ N R)N − eγR are (1 + γ(λn−1) N )N − eγ(λn−1) .
So we can set N = 30, or N = 100, or others according to different accuracy requirements.
By this theorem, we see that DiffusionRank is a  generalization of PageRank.
When R = −I+P, by Eq.
Conversely, if it is small, heat will diffuse slowly.
Let G2 contain trusted Web pages (j1, j2, .
We simply set g = 1 only because we cannot find it without any priori knowledge.
This can be seen in Eq.
If it has a high value, heat will  diffuse very quickly.
4.2.1 Two closed forms First, its solutions have two forms, both of which are closed form.
, js}, then fi(0) = 1, and 0 otherwise.
However, the second part of TrustRank is not adopted by us.
The group-to-group relations are therefore detected, for example, we can see that the most strong  overall tie is from EE to IE.
On the other hand, eγR x = (I+γR+γ2 2!
For this, we have no theoretical result, but in practice we find that γ = 1 works well in  Section 5.
(5) to calculate f(1) = (f1(1), f2(1), .
(5) or Eq.
It is fortunate that the trusted pages selection method in [7]-the first part of TrustRank can help us to fulfill this task.
)x = Ix+γRx+γ2 2!
(6) in an iterative way.
(8) and Eq.
A quick example is shown below.
, fn(0))T , if i ∈ {j1, j2, .
In f(0) = (f1(0), f2(0), .
Next, we will interpret it mathematically.
4.2.4 Anti-manipulation Fourth, it can be used to combat manipulation.
The theoretical advantage has been shown in the proof of theorem in the next section.
, it), respectively.
Since it is difficult to solve this problem, we propose a heuristic motivated by the following observations.
The situation is quite different for PageRank because PageRank is  inputindependent as we have shown in Section 3.1.
, js) and (i1, i2, .
Theorem 1.
4.2 Advantages Next we show the four advantages for DiffusionRank.
We consider five groups-five departments in our Engineering Faculty: CSE, MAE, EE, IE, and SE.
, eγ(λn−1) .
R3 x + .
R2 x+ γ3 3!
R2 +γ3 3!
