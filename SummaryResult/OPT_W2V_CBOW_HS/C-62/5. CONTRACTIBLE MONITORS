This means that node i (or possibly its children) will have to combine the proofs that they receive to generate a proof of the rest of path quality.
To do this, we will require our third and final category of monitor: A contractible monitor is simply a verifiable monitor that generates proofs that can serve as input to a contract.
Proof: Because nodes cannot verify the data path, they cannot form a proof of what the rest of path quality is.
To prove the next claim, we must broaden our notion of rest of path monitoring to include the similar ROPc" monitor, which attests to the quality starting at its own node, through the end of the path.
This argument can be iterated along the entire path to the penultimate node before D. Since the marginal costs and qualities can be arranged to make any path the optimal path, these statements must hold for all nodes and their children, which completes the proof.
By the protect-the-innocent assumption, if cheating occurs, but the first hop is not a cheater, she must be able to claim the same size reward from the next ISP on the path, and thus pass on the punishment.
Because of this, we have to further generalize our rest of path monitors, so they are less constrained in the case that there are cheaters on either side.
The two possibilities for monitor correspond to which node has the burden of proof.
Assume a set of monitors, and a nowhere-commoditized bilateral contract competition game that always maintains the optimal quality in fixed-route coalition-proof protect-the-innocent equilibrium, with only one node allowed to cheat at a time.
Before we proceed, what does it mean for a game to be desirable from the perspective of service diversity and innovation?
The source"s contract must therefore distinguish when the path quality is normal from when it is lowered by cheating.
Building upon this result, we can construct competition games in which nodes offer various qualities to each other at specified prices, and can credibly commit to meet these performance targets, even allowing for coalitions and a desire to damage other ISPs.
With ROPc, for any feasible and consistent assignment of rest of path qualities to nodes, and any corresponding payment schedule that yields non-negative payoffs, these qualities can be maintained with bilateral contracts in a fixed-route coalition-proof protect-the-innocent equilibrium.
A nice feature of this game is that individual innovation decisions are efficient, meaning that a node will invest in an innovation whenever the investment cost is less than the increased welfare of the optimal data path.
To do so, it can either accept proofs 191 from the source, that the quality is lower than required, or it can accept proofs from the first hop, that the quality is correct.
When the parent node, which has ROPc, submits a proof that the rest of path quality is less than expected, the contract awards her an instantaneous transfer, P, from the downstream node.
In one case, the prior node must prove the suboptimal quality to claim its reward.
Up to this point, we have adopted fixed-route coalition-proof protect-the-innocent equilibrium as our desired solution concept, and shown that ROPc monitors are sufficient to create some competition games that are desirable in terms of service diversity and innovation.
Briefly, we would like to enforce optimal data paths with an equilibrium concept that doesn"t rely on re-routing for punishment, is coalition proof, and doesn"t punish innocent nodes when a coalition cheats.
Definition: A competition game is nowhere-commoditized if for each node, i, not adjacent to D, there is some assignment of qualities and marginal costs to nodes, such that the optimal data path includes i, and i has a positive temptation to cheat.
This is done by writing contracts to punish everyone on the path when the end to end quality drops.
In the case of linear contracts, it is sufficient to require that ∞<CI , and that every node make positive profit under some assignment of qualities and marginal costs.
Strictly speaking, ROPc monitors are not the only way to construct these desirable games.
Select some monetary punishment, P, large enough to prevent any cheating for time t0 (the discounted total payment from the source will work).
Can verify the monitor"s proofs.
5.1 Implementing Monitors Claim 5 should not be interpreted as a statement that each node must compute the rest of path quality locally, without input from other nodes.
It involves the source sharing the proofs it generates with nodes further down the path, which use them to determine bilateral payments.
Hence, i would also have detected a change in quality, so i can claim P from the next node on the path.
Thus, contractible is jointly a property of the monitor and the institutions that must verify its proofs.
During the discovery process, the court subpoenas proofs of the path and of node qualities from the source (ultimately, there must be some threat to ensure the source complies).
Let each node on the path enter into a contract with its parent, which fixes an arbitrary payment schedule so long as the rest of path quality is as prescribed.
For a concrete example, suppose that when node i suspects it is getting poor rest of path quality from its successor, it takes the downstream node to court.
With monitors E2E, ROP, SHOPc i and PRc, and a nowhere-commoditized bilateral contract competition game, the optimal quality cannot be maintained for all assignments of quality and marginal cost, in fixed-route coalition-proof  protect-theinnocent equilibrium.
This property is favorable from an innovation perspective, since firms that invest in high quality will tend to fall on the optimal path, gaining positive payoff.
This ensures that every node is punished sufficiently to make cheating unprofitable.
Hence, the entire discovery process acts as a rest of path monitor, albeit a rather costly monitor in this case.
Yet, without path information, SHOPc i is not sufficient for our first-best innovation result.
We present a simplified version of this claim, by including an assumption that only one node on the path can cheat at a time (though conspirators can still exchange side payments).
Since the source only contracts with the first hop, it must accept this money from the first hop.
Such proofs can be submitted every 0t for the previous interval.
Because the two monitors are similar, it seems likely that they require comparable costs to implement.
Thus, the source must accept some monetary compensation, net of its normal flow payment, when cheating occurs.
This is represented by the following two monitors: SHOPc i : (source-based hop quality) A monitor that gives the source proof of what the quality of node i is.
If submitting the proofs is costly, it seems natural that nodes would prefer to use the ROPc monitor, placing the burden of proof on the upstream node.
The reader may recall that this is how we labeled the packets received monitor, PRc, which allows ISPs to form contracts with per-packet payments.
In the other, the subsequent node must prove that the quality was correct to avoid penalty.
Thus, the combined process is itself a rest of path monitor.
Suppose that node i is not in C. In order for the parent node to claim P from i, it must submit proof that the quality of the path starting at i is not as prescribed.
We will use a very weak assumption, essentially, that the game is not fully commoditized for any node.
For the reasons we gave previously, we believe that this solution concept is less than ideal, since it allows for malicious nodes to deliberately trigger punishments for potential competitors.
The source measures a decrease in quality, and according to her contract, is awarded P from the first hop.
The claim will hold for this entire class of games.
Typically, such mechanisms would call for automatic sharing of proofs, with court intervention only as a last resort.
Next, when cheating occurs, if the payment does not go to the source or destination, it may go to another coalition member, rendering it ineffective.
For node, i, on the optimal path, L, the net payment must equal, essentially, its contribution to the welfare of S, D, and the other nodes.
Any monitor that gives the first hop proof that the quality is correct is a ROPc" monitor.
As the next claim will show, rest of path monitoring is also necessary to construct such games under our solution concept.
By argument similar to that for the source, either the first hop has a ROPc monitor, or the second has a ROPc" monitor.
Proof: First, because of the fixed-route assumption, punishments must be purely monetary.
Proof: Fix any data path consistent with the given rest of path qualities.
The incentive structure of the VCG mechanism is what motivates nodes to report their costs accurately.
This may prove to be a harder task in a future network setting.
It has the following useful property: Claim 4.
Ultimately however, the proof of Claim 5 shows us that each node i"s bilateral contracts require proof of the rest of path quality.
The first hop"s contract with the second must then distinguish when cheating occurs after the first hop.
As the next claim shows, ROPc allows us to create a system of linear (price, quality) contracts under just such an equilibrium.
The only complication is that cheaters can exchange side payments, which makes any money transfers between them redundant.
What we have done, all in all, is constructed a rest of path monitor using SPATHc and SHOPc i as building blocks.
Here, (price, quality) contracts ensure that nodes report their qualities honestly.
Of course, mechanisms can be designed to combine these monitors at much lower cost.
In this order, each node selects a contract to offer to its parents, consisting of a rest of path quality, and a linear price.
If L" is an optimal path in the graph with i removed, the profit flow to i is, ( ) ( ) ∈≠∈ +−− ', ' Lj j ijLj jLL ccququ , (6) where Lq and 'Lq are the qualities of the two paths.
Contracts may plausibly be negotiated by machine, be numerous, even per-flow, and be further complicated by the many dimensions of quality.
Compare the two monitors below: ROPc: gives a node proof that the path quality from the next node to the destination is not correct.
Finally, we note that it is straightforward to derive the full version of the claim, which allows for multiple cheaters.
The proof is given in the appendix.
Similarly, E2Ec and ROPc are contractible versions of the monitors we are now familiar with.
These nodes will not rationally offer the opposing type of proof.
The sequence of payments must end by the destination, so the net outflow of P must come from the nodes in C. This establishes all necessary conditions of the equilibrium.
If the path length is n, the first hop pays nP to the source, the second hop pays ( )Pn 1− to the first, and so forth.
By definition, any monitor that gives the source proof that the path quality is wrong is an ROPc monitor.
Our new monitor includes both the component monitors and whatever distributed algorithmic mechanism exists to make sure nodes share their proofs correctly.
Alternately, we can imagine that players report their private information to a central authority, which then assigns all contracts.
Then for each node, i, not adjacent to D, either i has an ROPc monitor, or i"s children each have an ROPc" monitor.
Extra conditions may be given under which innovation decisions approach perfect efficiency for large innovations.
In this section, we will show how all of these drawbacks can be overcome.
Define a Stackelberg price-quality competition game as follows: Extend the partial order of nodes induced by the graph to any complete ordering, such that downstream nodes appear before their parents.
Hence, ROPc monitors do not exist, and therefore the requirements of Claim 5 cannot hold. 
SPATHc: (source-based path) A monitor that gives the source proof of what the data path is at any time, at least as far as it matches the equilibrium path.
Essentially, ROPc allows for an implementation of (price, quality) contracts.
Finally, for the court to issue a judgment, one party or the other must compile a proof of what the rest of path quality was.
At the end of the previous section, we argued for some desirable properties that we"d like our solution to have.
Unfortunately, the source may end up paying more than the utility of the path.
ROPc": gives a node proof that the path quality from that node to the destination is correct.
In the routing game, each node selects a next hop at every time, consistent with its advertised rest of path quality.
With these monitors, a punishment mechanism can be designed to fulfill the conditions of Claim 5.
This means that there is a net outflow of P from the ISPs as a whole.
The Stackelberg price-quality competition game can be implemented in our model with ROPc monitors, by using the strategy in the proof, above.
As an aside, intuition might dictate that SHOPc i generates more information than ROPc; after all, inferring individual node qualities seems a much harder problem.
In general, however, investments may be over or under rewarded.
Thus, at least one of these monitors must exist.
Contractibility requires that a court, 1.
Can understand what the proofs and contracts represent to the extent required to police illegal activity.
This means 190 that there is a cheater after i.
Using such techniques, our source might learn both individual node qualities and the data path.
Bilateral (price, quality) contracts can be maintained in an equilibrium that is fixed-route and coalition-proof, but not  protectthe-innocent.
Can enforce payments among contracting parties.
We will discuss the full version after the proof.
Other monitors, besides ROPc and ROPc" can still be used, loosely speaking, as building blocks.
Notice that with just E2Ec, a weaker version of Claim 3 holds.
This mechanism can potentially involve external institutions.
With ROPc monitors, we can adapt this mechanism to maximize welfare.
Thus, innocent nodes are not punished.
When a monitor (together with institutional infrastructure) meets these criteria, we will label it with a subscript c, for contractible.
The proof of this demonstrates a useful technique: Claim 6.
Understanding the agreements between companies has traditionally been a matter of reading contracts on paper.
At the end of the last section, we identified several drawbacks that persist in an environment with E2Ev, ROPv, and PRc.
We will call such an equilibrium a fixed-route coalition-proof  protect-theinnocent equilibrium.
The Stackelberg price-quality competition game yields optimal routes in SPE.
Suppose now that a coalition, C, decides to cheat.
For instance, network tomography is concerned with measuring properties of the network interior with tools located at the edge.
For example, contracts could be computed to implement the cost-minimizing VCG mechanism proposed by Feigenbaum, et al.
We defer these interesting mechanisms to future work.
We omit the full analysis here.
Claim 5.
Claim 3.
in [7].
Example 2.
Example 1.
