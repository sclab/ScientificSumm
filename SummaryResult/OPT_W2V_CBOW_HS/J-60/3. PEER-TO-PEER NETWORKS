If Ai reports that he has no copy of the file, then any agent in between might challenge.
In general, if agent B copied a file f from agent A, then agent A knows that agent B holds a copy of the file.
A1 knows that A2 will report yes if and only if she has the file in the next stage, and so the maximum payoff he can gain is at most zero since he cannot expect to get a bonus.
If B has the certificate(A1, f), then he can apply directly to A1 and request the file (if he refuses, then B can go to court).
245 The network mechanism utilizes the chain mechanism in the following way: When agent B requests a file from agent A (at most r − 1 far), then A sends to B the list of his neighbors and the output of the ping protocol to all of these neighbors.
Such a certificate can be recorded and distributed along the network, and so we can treat each agent holding the certificate as an informed agent.
To limit the amount of information to be recorded, we assume that an agent is committed to keep any downloaded file to at least one hour, and so certificates are valid for a limited amount of time.
If A2 has the file it is a weakly undominated strategy to misreport, whether A1 is informed or not: A2"s expected payoff gained by misreporting no ≤ p · (−βp) + (1 − p) · 0 < −C ≤ A2"s payoff if she reports yes.
3.1 Basic Mechanism We start with a mechanism for a network with 3 p-informed agents: B, A1, A2.
We need the assumption that there is a ping protocol that checks whether a neighbor agent is on-line or not (that is, an on-line agent cannot hide himself).
We assume that B is directly connected to A1 and A2.
If Aj sends a certificate(Ak, f) to B, ( j, k ≤ i), then - If certificate(Ak, f) is correct, then t(Ak, Aj) = βp.
Note that this goal cannot be implemented in dominant strategies  without payments (similar to Claim 1, when the type of each agent here is the set of files he holds).
Using digital signatures and acknowledgements, observe that every agent must forward each message, even if it contains a certificate showing that he himself has misreported.
The chain mechanism follows: • Stage i: Agent B forwards a request for the file f to Ai (through {Ak}k≤i).
As in real P2P file sharing  applications, we restrict each request for a file to be forwarded at most r times (that is, downloads are possible only inside a neighborhood of radius r).
We assume that each agent A enters the system if upA · C < downA · V .
In this challenging method - as opposed to [28] - an agent that challenges cannot harm other agents, unless he provides a valid certificate.
We assume that each agent has a digitally signed listing of his current immediate neighbors.
3.2 Chain Networks In a chain network, agent B is directly connected to A1, and Ai is directly connected to agent Ai+1.
The benefit each agent gains by holding a copy of any file is V .
A strategy that survives iterative elimination of weakly dominated strategies is to reply yes if Ai holds the file, and to challenge only with a valid certificate.
Stage 2: Agent B requests the file f from A2.
Assume that we have an acknowledgment protocol to confirm the receipt of a particular message.
Now, when Stage 2 is reached, A2 is the last to report if he has the file.
· If the certificate is correct then tA1,A2 = βp.
• Stage 1: Agent B requests the file f from A1.
This argument can be reasoned also for Stage 1, when A1 reports whether he has the file.
To avoid message dropping, we add the fine (βp +2 ) to be paid by an agent who hasn"t properly forwarded a message.
In this section we describe a simplified Peer-to-Peer  network for file sharing, without payments in equilibrium, using a certificate-based challenging method.
• Otherwise Ai reports no.
- Otherwise, agent B sends A1s no reply to agent A2.
The only cost each agent has is the uploading cost C (induced while transferring a file to an immediate neighbor).
The following basic sequential mechanism is  applicable whenever agent B is not informed and still would like to download the file if it exists in the network.
Clearly if the mechanism ends without  challenging: −C ≤ u(Ai) ≤ 0.
An important design issue that it is not addressed here is the incentives for the information propagation phase. 
- If A1 replies yes then B downloads the file from A1.
Let upA, downA be the numbers of agent A uploads and downloads if he  always cooperates.
Assumptions: We assume an homogeneous system with files of equal size.
In particular, he ignores future scenarios (e.g., whether forwarding or dropping of a packet might affect future demand).
As a result, B downloads the file if some agent holds it, in equilibrium.
• If Ai reports yes, then B downloads f from Ai.
Remark: In this mechanism we assumed that the  environment is p-informed.
∗ Else, A2 sends a certificate(A1, f) to agent B.
And so, challenging with an invalid certificate is always a dominated strategy.
∗ If A2 declares agree then goto the next stage.
All other costs are negligible (e.g., storing the certificates, forwarding messages, providing  acknowledgements, digital signatures, etc).
Switch the roles of the agents A1, A2.
Define tA,B to be the monetary amount that agent A should transfer to B.
We use the same fine, βp, as in the basic mechanism,  because the protocol might end at stage 1 (clearly, the former analysis still applies, since the actual p increases with the number of players).
We denote such information as a certificate(B, f) (we shall omit cryptographic details).
Each agent has a quasilinear utility and only cares about his current bandwidth usage.
3.3 Network Mechanism In this subsection we consider general network structures.
- Else, t(Aj, Ak) = C + .
There are no payments or transfers in equilibrium.
As a result, B can explore the network.
The basic mechanism is budget-balanced  (transfers always sum to zero) and decentralized.
· Else tA2,A1 = |C| + .
Let βp = |C| p + , p ∈ (0, 1].
Claim 6.
Theorem 1.
